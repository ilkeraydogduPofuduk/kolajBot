{"ast":null,"code":"/**\r\n * Telegram Bots API\r\n * Admin: Bot token yönetimi\r\n */\n\nimport api from '../utils/api';\nexport const telegramBotsAPI = {\n  /**\r\n   * Bot listesini getir\r\n   */\n  async getBots() {\n    const response = await api.get('/api/telegram-bots');\n    return response.data;\n  },\n  /**\r\n   * Belirli bir botu getir\r\n   */\n  async getBot(botId) {\n    const response = await api.get(`/api/telegram-bots/${botId}`);\n    return response.data;\n  },\n  /**\r\n   * Yeni bot ekle (Sadece Admin)\r\n   */\n  async createBot(botData) {\n    const response = await api.post('/api/telegram-bots', botData);\n    return response.data;\n  },\n  /**\r\n   * Bot bilgilerini güncelle (Sadece Admin)\r\n   */\n  async updateBot(botId, data) {\n    const response = await api.put(`/api/telegram-bots/${botId}`, data);\n    return response.data;\n  },\n  /**\r\n   * Botu sil (Sadece Admin)\r\n   */\n  async deleteBot(botId) {\n    await api.delete(`/api/telegram-bots/${botId}`);\n  },\n  /**\r\n   * Bot token'ını doğrula\r\n   */\n  async verifyBot(botId) {\n    const response = await api.post(`/api/telegram-bots/${botId}/verify`);\n    return response.data;\n  },\n  /**\r\n   * Botun kanalını keşfet\r\n   */\n  async discoverChannelsForBot(botId) {\n    const response = await api.post(`/api/telegram-bots/${botId}/discover-channels`);\n    return response.data;\n  },\n  /**\r\n   * Bot'a ait kanalları getir\r\n   */\n  async getBotChannels(botId) {\n    const response = await api.get(`/api/telegram-bots/${botId}/channels`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","telegramBotsAPI","getBots","response","get","data","getBot","botId","createBot","botData","post","updateBot","put","deleteBot","delete","verifyBot","discoverChannelsForBot","getBotChannels"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/telegramBots.ts"],"sourcesContent":["/**\r\n * Telegram Bots API\r\n * Admin: Bot token yönetimi\r\n */\r\n\r\nimport api from '../utils/api';\r\n\r\nexport interface TelegramBot {\r\n  id: number;\r\n  bot_name: string;\r\n  bot_username: string;\r\n  bot_user_id?: string;\r\n  is_active: boolean;\r\n  is_verified: boolean;\r\n  last_verified_at?: string;\r\n  created_by: number;\r\n  creator_name?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  channel_count?: number;\r\n}\r\n\r\nexport interface TelegramBotCreate {\r\n  bot_token: string; // Sadece token yeterli, diğer bilgiler otomatik gelecek!\r\n}\r\n\r\nexport interface TelegramBotUpdate {\r\n  bot_name?: string;\r\n  bot_username?: string;\r\n  bot_token?: string;\r\n  is_active?: boolean;\r\n}\r\n\r\nexport interface TelegramBotListResponse {\r\n  bots: TelegramBot[];\r\n  total: number;\r\n}\r\n\r\nexport interface TelegramBotVerifyResponse {\r\n  success: boolean;\r\n  message: string;\r\n  bot_info?: {\r\n    id: number;\r\n    first_name: string;\r\n    username: string;\r\n    can_join_groups: boolean;\r\n    can_read_all_group_messages: boolean;\r\n  };\r\n}\r\n\r\nexport interface TelegramBotResponseExtended {\r\n  success: boolean;\r\n  bot: TelegramBot;\r\n  message: string;\r\n  discovered_channels_count?: number;\r\n  channel_count?: number;\r\n}\r\n\r\nexport interface BotChannelListResponse {\r\n  channels: Array<{\r\n    id: number;\r\n    name: string;\r\n    channel_username?: string;\r\n    member_count: number;\r\n    is_active: boolean;\r\n    brand_id?: number;\r\n    brand_name?: string;\r\n    assigned_users: Array<{\r\n      id: number;\r\n      name: string;\r\n      email: string;\r\n    }>;\r\n  }>;\r\n  total: number;\r\n}\r\n\r\nexport interface BotDeleteInfoResponse {\r\n  bot_id: number;\r\n  bot_name: string;\r\n  bot_username: string;\r\n  channel_count: number;\r\n  warning_message: string;\r\n}\r\n\r\nexport interface TelegramBotsAPI {\r\n  getBots(): Promise<TelegramBotListResponse>;\r\n  getBot(botId: number): Promise<TelegramBot>;\r\n  getBotChannels(botId: number): Promise<BotChannelListResponse>;\r\n  getBotDeleteInfo(botId: number): Promise<BotDeleteInfoResponse>;\r\n  createBot(botData: TelegramBotCreate): Promise<TelegramBotResponseExtended>;\r\n  updateBot(botId: number, data: TelegramBotUpdate): Promise<TelegramBot>;\r\n  deleteBot(botId: number): Promise<void>;\r\n  verifyBot(botId: number): Promise<TelegramBotVerifyResponse>;\r\n  discoverChannelsForBot(botId: number): Promise<any>;\r\n}\r\n\r\nexport const telegramBotsAPI: TelegramBotsAPI = {\r\n  /**\r\n   * Bot listesini getir\r\n   */\r\n  async getBots(): Promise<TelegramBotListResponse> {\r\n    const response = await api.get('/api/telegram-bots');\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Belirli bir botu getir\r\n   */\r\n  async getBot(botId: number): Promise<TelegramBot> {\r\n    const response = await api.get(`/api/telegram-bots/${botId}`);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Yeni bot ekle (Sadece Admin)\r\n   */\r\n  async createBot(botData: TelegramBotCreate): Promise<TelegramBotResponseExtended> {\r\n    const response = await api.post('/api/telegram-bots', botData);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Bot bilgilerini güncelle (Sadece Admin)\r\n   */\r\n  async updateBot(botId: number, data: TelegramBotUpdate): Promise<TelegramBot> {\r\n    const response = await api.put(`/api/telegram-bots/${botId}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Botu sil (Sadece Admin)\r\n   */\r\n  async deleteBot(botId: number): Promise<void> {\r\n    await api.delete(`/api/telegram-bots/${botId}`);\r\n  },\r\n\r\n  /**\r\n   * Bot token'ını doğrula\r\n   */\r\n  async verifyBot(botId: number): Promise<TelegramBotVerifyResponse> {\r\n    const response = await api.post(`/api/telegram-bots/${botId}/verify`);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Botun kanalını keşfet\r\n   */\r\n  async discoverChannelsForBot(botId: number): Promise<any> {\r\n    const response = await api.post(`/api/telegram-bots/${botId}/discover-channels`);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Bot'a ait kanalları getir\r\n   */\r\n  async getBotChannels(botId: number): Promise<BotChannelListResponse> {\r\n    const response = await api.get(`/api/telegram-bots/${botId}/channels`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,cAAc;AA2F9B,OAAO,MAAMC,eAAgC,GAAG;EAC9C;AACF;AACA;EACE,MAAMC,OAAOA,CAAA,EAAqC;IAChD,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMC,MAAMA,CAACC,KAAa,EAAwB;IAChD,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,sBAAsBG,KAAK,EAAE,CAAC;IAC7D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMG,SAASA,CAACC,OAA0B,EAAwC;IAChF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,oBAAoB,EAAED,OAAO,CAAC;IAC9D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMM,SAASA,CAACJ,KAAa,EAAEF,IAAuB,EAAwB;IAC5E,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACY,GAAG,CAAC,sBAAsBL,KAAK,EAAE,EAAEF,IAAI,CAAC;IACnE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMQ,SAASA,CAACN,KAAa,EAAiB;IAC5C,MAAMP,GAAG,CAACc,MAAM,CAAC,sBAAsBP,KAAK,EAAE,CAAC;EACjD,CAAC;EAED;AACF;AACA;EACE,MAAMQ,SAASA,CAACR,KAAa,EAAsC;IACjE,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,sBAAsBH,KAAK,SAAS,CAAC;IACrE,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMW,sBAAsBA,CAACT,KAAa,EAAgB;IACxD,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,sBAAsBH,KAAK,oBAAoB,CAAC;IAChF,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMY,cAAcA,CAACV,KAAa,EAAmC;IACnE,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,sBAAsBG,KAAK,WAAW,CAAC;IACtE,OAAOJ,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}