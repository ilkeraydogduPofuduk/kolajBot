{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{authAPI}from'../api/auth';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Check if user is logged in on app start\nuseEffect(()=>{const initAuth=async()=>{const token=localStorage.getItem('access_token');if(token){try{const userData=await authAPI.getCurrentUser();setUser(userData);}catch(error){// Token is invalid, clear it\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');setUser(null);}}else{setUser(null);}setLoading(false);};initAuth();},[]);const login=async(email,password,twoFACode)=>{try{setLoading(true);const response=await authAPI.login({email,password,two_fa_code:twoFACode});// Store tokens\nlocalStorage.setItem('access_token',response.access_token);localStorage.setItem('refresh_token',response.refresh_token);// Set user data\nsetUser(response.user);toast.success('Giriş başarılı!');return{success:true,user:response.user};}catch(error){var _error$response,_error$response$data;// Return error message to calling component\nconst errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||error.message||'Giriş başarısız';return{success:false,error:errorMessage};}finally{setLoading(false);}};const logout=()=>{// Clear tokens and user data\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');setUser(null);// Call logout API (optional)\nauthAPI.logout().catch(()=>{// Ignore errors on logout\n});toast.success('Başarıyla çıkış yapıldı');};const refreshUser=async()=>{try{const userData=await authAPI.getCurrentUser();setUser(userData);}catch(error){// If refresh fails, user might be logged out\nlogout();}};const value={user,loading,login,logout,refreshUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","toast","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","initAuth","token","localStorage","getItem","userData","getCurrentUser","error","removeItem","login","email","password","twoFACode","response","two_fa_code","setItem","access_token","refresh_token","success","_error$response","_error$response$data","errorMessage","data","detail","message","logout","catch","refreshUser","value","Provider"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { authAPI, User } from '../api/auth';\nimport toast from 'react-hot-toast';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string, twoFACode?: string) => Promise<{success: boolean, error?: string, user?: User}>;\n  logout: () => void;\n  refreshUser: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          const userData = await authAPI.getCurrentUser();\n          setUser(userData);\n        } catch (error: any) {\n          // Token is invalid, clear it\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          setUser(null);\n        }\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (email: string, password: string, twoFACode?: string): Promise<{success: boolean, error?: string, user?: User}> => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login({\n        email,\n        password,\n        two_fa_code: twoFACode,\n      });\n\n      // Store tokens\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n\n      // Set user data\n      setUser(response.user);\n\n      toast.success('Giriş başarılı!');\n\n      return {\n        success: true,\n        user: response.user\n      };\n    } catch (error: any) {\n      // Return error message to calling component\n      const errorMessage = error.response?.data?.detail || error.message || 'Giriş başarısız';\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const logout = () => {\n    // Clear tokens and user data\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setUser(null);\n    \n    // Call logout API (optional)\n    authAPI.logout().catch(() => {\n      // Ignore errors on logout\n    });\n    \n    toast.success('Başarıyla çıkış yapıldı');\n  };\n\n  const refreshUser = async () => {\n    try {\n      const userData = await authAPI.getCurrentUser();\n      setUser(userData);\n    } catch (error: any) {\n      // If refresh fails, user might be logged out\n      logout();\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    logout,\n    refreshUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}