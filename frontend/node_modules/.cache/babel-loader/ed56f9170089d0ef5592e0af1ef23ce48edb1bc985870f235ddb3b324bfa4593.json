{"ast":null,"code":"import _objectSpread from\"C:/Users/ilker/Desktop/aibrands/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{X,Send,AlertCircle}from'lucide-react';import{socialMediaChannelsAPI}from'../../api/socialMediaChannels';import{brandsAPI}from'../../api/brands';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DynamicChannelModal=_ref=>{let{isOpen,onClose,platform,onSuccess,editingChannel}=_ref;const[formData,setFormData]=useState({});const[brands,setBrands]=useState([]);const[addingChannel,setAddingChannel]=useState(false);const[discovering,setDiscovering]=useState(false);const[discoveredChats,setDiscoveredChats]=useState([]);const[botInfo,setBotInfo]=useState(null);const[selectedChat,setSelectedChat]=useState(null);const[selectedChats,setSelectedChats]=useState({});const[step,setStep]=useState('token');useEffect(()=>{if(isOpen&&platform){loadBrands();initializeFormData();}},[isOpen,platform,editingChannel]);// eslint-disable-line react-hooks/exhaustive-deps\nconst loadBrands=async()=>{try{const response=await brandsAPI.getBrands(1,1000);setBrands(response.brands);}catch(error){console.error('Error loading brands:',error);}};const initializeFormData=()=>{if(editingChannel){setFormData({brand_id:editingChannel.brand_id,bot_token:editingChannel.bot_token||''});}else{setFormData({brand_id:0,bot_token:''});}setSelectedChat(null);setStep('token');setDiscoveredChats([]);setBotInfo(null);};const handleInputChange=(fieldName,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[fieldName]:value}));// Bot token değiştiğinde otomatik keşfet\nif(fieldName==='bot_token'&&value&&value.length>35){// Kısa bir gecikme ile keşfet (kullanıcı yazmayı bitirsin)\nsetTimeout(()=>{if(formData.bot_token===value){// Kullanıcı hala aynı token'ı yazıyor mu?\ndiscoverChannels(value);}},1000);}};const discoverChannels=async token=>{setDiscovering(true);try{const res=await socialMediaChannelsAPI.discoverTelegramChats(token);setDiscoveredChats(res.chats||[]);setBotInfo(res.bot_info);// API'den gelen mesajı kontrol et\nif(res.message){toast(res.message,{icon:'ℹ️',duration:6000});// Talimatları göster\nif(res.instructions&&res.instructions.length>0){toast(res.instructions.join(' • '),{icon:'💡',duration:8000});}}if(!res.chats||res.chats.length===0){// Otomatik keşif başarısız, manuel giriş seçeneği sun\nsetStep('manual');}else{toast.success(\"\".concat(res.chats.length,\" kanal bulundu\"));setStep('channels');}}catch(e){var _e$response;const status=e===null||e===void 0?void 0:(_e$response=e.response)===null||_e$response===void 0?void 0:_e$response.status;if(status===401){toast.error('Oturum süresi doldu. Lütfen tekrar giriş yapın.');}else{var _e$response2,_e$response2$data;const msg=(e===null||e===void 0?void 0:(_e$response2=e.response)===null||_e$response2===void 0?void 0:(_e$response2$data=_e$response2.data)===null||_e$response2$data===void 0?void 0:_e$response2$data.detail)||'Bot token geçersiz';toast.error(\"\\u274C \".concat(msg));}setStep('token');}finally{setDiscovering(false);}};const toggleSelectChat=chat=>{setSelectedChats(prev=>{const next=_objectSpread({},prev);if(next[chat.chat_id]){delete next[chat.chat_id];}else{next[chat.chat_id]=chat;}return next;});};const proceedToBrand=()=>{const first=Object.values(selectedChats)[0];if(!first){toast.error('En az bir kanal seçin');return;}setSelectedChat(first);setStep('brand');};const handleAddSelectedChannels=async()=>{if(!formData.bot_token||!formData.brand_id){toast.error('Bot token ve marka seçimi gerekli');return;}const chats=Object.values(selectedChats);if(!chats.length){toast.error('En az bir kanal seçin');return;}setAddingChannel(true);let successCount=0;let skippedCount=0;for(const chat of chats){// Ön kontrol: private sohbetler kanal olarak eklenemez\nif(chat.type==='private'){skippedCount+=1;toast('ℹ️ Özel sohbetler eklenemez: '+(chat.username||chat.chat_id),{icon:'ℹ️'});continue;}try{const username=chat.username?\"@\".concat(chat.username):null;const chatId=chat.chat_id?String(chat.chat_id):undefined;// Uyarı: grup/kanal chat_id genelde -100 ile başlar\nif(chatId&&!String(chatId).startsWith('-')){toast('ℹ️ Bu sohbet kimliği kanal/grup olmayabilir: '+chatId,{icon:'ℹ️'});}await socialMediaChannelsAPI.addChannelByUsername(formData.bot_token,username,formData.brand_id,chatId);successCount+=1;toast.success(\"\".concat(chat.title||chat.username||chat.chat_id,\": eklendi\"));}catch(e){var _e$response3,_e$response3$data;const detail=(e===null||e===void 0?void 0:(_e$response3=e.response)===null||_e$response3===void 0?void 0:(_e$response3$data=_e$response3.data)===null||_e$response3$data===void 0?void 0:_e$response3$data.detail)||'';if(typeof detail==='string'&&detail.includes('zaten eklenmiş')){// Mevcutta varsa başarı sayalım ve uyarı verelim\nsuccessCount+=1;skippedCount+=1;toast(\"\\u2139\\uFE0F \".concat(chat.title||chat.username||chat.chat_id,\": zaten ekli\"),{icon:'ℹ️'});}else if(typeof detail==='string'&&(detail.includes('yönetici')||detail.toLowerCase().includes('admin'))){toast.error(\"\\u274C \".concat(chat.title||chat.username||chat.chat_id,\": Bot bu kanalda y\\xF6netici de\\u011Fil\"));}else if(typeof detail==='string'&&(detail.toLowerCase().includes('bulunamadı')||detail.toLowerCase().includes('not found'))){toast.error(\"\\u274C \".concat(chat.title||chat.username||chat.chat_id,\": Kanal bulunamad\\u0131\"));}else{const msg=detail||'Kanal eklenemedi';toast.error(\"\\u274C \".concat(chat.title||chat.username||chat.chat_id,\": \").concat(msg));}}}setAddingChannel(false);if(successCount>0){const addedOnly=successCount-skippedCount;if(addedOnly>0){toast.success(\"\".concat(addedOnly,\" yeni kanal eklendi\"));}if(skippedCount>0){toast(\"\\u2139\\uFE0F \".concat(skippedCount,\" kanal zaten sistemdeydi\"),{icon:'ℹ️'});}onSuccess();setSelectedChats({});onClose();}};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 rounded-lg bg-blue-100\",children:/*#__PURE__*/_jsx(Send,{className:\"h-5 w-5 text-blue-600\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold\",children:editingChannel?'Kanal Düzenle':'Telegram Kanalı Ekle'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Telegram bot bilgilerini girin\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"p-1 hover:bg-gray-100 rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(X,{size:20,className:\"text-gray-500\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[step==='token'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Bot Token *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:formData.bot_token||'',onChange:e=>handleInputChange('bot_token',e.target.value),placeholder:\"123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789\",className:\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",required:true}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"BotFather'dan ald\\u0131\\u011F\\u0131n\\u0131z tokeni girin. Token girildikten sonra otomatik olarak kanallar ke\\u015Ffedilecek.\"})]}),discovering&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center gap-2 text-blue-600\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"}),\"Kanallar ke\\u015Ffediliyor...\"]})})]}),step==='channels'&&/*#__PURE__*/_jsxs(_Fragment,{children:[botInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 border border-green-200 rounded-lg p-3 mb-4\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-800\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bot:\"}),\" \",botInfo.first_name,\" (@\",botInfo.username,\")\"]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-3\",children:[\"Botun Eri\\u015Febildi\\u011Fi Kanallar (\",discoveredChats.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-60 overflow-y-auto space-y-2\",children:discoveredChats.map(chat=>{const checked=Boolean(selectedChats[chat.chat_id]);return/*#__PURE__*/_jsx(\"label\",{className:\"flex items-center justify-between p-3 border rounded-lg cursor-pointer transition-colors \".concat(checked?'border-blue-500 bg-blue-50':'border-gray-200 hover:border-gray-300'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"h-4 w-4\",checked:checked,onChange:()=>toggleSelectChat(chat)}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:chat.title||(chat.username?\"@\".concat(chat.username):\"Kanal \".concat(chat.chat_id))}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[chat.type==='channel'?'Kanal':chat.type==='supergroup'?'Süper Grup':'Kanal',chat.member_count&&\" \\u2022 \".concat(chat.member_count,\" \\xFCye\"),chat.is_admin&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\",children:\"Admin\"})]})]})]})},chat.chat_id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{onClick:proceedToBrand,className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg\",children:\"Se\\xE7ilenlerle Devam Et\"})})]})]}),step==='brand'&&selectedChat&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded-lg p-3\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-800\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Se\\xE7ilen Kanal:\"}),\" \",selectedChat.title||(selectedChat.username?\"@\".concat(selectedChat.username):\"Kanal \".concat(selectedChat.chat_id))]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Marka *\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.brand_id||0,onChange:e=>handleInputChange('brand_id',parseInt(e.target.value)),className:\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:0,children:\"Marka se\\xE7in\"}),brands.map(brand=>/*#__PURE__*/_jsx(\"option\",{value:brand.id,children:brand.name},brand.id))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 border border-green-200 rounded-lg p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4 text-green-600 mt-0.5 flex-shrink-0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-green-800\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:\"Haz\\u0131r!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1\",children:\"Kanal ad\\u0131, \\xFCye say\\u0131s\\u0131 ve di\\u011Fer bilgiler otomatik olarak \\xE7ekilecek.\"})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3 pt-4\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"flex-1 px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\",children:\"\\u0130ptal\"}),step==='token'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>discoverChannels(formData.bot_token),disabled:!formData.bot_token||discovering,className:\"flex-1 flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",children:discovering?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"}),\"Ke\\u015Ffediliyor...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Send,{size:16}),\"Kanallar\\u0131 Ke\\u015Ffet\"]})}),step==='channels'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setStep('token'),className:\"flex-1 px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\",children:\"Geri\"}),step==='brand'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setStep('channels'),className:\"flex-1 px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\",children:\"Geri\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddSelectedChannels,disabled:addingChannel||!formData.brand_id,className:\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",children:addingChannel?'Ekleniyor...':'Seçilenleri Ekle'})]})]})]})]})});};export default DynamicChannelModal;","map":{"version":3,"names":["React","useState","useEffect","X","Send","AlertCircle","socialMediaChannelsAPI","brandsAPI","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DynamicChannelModal","_ref","isOpen","onClose","platform","onSuccess","editingChannel","formData","setFormData","brands","setBrands","addingChannel","setAddingChannel","discovering","setDiscovering","discoveredChats","setDiscoveredChats","botInfo","setBotInfo","selectedChat","setSelectedChat","selectedChats","setSelectedChats","step","setStep","loadBrands","initializeFormData","response","getBrands","error","console","brand_id","bot_token","handleInputChange","fieldName","value","prev","_objectSpread","length","setTimeout","discoverChannels","token","res","discoverTelegramChats","chats","bot_info","message","icon","duration","instructions","join","success","concat","e","_e$response","status","_e$response2","_e$response2$data","msg","data","detail","toggleSelectChat","chat","next","chat_id","proceedToBrand","first","Object","values","handleAddSelectedChannels","successCount","skippedCount","type","username","chatId","String","undefined","startsWith","addChannelByUsername","title","_e$response3","_e$response3$data","includes","toLowerCase","addedOnly","className","children","onClick","size","onChange","target","placeholder","required","first_name","map","checked","Boolean","member_count","is_admin","parseInt","brand","id","name","disabled"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/components/modals/DynamicChannelModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, Send, AlertCircle } from 'lucide-react';\nimport { socialMediaChannelsAPI } from '../../api/socialMediaChannels';\nimport { brandsAPI } from '../../api/brands';\nimport toast from 'react-hot-toast';\n\n\ninterface ChannelModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  platform: 'telegram' | null;\n  onSuccess: () => void;\n  editingChannel?: any;\n}\n\nconst DynamicChannelModal: React.FC<ChannelModalProps> = ({\n  isOpen,\n  onClose,\n  platform,\n  onSuccess,\n  editingChannel\n}) => {\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [brands, setBrands] = useState<any[]>([]);\n  const [addingChannel, setAddingChannel] = useState(false);\n  const [discovering, setDiscovering] = useState(false);\n  const [discoveredChats, setDiscoveredChats] = useState<any[]>([]);\n  const [botInfo, setBotInfo] = useState<any>(null);\n  const [selectedChat, setSelectedChat] = useState<any>(null);\n  const [selectedChats, setSelectedChats] = useState<Record<string, any>>({});\n  const [step, setStep] = useState<'token' | 'channels' | 'manual' | 'brand'>('token');\n\n  useEffect(() => {\n    if (isOpen && platform) {\n      loadBrands();\n      initializeFormData();\n    }\n  }, [isOpen, platform, editingChannel]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n  const loadBrands = async () => {\n    try {\n      const response = await brandsAPI.getBrands(1, 1000);\n      setBrands(response.brands);\n    } catch (error) {\n      console.error('Error loading brands:', error);\n    }\n  };\n\n  const initializeFormData = () => {\n    if (editingChannel) {\n      setFormData({\n        brand_id: editingChannel.brand_id,\n        bot_token: editingChannel.bot_token || ''\n      });\n    } else {\n      setFormData({\n        brand_id: 0,\n        bot_token: ''\n      });\n    }\n    setSelectedChat(null);\n    setStep('token');\n    setDiscoveredChats([]);\n    setBotInfo(null);\n  };\n\n\n\n\n  const handleInputChange = (fieldName: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n\n    // Bot token değiştiğinde otomatik keşfet\n    if (fieldName === 'bot_token' && value && value.length > 35) {\n      // Kısa bir gecikme ile keşfet (kullanıcı yazmayı bitirsin)\n      setTimeout(() => {\n        if (formData.bot_token === value) { // Kullanıcı hala aynı token'ı yazıyor mu?\n          discoverChannels(value);\n        }\n      }, 1000);\n    }\n  };\n\n  const discoverChannels = async (token: string) => {\n    setDiscovering(true);\n    try {\n      const res = await socialMediaChannelsAPI.discoverTelegramChats(token);\n      setDiscoveredChats(res.chats || []);\n      setBotInfo(res.bot_info);\n      \n      // API'den gelen mesajı kontrol et\n      if (res.message) {\n        toast(res.message, { \n          icon: 'ℹ️',\n          duration: 6000 \n        });\n        \n        // Talimatları göster\n        if (res.instructions && res.instructions.length > 0) {\n          toast(res.instructions.join(' • '), {\n            icon: '💡',\n            duration: 8000\n          });\n        }\n      }\n      \n      if (!res.chats || res.chats.length === 0) {\n        // Otomatik keşif başarısız, manuel giriş seçeneği sun\n        setStep('manual');\n      } else {\n        toast.success(`${res.chats.length} kanal bulundu`);\n        setStep('channels');\n      }\n    } catch (e: any) {\n      const status = e?.response?.status;\n      if (status === 401) {\n        toast.error('Oturum süresi doldu. Lütfen tekrar giriş yapın.');\n      } else {\n        const msg = e?.response?.data?.detail || 'Bot token geçersiz';\n        toast.error(`❌ ${msg}`);\n      }\n      setStep('token');\n    } finally {\n      setDiscovering(false);\n    }\n  };\n\n  const toggleSelectChat = (chat: any) => {\n    setSelectedChats(prev => {\n      const next = { ...prev } as Record<string, any>;\n      if (next[chat.chat_id]) {\n        delete next[chat.chat_id];\n      } else {\n        next[chat.chat_id] = chat;\n      }\n      return next;\n    });\n  };\n\n  const proceedToBrand = () => {\n    const first = Object.values(selectedChats)[0];\n    if (!first) {\n      toast.error('En az bir kanal seçin');\n      return;\n    }\n    setSelectedChat(first);\n    setStep('brand');\n  };\n\n  const handleAddSelectedChannels = async () => {\n    if (!formData.bot_token || !formData.brand_id) {\n      toast.error('Bot token ve marka seçimi gerekli');\n      return;\n    }\n    const chats = Object.values(selectedChats);\n    if (!chats.length) {\n      toast.error('En az bir kanal seçin');\n      return;\n    }\n    setAddingChannel(true);\n    let successCount = 0;\n    let skippedCount = 0;\n    for (const chat of chats) {\n      // Ön kontrol: private sohbetler kanal olarak eklenemez\n      if (chat.type === 'private') {\n        skippedCount += 1;\n        toast('ℹ️ Özel sohbetler eklenemez: ' + (chat.username || chat.chat_id), { icon: 'ℹ️' });\n        continue;\n      }\n      try {\n        const username = chat.username ? `@${chat.username}` : null;\n        const chatId = chat.chat_id ? String(chat.chat_id) : undefined;\n        // Uyarı: grup/kanal chat_id genelde -100 ile başlar\n        if (chatId && !String(chatId).startsWith('-')) {\n          toast('ℹ️ Bu sohbet kimliği kanal/grup olmayabilir: ' + chatId, { icon: 'ℹ️' });\n        }\n        await socialMediaChannelsAPI.addChannelByUsername(\n          formData.bot_token,\n          username,\n          formData.brand_id,\n          chatId\n        );\n        successCount += 1;\n        toast.success(`${chat.title || chat.username || chat.chat_id}: eklendi`);\n      } catch (e: any) {\n        const detail = e?.response?.data?.detail || '';\n        if (typeof detail === 'string' && detail.includes('zaten eklenmiş')) {\n          // Mevcutta varsa başarı sayalım ve uyarı verelim\n          successCount += 1;\n          skippedCount += 1;\n          toast(`ℹ️ ${chat.title || chat.username || chat.chat_id}: zaten ekli`, { icon: 'ℹ️' });\n        } else if (typeof detail === 'string' && (detail.includes('yönetici') || detail.toLowerCase().includes('admin'))) {\n          toast.error(`❌ ${chat.title || chat.username || chat.chat_id}: Bot bu kanalda yönetici değil`);\n        } else if (typeof detail === 'string' && (detail.toLowerCase().includes('bulunamadı') || detail.toLowerCase().includes('not found'))) {\n          toast.error(`❌ ${chat.title || chat.username || chat.chat_id}: Kanal bulunamadı`);\n        } else {\n          const msg = detail || 'Kanal eklenemedi';\n          toast.error(`❌ ${chat.title || chat.username || chat.chat_id}: ${msg}`);\n        }\n      }\n    }\n    setAddingChannel(false);\n    if (successCount > 0) {\n      const addedOnly = successCount - skippedCount;\n      if (addedOnly > 0) {\n        toast.success(`${addedOnly} yeni kanal eklendi`);\n      }\n      if (skippedCount > 0) {\n        toast(`ℹ️ ${skippedCount} kanal zaten sistemdeydi`, { icon: 'ℹ️' });\n      }\n      onSuccess();\n      setSelectedChats({});\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 rounded-lg bg-blue-100\">\n              <Send className=\"h-5 w-5 text-blue-600\" />\n            </div>\n            <div>\n              <h2 className=\"text-lg font-semibold\">\n                {editingChannel ? 'Kanal Düzenle' : 'Telegram Kanalı Ekle'}\n              </h2>\n              <p className=\"text-sm text-gray-600\">\n                Telegram bot bilgilerini girin\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-1 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <X size={20} className=\"text-gray-500\" />\n          </button>\n        </div>\n\n        <div className=\"space-y-6\">\n          {/* Step 1: Bot Token */}\n          {step === 'token' && (\n            <>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Bot Token *\n                </label>\n                <input\n                  type=\"password\"\n                  value={formData.bot_token || ''}\n                  onChange={(e) => handleInputChange('bot_token', e.target.value)}\n                  placeholder=\"123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  BotFather'dan aldığınız tokeni girin. Token girildikten sonra otomatik olarak kanallar keşfedilecek.\n                </p>\n              </div>\n\n              {discovering && (\n                <div className=\"text-center py-4\">\n                  <div className=\"inline-flex items-center gap-2 text-blue-600\">\n                    <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n                    Kanallar keşfediliyor...\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          {/* Step 2: Channel Selection */}\n          {step === 'channels' && (\n            <>\n              {botInfo && (\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mb-4\">\n                  <p className=\"text-sm text-green-800\">\n                    <strong>Bot:</strong> {botInfo.first_name} (@{botInfo.username})\n                  </p>\n                </div>\n              )}\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  Botun Erişebildiği Kanallar ({discoveredChats.length})\n                </h3>\n                <div className=\"max-h-60 overflow-y-auto space-y-2\">\n                  {discoveredChats.map((chat) => {\n                    const checked = Boolean(selectedChats[chat.chat_id]);\n                    return (\n                      <label\n                        key={chat.chat_id}\n                        className={`flex items-center justify-between p-3 border rounded-lg cursor-pointer transition-colors ${\n                          checked ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                      >\n                        <div className=\"flex items-center gap-3\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-4 w-4\"\n                            checked={checked}\n                            onChange={() => toggleSelectChat(chat)}\n                          />\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">\n                              {chat.title || (chat.username ? `@${chat.username}` : `Kanal ${chat.chat_id}`)}\n                            </h4>\n                            <p className=\"text-sm text-gray-500\">\n                              {chat.type === 'channel' ? 'Kanal' : chat.type === 'supergroup' ? 'Süper Grup' : 'Kanal'}\n                              {chat.member_count && ` • ${chat.member_count} üye`}\n                              {chat.is_admin && (\n                                <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\">\n                                  Admin\n                                </span>\n                              )}\n                            </p>\n                          </div>\n                        </div>\n                      </label>\n                    );\n                  })}\n                </div>\n                <div className=\"mt-3 flex justify-end\">\n                  <button\n                    onClick={proceedToBrand}\n                    className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg\"\n                  >\n                    Seçilenlerle Devam Et\n                  </button>\n                </div>\n              </div>\n            </>\n          )}\n\n          {/* Step 3: Brand Selection */}\n          {step === 'brand' && selectedChat && (\n            <>\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n                <p className=\"text-sm text-blue-800\">\n                  <strong>Seçilen Kanal:</strong> {selectedChat.title || (selectedChat.username ? `@${selectedChat.username}` : `Kanal ${selectedChat.chat_id}`)}\n                </p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Marka *\n                </label>\n                <select\n                  value={formData.brand_id || 0}\n                  onChange={(e) => handleInputChange('brand_id', parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                >\n                  <option value={0}>Marka seçin</option>\n                  {brands.map(brand => (\n                    <option key={brand.id} value={brand.id}>{brand.name}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n                <div className=\"flex items-start gap-2\">\n                  <AlertCircle className=\"h-4 w-4 text-green-600 mt-0.5 flex-shrink-0\" />\n                  <div className=\"text-sm text-green-800\">\n                    <p className=\"font-medium\">Hazır!</p>\n                    <p className=\"mt-1\">\n                      Kanal adı, üye sayısı ve diğer bilgiler otomatik olarak çekilecek.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n\n          {/* Butonlar */}\n          <div className=\"flex gap-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-1 px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              İptal\n            </button>\n            \n            {step === 'token' && (\n              <button\n                onClick={() => discoverChannels(formData.bot_token)}\n                disabled={!formData.bot_token || discovering}\n                className=\"flex-1 flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {discovering ? (\n                  <>\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                    Keşfediliyor...\n                  </>\n                ) : (\n                  <>\n                    <Send size={16} />\n                    Kanalları Keşfet\n                  </>\n                )}\n              </button>\n            )}\n\n            {step === 'channels' && (\n              <button\n                onClick={() => setStep('token')}\n                className=\"flex-1 px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                Geri\n              </button>\n            )}\n\n            {step === 'brand' && (\n              <>\n                <button\n                  onClick={() => setStep('channels')}\n                  className=\"flex-1 px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  Geri\n                </button>\n                <button\n                  onClick={handleAddSelectedChannels}\n                  disabled={addingChannel || !formData.brand_id}\n                  className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {addingChannel ? 'Ekleniyor...' : 'Seçilenleri Ekle'}\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicChannelModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}