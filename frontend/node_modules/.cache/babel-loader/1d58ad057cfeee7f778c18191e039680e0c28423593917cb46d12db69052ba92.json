{"ast":null,"code":"import _objectSpread from\"C:/Users/ilker/Desktop/aibrands/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\r\n * usePageTexts Hook\r\n * Sayfa metinlerini yöneten hook\r\n */import{useState,useEffect,useCallback}from'react';const defaultTexts={// Common texts\n'loading':'Yükleniyor...','error':'Hata oluştu','success':'Başarılı','save':'Kaydet','cancel':'İptal','delete':'Sil','edit':'Düzenle','add':'Ekle','search':'Ara','filter':'Filtrele','clear':'Temizle',// Employee management\n'employees':'Çalışanlar','addEmployee':'Çalışan Ekle','editEmployee':'Çalışan Düzenle','deleteEmployee':'Çalışan Sil','employeeName':'Çalışan Adı','employeeEmail':'E-posta','employeePhone':'Telefon','employeeRole':'Rol','employeeStatus':'Durum','active':'Aktif','inactive':'Pasif',// Product management\n'products':'Ürünler','addProduct':'Ürün Ekle','editProduct':'Ürün Düzenle','deleteProduct':'Ürün Sil','productName':'Ürün Adı','productCode':'Ürün Kodu','productPrice':'Fiyat','productStock':'Stok','productCategory':'Kategori',// Brand management\n'brands':'Markalar','addBrand':'Marka Ekle','editBrand':'Marka Düzenle','deleteBrand':'Marka Sil','brandName':'Marka Adı','brandDescription':'Açıklama',// Settings\n'settings':'Ayarlar','generalSettings':'Genel Ayarlar','urlSettings':'URL Ayarları','saveSettings':'Ayarları Kaydet','resetSettings':'Ayarları Sıfırla',// Media gallery\n'mediaGallery':'Medya Galerisi','uploadImage':'Resim Yükle','selectImage':'Resim Seç','imagePreview':'Resim Önizleme',// Social media\n'socialMedia':'Sosyal Medya','channels':'Kanallar','addChannel':'Kanal Ekle','editChannel':'Kanal Düzenle','deleteChannel':'Kanal Sil','channelName':'Kanal Adı','channelType':'Kanal Türü','channelStatus':'Durum',// Employee requests\n'employee_requests':'Çalışan Talepleri','add_employee_request':'Çalışan Talebi Oluştur',// My employees\n'my_employees':'Çalışanlarım','my_employees_description':'Markalarınıza bağlı çalışanları görüntüleyin ve yönetin',// Request logs\n'requestLogs':'İstek Kayıtları','auditLogs':'Denetim Kayıtları','logDetails':'Kayıt Detayları','filterLogs':'Kayıtları Filtrele','exportLogs':'Kayıtları Dışa Aktar'};export const usePageTexts=pageKey=>{const[texts,setTexts]=useState(defaultTexts);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{// Load page-specific texts if pageKey is provided\nif(pageKey){loadPageTexts(pageKey);}},[pageKey]);const loadPageTexts=async page=>{try{setLoading(true);setError(null);// In a real app, this would fetch from an API\n// For now, we'll use the default texts\nconst pageTexts=getPageSpecificTexts(page);setTexts(prevTexts=>_objectSpread(_objectSpread({},prevTexts),pageTexts));}catch(err){setError(err instanceof Error?err.message:'Failed to load texts');}finally{setLoading(false);}};const getPageSpecificTexts=page=>{const pageTexts={'employees':{'pageTitle':'Çalışan Yönetimi','pageDescription':'Çalışanları yönetin ve düzenleyin','noEmployees':'Henüz çalışan bulunmuyor','addNewEmployee':'Yeni Çalışan Ekle'},'products':{'pageTitle':'Ürün Yönetimi','pageDescription':'Ürünleri yönetin ve düzenleyin','noProducts':'Henüz ürün bulunmuyor','addNewProduct':'Yeni Ürün Ekle'},'brands':{'pageTitle':'Marka Yönetimi','pageDescription':'Markaları yönetin ve düzenleyin','noBrands':'Henüz marka bulunmuyor','addNewBrand':'Yeni Marka Ekle'},'settings':{'pageTitle':'Sistem Ayarları','pageDescription':'Sistem ayarlarını yönetin','saveSuccess':'Ayarlar başarıyla kaydedildi','saveError':'Ayarlar kaydedilirken hata oluştu'},'media':{'pageTitle':'Medya Galerisi','pageDescription':'Medya dosyalarını yönetin','noMedia':'Henüz medya dosyası bulunmuyor','uploadNewMedia':'Yeni Medya Yükle'},'socialMedia':{'pageTitle':'Sosyal Medya Kanalları','pageDescription':'Sosyal medya kanallarını yönetin','noChannels':'Henüz kanal bulunmuyor','addNewChannel':'Yeni Kanal Ekle'},'logs':{'pageTitle':'Sistem Kayıtları','pageDescription':'Sistem kayıtlarını görüntüleyin','noLogs':'Henüz kayıt bulunmuyor','exportSuccess':'Kayıtlar başarıyla dışa aktarıldı'}};return pageTexts[page]||{};};const getText=(key,fallback)=>{return texts[key]||fallback||key;};const updateText=(key,value)=>{setTexts(prevTexts=>_objectSpread(_objectSpread({},prevTexts),{},{[key]:value}));};const updateTexts=newTexts=>{setTexts(prevTexts=>_objectSpread(_objectSpread({},prevTexts),newTexts));};const resetTexts=()=>{setTexts(defaultTexts);};const getTitle=useCallback(function(){let key=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'title';let fallback=arguments.length>1?arguments[1]:undefined;return getText(key,fallback);},[getText]);const getDescription=useCallback(function(){let key=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'description';let fallback=arguments.length>1?arguments[1]:undefined;return getText(key,fallback);},[getText]);const getButtonText=useCallback(function(){let key=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'button';let fallback=arguments.length>1?arguments[1]:undefined;return getText(key,fallback);},[getText]);const getStatusText=useCallback(function(){let key=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'status';let fallback=arguments.length>1?arguments[1]:undefined;return getText(key,fallback);},[getText]);return{texts,loading,error,getText,getTitle,getDescription,getButtonText,getStatusText,updateText,updateTexts,resetTexts,loadPageTexts};};","map":{"version":3,"names":["useState","useEffect","useCallback","defaultTexts","usePageTexts","pageKey","texts","setTexts","loading","setLoading","error","setError","loadPageTexts","page","pageTexts","getPageSpecificTexts","prevTexts","_objectSpread","err","Error","message","getText","key","fallback","updateText","value","updateTexts","newTexts","resetTexts","getTitle","arguments","length","undefined","getDescription","getButtonText","getStatusText"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/hooks/usePageTexts.ts"],"sourcesContent":["/**\r\n * usePageTexts Hook\r\n * Sayfa metinlerini yöneten hook\r\n */\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\ninterface PageTexts {\r\n  [key: string]: string;\r\n}\r\n\r\nconst defaultTexts: PageTexts = {\r\n  // Common texts\r\n  'loading': 'Yükleniyor...',\r\n  'error': 'Hata oluştu',\r\n  'success': 'Başarılı',\r\n  'save': 'Kaydet',\r\n  'cancel': 'İptal',\r\n  'delete': 'Sil',\r\n  'edit': 'Düzenle',\r\n  'add': 'Ekle',\r\n  'search': 'Ara',\r\n  'filter': 'Filtrele',\r\n  'clear': 'Temizle',\r\n  \r\n  // Employee management\r\n  'employees': 'Çalışanlar',\r\n  'addEmployee': 'Çalışan Ekle',\r\n  'editEmployee': 'Çalışan Düzenle',\r\n  'deleteEmployee': 'Çalışan Sil',\r\n  'employeeName': 'Çalışan Adı',\r\n  'employeeEmail': 'E-posta',\r\n  'employeePhone': 'Telefon',\r\n  'employeeRole': 'Rol',\r\n  'employeeStatus': 'Durum',\r\n  'active': 'Aktif',\r\n  'inactive': 'Pasif',\r\n  \r\n  // Product management\r\n  'products': 'Ürünler',\r\n  'addProduct': 'Ürün Ekle',\r\n  'editProduct': 'Ürün Düzenle',\r\n  'deleteProduct': 'Ürün Sil',\r\n  'productName': 'Ürün Adı',\r\n  'productCode': 'Ürün Kodu',\r\n  'productPrice': 'Fiyat',\r\n  'productStock': 'Stok',\r\n  'productCategory': 'Kategori',\r\n  \r\n  // Brand management\r\n  'brands': 'Markalar',\r\n  'addBrand': 'Marka Ekle',\r\n  'editBrand': 'Marka Düzenle',\r\n  'deleteBrand': 'Marka Sil',\r\n  'brandName': 'Marka Adı',\r\n  'brandDescription': 'Açıklama',\r\n  \r\n  // Settings\r\n  'settings': 'Ayarlar',\r\n  'generalSettings': 'Genel Ayarlar',\r\n  'urlSettings': 'URL Ayarları',\r\n  'saveSettings': 'Ayarları Kaydet',\r\n  'resetSettings': 'Ayarları Sıfırla',\r\n  \r\n  // Media gallery\r\n  'mediaGallery': 'Medya Galerisi',\r\n  'uploadImage': 'Resim Yükle',\r\n  'selectImage': 'Resim Seç',\r\n  'imagePreview': 'Resim Önizleme',\r\n  \r\n  // Social media\r\n  'socialMedia': 'Sosyal Medya',\r\n  'channels': 'Kanallar',\r\n  'addChannel': 'Kanal Ekle',\r\n  'editChannel': 'Kanal Düzenle',\r\n  'deleteChannel': 'Kanal Sil',\r\n  'channelName': 'Kanal Adı',\r\n  'channelType': 'Kanal Türü',\r\n  'channelStatus': 'Durum',\r\n  \r\n  // Employee requests\r\n  'employee_requests': 'Çalışan Talepleri',\r\n  'add_employee_request': 'Çalışan Talebi Oluştur',\r\n  \r\n  // My employees\r\n  'my_employees': 'Çalışanlarım',\r\n  'my_employees_description': 'Markalarınıza bağlı çalışanları görüntüleyin ve yönetin',\r\n  \r\n  // Request logs\r\n  'requestLogs': 'İstek Kayıtları',\r\n  'auditLogs': 'Denetim Kayıtları',\r\n  'logDetails': 'Kayıt Detayları',\r\n  'filterLogs': 'Kayıtları Filtrele',\r\n  'exportLogs': 'Kayıtları Dışa Aktar'\r\n};\r\n\r\nexport const usePageTexts = (pageKey?: string) => {\r\n  const [texts, setTexts] = useState<PageTexts>(defaultTexts);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Load page-specific texts if pageKey is provided\r\n    if (pageKey) {\r\n      loadPageTexts(pageKey);\r\n    }\r\n  }, [pageKey]);\r\n\r\n  const loadPageTexts = async (page: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // In a real app, this would fetch from an API\r\n      // For now, we'll use the default texts\r\n      const pageTexts = getPageSpecificTexts(page);\r\n      setTexts(prevTexts => ({ ...prevTexts, ...pageTexts }));\r\n      \r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to load texts');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getPageSpecificTexts = (page: string): PageTexts => {\r\n    const pageTexts: { [key: string]: PageTexts } = {\r\n      'employees': {\r\n        'pageTitle': 'Çalışan Yönetimi',\r\n        'pageDescription': 'Çalışanları yönetin ve düzenleyin',\r\n        'noEmployees': 'Henüz çalışan bulunmuyor',\r\n        'addNewEmployee': 'Yeni Çalışan Ekle'\r\n      },\r\n      'products': {\r\n        'pageTitle': 'Ürün Yönetimi',\r\n        'pageDescription': 'Ürünleri yönetin ve düzenleyin',\r\n        'noProducts': 'Henüz ürün bulunmuyor',\r\n        'addNewProduct': 'Yeni Ürün Ekle'\r\n      },\r\n      'brands': {\r\n        'pageTitle': 'Marka Yönetimi',\r\n        'pageDescription': 'Markaları yönetin ve düzenleyin',\r\n        'noBrands': 'Henüz marka bulunmuyor',\r\n        'addNewBrand': 'Yeni Marka Ekle'\r\n      },\r\n      'settings': {\r\n        'pageTitle': 'Sistem Ayarları',\r\n        'pageDescription': 'Sistem ayarlarını yönetin',\r\n        'saveSuccess': 'Ayarlar başarıyla kaydedildi',\r\n        'saveError': 'Ayarlar kaydedilirken hata oluştu'\r\n      },\r\n      'media': {\r\n        'pageTitle': 'Medya Galerisi',\r\n        'pageDescription': 'Medya dosyalarını yönetin',\r\n        'noMedia': 'Henüz medya dosyası bulunmuyor',\r\n        'uploadNewMedia': 'Yeni Medya Yükle'\r\n      },\r\n      'socialMedia': {\r\n        'pageTitle': 'Sosyal Medya Kanalları',\r\n        'pageDescription': 'Sosyal medya kanallarını yönetin',\r\n        'noChannels': 'Henüz kanal bulunmuyor',\r\n        'addNewChannel': 'Yeni Kanal Ekle'\r\n      },\r\n      'logs': {\r\n        'pageTitle': 'Sistem Kayıtları',\r\n        'pageDescription': 'Sistem kayıtlarını görüntüleyin',\r\n        'noLogs': 'Henüz kayıt bulunmuyor',\r\n        'exportSuccess': 'Kayıtlar başarıyla dışa aktarıldı'\r\n      }\r\n    };\r\n\r\n    return pageTexts[page] || {};\r\n  };\r\n\r\n  const getText = (key: string, fallback?: string): string => {\r\n    return texts[key] || fallback || key;\r\n  };\r\n\r\n  const updateText = (key: string, value: string) => {\r\n    setTexts(prevTexts => ({ ...prevTexts, [key]: value }));\r\n  };\r\n\r\n  const updateTexts = (newTexts: PageTexts) => {\r\n    setTexts(prevTexts => ({ ...prevTexts, ...newTexts }));\r\n  };\r\n\r\n  const resetTexts = () => {\r\n    setTexts(defaultTexts);\r\n  };\r\n\r\n  const getTitle = useCallback((key: string = 'title', fallback?: string) => {\r\n    return getText(key, fallback);\r\n  }, [getText]);\r\n\r\n  const getDescription = useCallback((key: string = 'description', fallback?: string) => {\r\n    return getText(key, fallback);\r\n  }, [getText]);\r\n\r\n  const getButtonText = useCallback((key: string = 'button', fallback?: string) => {\r\n    return getText(key, fallback);\r\n  }, [getText]);\r\n\r\n  const getStatusText = useCallback((key: string = 'status', fallback?: string) => {\r\n    return getText(key, fallback);\r\n  }, [getText]);\r\n\r\n  return {\r\n    texts,\r\n    loading,\r\n    error,\r\n    getText,\r\n    getTitle,\r\n    getDescription,\r\n    getButtonText,\r\n    getStatusText,\r\n    updateText,\r\n    updateTexts,\r\n    resetTexts,\r\n    loadPageTexts\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}