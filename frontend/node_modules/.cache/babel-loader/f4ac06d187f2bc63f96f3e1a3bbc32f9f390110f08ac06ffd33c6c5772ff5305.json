{"ast":null,"code":"import api from'../utils/api';export const settingsAPI={getSettings:async()=>{// Use authenticated endpoint to get all settings (sensitive values masked for non-super-admin)\nconst response=await api.get('/api/settings/');return response.data;},getSetting:async keyName=>{const response=await api.get(\"/api/settings/\".concat(keyName));return response.data;},updateSetting:async function(keyName,value){let category=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'general';const response=await api.post(\"/api/settings/\".concat(category,\"/\").concat(keyName),null,{params:{value}});return response.data;},getCategorySettings:async category=>{const response=await api.get(\"/api/settings/category/\".concat(category));return response.data.settings||[];},updateCategorySetting:async(category,key,value)=>{await api.post(\"/api/settings/\".concat(category,\"/\").concat(key),null,{params:{value}});},updateSettings:async settings=>{await api.put('/api/settings/bulk',{settings});},resetSetting:async keyName=>{const response=await api.post(\"/api/settings/\".concat(keyName,\"/reset\"));return response.data;},getSystemInfo:async()=>{const response=await api.get('/api/settings/system-info');return response.data;},testEmail:async testData=>{await api.post('/api/settings/test-email',testData);}};","map":{"version":3,"names":["api","settingsAPI","getSettings","response","get","data","getSetting","keyName","concat","updateSetting","value","category","arguments","length","undefined","post","params","getCategorySettings","settings","updateCategorySetting","key","updateSettings","put","resetSetting","getSystemInfo","testEmail","testData"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/settings.ts"],"sourcesContent":["import api from '../utils/api';\n\nexport interface Setting {\n  id: number;\n  category: string;\n  key: string;\n  value: string;\n  description: string;\n  is_active: boolean;\n  is_sensitive: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface SettingUpdate {\n  key: string;\n  value: string;\n}\n\nexport interface SettingsResponse {\n  settings: Setting[];\n  total: number;\n}\n\nexport interface CategorySettingsResponse {\n  category: string;\n  settings: Setting[];\n}\n\nexport const settingsAPI = {\n  getSettings: async (): Promise<SettingsResponse> => {\n    // Use authenticated endpoint to get all settings (sensitive values masked for non-super-admin)\n    const response = await api.get('/api/settings/');\n    return response.data;\n  },\n\n  getSetting: async (keyName: string): Promise<Setting> => {\n    const response = await api.get(`/api/settings/${keyName}`);\n    return response.data;\n  },\n\n  updateSetting: async (keyName: string, value: string, category: string = 'general'): Promise<Setting> => {\n    const response = await api.post(`/api/settings/${category}/${keyName}`, null, {\n      params: { value }\n    });\n    return response.data;\n  },\n\n  getCategorySettings: async (category: string): Promise<Setting[]> => {\n    const response = await api.get(`/api/settings/category/${category}`);\n    return response.data.settings || [];\n  },\n\n  updateCategorySetting: async (category: string, key: string, value: string): Promise<void> => {\n    await api.post(`/api/settings/${category}/${key}`, null, {\n      params: { value }\n    });\n  },\n\n  updateSettings: async (settings: SettingUpdate[]): Promise<void> => {\n    await api.put('/api/settings/bulk', { settings });\n  },\n\n  resetSetting: async (keyName: string): Promise<Setting> => {\n    const response = await api.post(`/api/settings/${keyName}/reset`);\n    return response.data;\n  },\n\n  getSystemInfo: async (): Promise<{\n    database_version: string;\n    platform_version: string;\n    last_updated: string;\n    total_users: number;\n    total_brands: number;\n    total_branches: number;\n  }> => {\n    const response = await api.get('/api/settings/system-info');\n    return response.data;\n  },\n\n  testEmail: async (testData: {\n    to_email: string;\n    subject: string;\n    message: string;\n  }): Promise<void> => {\n    await api.post('/api/settings/test-email', testData);\n  },\n};\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,cAAc,CA6B9B,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzBC,WAAW,CAAE,KAAAA,CAAA,GAAuC,CAClD;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,gBAAgB,CAAC,CAChD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDC,UAAU,CAAE,KAAO,CAAAC,OAAe,EAAuB,CACvD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,kBAAAI,MAAA,CAAkBD,OAAO,CAAE,CAAC,CAC1D,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDI,aAAa,CAAE,cAAAA,CAAOF,OAAe,CAAEG,KAAa,CAAqD,IAAnD,CAAAC,QAAgB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAChF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACe,IAAI,kBAAAP,MAAA,CAAkBG,QAAQ,MAAAH,MAAA,CAAID,OAAO,EAAI,IAAI,CAAE,CAC5ES,MAAM,CAAE,CAAEN,KAAM,CAClB,CAAC,CAAC,CACF,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDY,mBAAmB,CAAE,KAAO,CAAAN,QAAgB,EAAyB,CACnE,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,2BAAAI,MAAA,CAA2BG,QAAQ,CAAE,CAAC,CACpE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CAACa,QAAQ,EAAI,EAAE,CACrC,CAAC,CAEDC,qBAAqB,CAAE,KAAAA,CAAOR,QAAgB,CAAES,GAAW,CAAEV,KAAa,GAAoB,CAC5F,KAAM,CAAAV,GAAG,CAACe,IAAI,kBAAAP,MAAA,CAAkBG,QAAQ,MAAAH,MAAA,CAAIY,GAAG,EAAI,IAAI,CAAE,CACvDJ,MAAM,CAAE,CAAEN,KAAM,CAClB,CAAC,CAAC,CACJ,CAAC,CAEDW,cAAc,CAAE,KAAO,CAAAH,QAAyB,EAAoB,CAClE,KAAM,CAAAlB,GAAG,CAACsB,GAAG,CAAC,oBAAoB,CAAE,CAAEJ,QAAS,CAAC,CAAC,CACnD,CAAC,CAEDK,YAAY,CAAE,KAAO,CAAAhB,OAAe,EAAuB,CACzD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACe,IAAI,kBAAAP,MAAA,CAAkBD,OAAO,UAAQ,CAAC,CACjE,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDmB,aAAa,CAAE,KAAAA,CAAA,GAOT,CACJ,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,2BAA2B,CAAC,CAC3D,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDoB,SAAS,CAAE,KAAO,CAAAC,QAIjB,EAAoB,CACnB,KAAM,CAAA1B,GAAG,CAACe,IAAI,CAAC,0BAA0B,CAAEW,QAAQ,CAAC,CACtD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}