{"ast":null,"code":"import api from'../utils/api';export const rolesAPI={getRoles:async()=>{const response=await api.get('/api/roles');return response.data;},getPermissions:async()=>{const response=await api.get('/api/roles/permissions');return{permissions:response.data};},getRole:async id=>{const response=await api.get(\"/api/roles/\".concat(id));return response.data;},getRolePermissions:async id=>{const response=await api.get(\"/api/roles/\".concat(id,\"/permissions\"));return response.data;},createRole:async roleData=>{const response=await api.post('/api/roles',roleData);return response.data;},updateRole:async(id,roleData)=>{const response=await api.put(\"/api/roles/\".concat(id),roleData);return response.data;},assignPermissionsToRole:async(roleId,permissionIds)=>{await api.post(\"/api/roles/\".concat(roleId,\"/permissions\"),permissionIds);},removePermissionFromRole:async(roleId,permissionId)=>{await api.delete(\"/api/roles/\".concat(roleId,\"/permissions/\").concat(permissionId));},toggleRoleStatus:async id=>{const response=await api.patch(\"/api/roles/\".concat(id,\"/toggle-status\"));return response.data;},deleteRole:async id=>{await api.delete(\"/api/roles/\".concat(id));}};","map":{"version":3,"names":["api","rolesAPI","getRoles","response","get","data","getPermissions","permissions","getRole","id","concat","getRolePermissions","createRole","roleData","post","updateRole","put","assignPermissionsToRole","roleId","permissionIds","removePermissionFromRole","permissionId","delete","toggleRoleStatus","patch","deleteRole"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/roles.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport interface Permission {\r\n  id: number;\r\n  name: string;\r\n  display_name: string;\r\n  description: string;\r\n  module: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\nexport interface Role {\r\n  id: number;\r\n  name: string;\r\n  display_name: string;\r\n  description: string;\r\n  is_active: boolean;\r\n  is_system_role: boolean;\r\n  user_count?: number;\r\n  permissions: Permission[];\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface RoleCreate {\r\n  name: string;\r\n  display_name: string;\r\n  description: string;\r\n  permission_ids: number[];\r\n}\r\n\r\nexport interface RoleUpdate {\r\n  name?: string;\r\n  display_name?: string;\r\n  description?: string;\r\n  permission_ids?: number[];\r\n}\r\n\r\nexport interface RolesResponse {\r\n  roles: Role[];\r\n  total: number;\r\n}\r\n\r\nexport interface RolePermissionsResponse {\r\n  role_id: number;\r\n  role_name: string;\r\n  role_display_name: string;\r\n  permissions: Permission[];\r\n}\r\n\r\nexport const rolesAPI = {\r\n  getRoles: async (): Promise<RolesResponse> => {\r\n    const response = await api.get('/api/roles');\r\n    return response.data;\r\n  },\r\n\r\n  getPermissions: async (): Promise<{ permissions: Permission[] }> => {\r\n    const response = await api.get('/api/roles/permissions');\r\n    return { permissions: response.data };\r\n  },\r\n\r\n  getRole: async (id: number): Promise<Role> => {\r\n    const response = await api.get(`/api/roles/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getRolePermissions: async (id: number): Promise<RolePermissionsResponse> => {\r\n    const response = await api.get(`/api/roles/${id}/permissions`);\r\n    return response.data;\r\n  },\r\n\r\n  createRole: async (roleData: RoleCreate): Promise<Role> => {\r\n    const response = await api.post('/api/roles', roleData);\r\n    return response.data;\r\n  },\r\n\r\n  updateRole: async (id: number, roleData: RoleUpdate): Promise<Role> => {\r\n    const response = await api.put(`/api/roles/${id}`, roleData);\r\n    return response.data;\r\n  },\r\n\r\n  assignPermissionsToRole: async (roleId: number, permissionIds: number[]): Promise<void> => {\r\n    await api.post(`/api/roles/${roleId}/permissions`, permissionIds);\r\n  },\r\n\r\n  removePermissionFromRole: async (roleId: number, permissionId: number): Promise<void> => {\r\n    await api.delete(`/api/roles/${roleId}/permissions/${permissionId}`);\r\n  },\r\n\r\n  toggleRoleStatus: async (id: number): Promise<Role> => {\r\n    const response = await api.patch(`/api/roles/${id}/toggle-status`);\r\n    return response.data;\r\n  },\r\n\r\n  deleteRole: async (id: number): Promise<void> => {\r\n    await api.delete(`/api/roles/${id}`);\r\n  },\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,cAAc,CAmD9B,MAAO,MAAM,CAAAC,QAAQ,CAAG,CACtBC,QAAQ,CAAE,KAAAA,CAAA,GAAoC,CAC5C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,YAAY,CAAC,CAC5C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDC,cAAc,CAAE,KAAAA,CAAA,GAAoD,CAClE,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,wBAAwB,CAAC,CACxD,MAAO,CAAEG,WAAW,CAAEJ,QAAQ,CAACE,IAAK,CAAC,CACvC,CAAC,CAEDG,OAAO,CAAE,KAAO,CAAAC,EAAU,EAAoB,CAC5C,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,eAAAM,MAAA,CAAeD,EAAE,CAAE,CAAC,CAClD,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDM,kBAAkB,CAAE,KAAO,CAAAF,EAAU,EAAuC,CAC1E,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,eAAAM,MAAA,CAAeD,EAAE,gBAAc,CAAC,CAC9D,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDO,UAAU,CAAE,KAAO,CAAAC,QAAoB,EAAoB,CACzD,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACc,IAAI,CAAC,YAAY,CAAED,QAAQ,CAAC,CACvD,MAAO,CAAAV,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDU,UAAU,CAAE,KAAAA,CAAON,EAAU,CAAEI,QAAoB,GAAoB,CACrE,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACgB,GAAG,eAAAN,MAAA,CAAeD,EAAE,EAAII,QAAQ,CAAC,CAC5D,MAAO,CAAAV,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDY,uBAAuB,CAAE,KAAAA,CAAOC,MAAc,CAAEC,aAAuB,GAAoB,CACzF,KAAM,CAAAnB,GAAG,CAACc,IAAI,eAAAJ,MAAA,CAAeQ,MAAM,iBAAgBC,aAAa,CAAC,CACnE,CAAC,CAEDC,wBAAwB,CAAE,KAAAA,CAAOF,MAAc,CAAEG,YAAoB,GAAoB,CACvF,KAAM,CAAArB,GAAG,CAACsB,MAAM,eAAAZ,MAAA,CAAeQ,MAAM,kBAAAR,MAAA,CAAgBW,YAAY,CAAE,CAAC,CACtE,CAAC,CAEDE,gBAAgB,CAAE,KAAO,CAAAd,EAAU,EAAoB,CACrD,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACwB,KAAK,eAAAd,MAAA,CAAeD,EAAE,kBAAgB,CAAC,CAClE,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDoB,UAAU,CAAE,KAAO,CAAAhB,EAAU,EAAoB,CAC/C,KAAM,CAAAT,GAAG,CAACsB,MAAM,eAAAZ,MAAA,CAAeD,EAAE,CAAE,CAAC,CACtC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}