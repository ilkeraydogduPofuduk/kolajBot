{"ast":null,"code":"import api from'../utils/api';export const brandsAPI={// Mevcut fonksiyonlar\ngetBrands:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let per_page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;const params=new URLSearchParams({page:page.toString(),per_page:per_page.toString()});const response=await api.get(\"/api/brands?\".concat(params));return response.data;},getBrandsWithProducts:async()=>{const response=await api.get('/api/brands/with-products');return response.data;},getBrand:async brandId=>{const response=await api.get(\"/api/brands/\".concat(brandId));return response.data;},createBrand:async data=>{const response=await api.post('/api/brands',data);return response.data;},// Marka ekleme talebi fonksiyonları\ncreateBrandRequest:async data=>{const response=await api.post('/api/brands/request',data);return response.data;},getBrandRequests:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let per_page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let status=arguments.length>2?arguments[2]:undefined;const params=new URLSearchParams({page:page.toString(),per_page:per_page.toString()});if(status){params.append('status',status);}const response=await api.get(\"/api/brands/requests?\".concat(params));return response.data;},getBrandRequest:async id=>{const response=await api.get(\"/api/brands/requests/\".concat(id));return response.data;},approveBrandRequest:async(id,admin_notes)=>{const response=await api.put(\"/api/brands/requests/\".concat(id,\"/approve\"),{admin_notes});return response.data;},rejectBrandRequest:async(id,admin_notes)=>{const response=await api.put(\"/api/brands/requests/\".concat(id,\"/reject\"),{status:'rejected',admin_notes});return response.data;},updateBrandRequest:async(id,data)=>{const response=await api.put(\"/api/brands/requests/\".concat(id),data);return response.data;},updateBrand:async(brandId,data)=>{const response=await api.put(\"/api/brands/\".concat(brandId),data);return response.data;},activateBrand:async brandId=>{const response=await api.put(\"/api/brands/\".concat(brandId,\"/activate\"));return response.data;},deactivateBrand:async brandId=>{const response=await api.put(\"/api/brands/\".concat(brandId,\"/deactivate\"));return response.data;},uploadLogo:async(brandId,file)=>{const formData=new FormData();formData.append('file',file);const response=await api.post(\"/api/brands/\".concat(brandId,\"/logo\"),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},deleteBrand:async brandId=>{const response=await api.delete(\"/api/brands/\".concat(brandId));return response.data;}};// Marka yöneticisi için istatistikler","map":{"version":3,"names":["api","brandsAPI","getBrands","page","arguments","length","undefined","per_page","params","URLSearchParams","toString","response","get","concat","data","getBrandsWithProducts","getBrand","brandId","createBrand","post","createBrandRequest","getBrandRequests","status","append","getBrandRequest","id","approveBrandRequest","admin_notes","put","rejectBrandRequest","updateBrandRequest","updateBrand","activateBrand","deactivateBrand","uploadLogo","file","formData","FormData","headers","deleteBrand","delete"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/brands.ts"],"sourcesContent":["import api from '../utils/api';\n\nexport interface Brand {\n  id: number;\n  name: string;\n  description?: string;\n  category_id: number | null;\n  category?: {\n    id: number;\n    name: string;\n  };\n  logo_url: string;\n  website?: string;\n  email?: string;\n  phone?: string;\n  product_ids: number[] | null;\n  template_ids: number[] | null;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface BrandCreate {\n  name: string;\n  category_id?: number;\n  logo_url: string;\n  logoFile?: File;\n}\n\nexport interface BrandUpdate {\n  name?: string;\n  category_id?: number;\n  logo_url?: string;\n  product_ids?: number[];\n  template_ids?: number[];\n  is_active?: boolean;\n}\n\nexport interface BrandListResponse {\n  brands: Brand[];\n  total: number;\n  page: number;\n  per_page: number;\n}\n\nexport interface BrandRequest {\n  id: number;\n  requested_by_user_id: number;\n  name: string;\n  category_id: number | null;\n  category?: {\n    id: number;\n    name: string;\n  };\n  logo_url: string | null;\n  request_message?: string;\n  status: 'pending' | 'approved' | 'rejected';\n  admin_notes?: string;\n  approved_by_user_id?: number;\n  approved_at?: string;\n  created_at: string;\n  updated_at: string;\n  requested_by_name?: string;\n  approved_by_name?: string;\n}\n\nexport interface BrandRequestCreate {\n  name: string;\n  category_id?: number;\n  logo_url: string;\n  request_message?: string;\n}\n\nexport interface BrandRequestListResponse {\n  requests: BrandRequest[];\n  total: number;\n  page: number;\n  per_page: number;\n}\n\nexport const brandsAPI = {\n  // Mevcut fonksiyonlar\n  getBrands: async (page = 1, per_page = 10): Promise<BrandListResponse> => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      per_page: per_page.toString(),\n    });\n    \n    const response = await api.get(`/api/brands?${params}`);\n    return response.data;\n  },\n\n  getBrandsWithProducts: async (): Promise<{ brands: Brand[] }> => {\n    const response = await api.get('/api/brands/with-products');\n    return response.data;\n  },\n\n  getBrand: async (brandId: number): Promise<Brand> => {\n    const response = await api.get(`/api/brands/${brandId}`);\n    return response.data;\n  },\n\n  createBrand: async (data: BrandCreate): Promise<Brand> => {\n    const response = await api.post('/api/brands', data);\n    return response.data;\n  },\n\n  // Marka ekleme talebi fonksiyonları\n  createBrandRequest: async (data: BrandRequestCreate): Promise<BrandRequest> => {\n    const response = await api.post('/api/brands/request', data);\n    return response.data;\n  },\n\n  getBrandRequests: async (\n    page: number = 1,\n    per_page: number = 10,\n    status?: string\n  ): Promise<BrandRequestListResponse> => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      per_page: per_page.toString(),\n    });\n    \n    if (status) {\n      params.append('status', status);\n    }\n\n    const response = await api.get(`/api/brands/requests?${params}`);\n    return response.data;\n  },\n\n  getBrandRequest: async (id: number): Promise<BrandRequest> => {\n    const response = await api.get(`/api/brands/requests/${id}`);\n    return response.data;\n  },\n\n  approveBrandRequest: async (id: number, admin_notes?: string): Promise<{ message: string }> => {\n    const response = await api.put(`/api/brands/requests/${id}/approve`, { admin_notes });\n    return response.data;\n  },\n\n  rejectBrandRequest: async (id: number, admin_notes: string): Promise<{ message: string }> => {\n    const response = await api.put(`/api/brands/requests/${id}/reject`, { \n      status: 'rejected',\n      admin_notes \n    });\n    return response.data;\n  },\n\n  updateBrandRequest: async (id: number, data: BrandRequestCreate): Promise<BrandRequest> => {\n    const response = await api.put(`/api/brands/requests/${id}`, data);\n    return response.data;\n  },\n\n  updateBrand: async (brandId: number, data: BrandUpdate): Promise<Brand> => {\n    const response = await api.put(`/api/brands/${brandId}`, data);\n    return response.data;\n  },\n\n  activateBrand: async (brandId: number): Promise<{ message: string }> => {\n    const response = await api.put(`/api/brands/${brandId}/activate`);\n    return response.data;\n  },\n\n  deactivateBrand: async (brandId: number): Promise<{ message: string }> => {\n    const response = await api.put(`/api/brands/${brandId}/deactivate`);\n    return response.data;\n  },\n\n  uploadLogo: async (brandId: number, file: File): Promise<{ message: string; logo_url: string }> => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post(`/api/brands/${brandId}/logo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  deleteBrand: async (brandId: number): Promise<{ message: string }> => {\n    const response = await api.delete(`/api/brands/${brandId}`);\n    return response.data;\n  },\n};\n\n// Marka yöneticisi için istatistikler\nexport interface BrandManagerStats {\n  total_brands: number;\n  active_brands: number;\n  pending_brand_requests: number;\n  managed_employees_count: number;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}