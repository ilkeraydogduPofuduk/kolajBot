{"ast":null,"code":"import api from'../utils/api';export const templatesAPI={// Şablonları listele\ngetTemplates:async params=>{const response=await api.get('/api/templates/master',{params});return response.data;},// Belirli bir şablonu getir\ngetTemplate:async templateId=>{const response=await api.get(\"/api/templates/\".concat(templateId));return response.data;},// Yeni şablon oluştur\ncreateTemplate:async templateData=>{const response=await api.post('/api/templates/create',templateData);return response.data;},// Şablonu güncelle\nupdateTemplate:async(templateId,templateData)=>{const response=await api.put(\"/api/templates/\".concat(templateId),templateData);return response.data;},// Şablonu sil\ndeleteTemplate:async templateId=>{const response=await api.delete(\"/api/templates/\".concat(templateId));return response.data;},// Template verisini görsel olarak render et\nrenderTemplate:async function(templateData){let width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:800;let height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;let format=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'PNG';const response=await api.post('/api/templates/render',templateData,{params:{width,height,format},responseType:'blob'});return response.data;},// Template'i PNG olarak dışa aktar\nexportTemplatePNG:async function(templateId){let width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:800;let height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;const response=await api.post(\"/api/templates/\".concat(templateId,\"/export/png\"),{},{params:{width,height},responseType:'blob'});return response.data;},// JSON dosyasından template içe aktar\nimportTemplate:async(file,product_id,name,description)=>{const formData=new FormData();formData.append('file',file);if(product_id)formData.append('product_id',product_id.toString());if(name)formData.append('name',name||file.name.replace('.json',''));if(description)formData.append('description',description);const response=await api.post('/api/templates/import/json',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// Get templates by product\ngetTemplatesByProduct:async productId=>{const response=await api.get(\"/api/templates/by-product/\".concat(productId));return response.data;},// Get templates by brand\ngetTemplatesByBrand:async brandId=>{const response=await api.get(\"/api/templates/by-brand/\".concat(brandId));return response.data;},// Get auto-generated templates\ngetAutoTemplates:async()=>{const response=await api.get('/api/templates/auto-generated');return response.data;},// Create collage from template\ncreateCollage:async(templateId,productId)=>{const response=await api.post(\"/api/templates/\".concat(templateId,\"/create-collage\"),{product_id:productId});return response.data;},// Download collage\ndownloadCollage:async templateId=>{const response=await api.get(\"/api/templates/\".concat(templateId,\"/download-collage\"),{responseType:'blob'});return response.data;}};","map":{"version":3,"names":["api","templatesAPI","getTemplates","params","response","get","data","getTemplate","templateId","concat","createTemplate","templateData","post","updateTemplate","put","deleteTemplate","delete","renderTemplate","width","arguments","length","undefined","height","format","responseType","exportTemplatePNG","importTemplate","file","product_id","name","description","formData","FormData","append","toString","replace","headers","getTemplatesByProduct","productId","getTemplatesByBrand","brandId","getAutoTemplates","createCollage","downloadCollage"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/templates.ts"],"sourcesContent":["import api from '../utils/api';\n\nexport interface Template {\n  id: number;\n  name: string;\n  description?: string;\n  product_id?: number;\n  brand_id?: number;\n  template_type: string;\n  template_data: any;\n  preview_image?: string;\n  thumbnail_path?: string;\n  is_active: boolean;\n  is_default?: boolean;\n  is_auto_generated?: boolean;\n  visibility?: 'private' | 'brand' | 'public';\n  version?: number;\n  parent_template_id?: number;\n  tags?: string[];\n  shared_with?: number[];\n  usage_count?: number;\n  last_used_at?: string;\n  created_at: string;\n  updated_at?: string;\n  created_by?: number;\n  category?: string;\n  product?: {\n    id: number;\n    code: string;\n    name: string;\n    color: string;\n    product_type: string;\n    size_range: string;\n    price: number;\n    currency: string;\n    brand: {\n      id: number;\n      name: string;\n    };\n  };\n  brand?: {\n    id: number;\n    name: string;\n  };\n  creator?: {\n    id: number;\n    first_name: string;\n    last_name: string;\n    email: string;\n  };\n}\n\nexport interface TemplateCreate {\n  name: string;\n  description?: string;\n  product_id: number;\n  brand_id: number;\n  template_type?: string;\n  template_data: any;\n  visibility?: 'private' | 'brand' | 'public';\n  tags?: string[];\n  is_active?: boolean;\n}\n\nexport interface TemplateUpdate {\n  name?: string;\n  description?: string;\n  template_type?: string;\n  template_data?: any;\n  visibility?: 'private' | 'brand' | 'public';\n  tags?: string[];\n  is_active?: boolean;\n}\n\nexport const templatesAPI = {\n  // Şablonları listele\n  getTemplates: async (params?: {\n    skip?: number;\n    limit?: number;\n    product_id?: number;\n  }): Promise<{ data: Template[] }> => {\n    const response = await api.get('/api/templates/master', { params });\n    return response.data;\n  },\n\n  // Belirli bir şablonu getir\n  getTemplate: async (templateId: number): Promise<Template> => {\n    const response = await api.get(`/api/templates/${templateId}`);\n    return response.data;\n  },\n\n  // Yeni şablon oluştur\n  createTemplate: async (templateData: TemplateCreate): Promise<Template> => {\n    const response = await api.post('/api/templates/create', templateData);\n    return response.data;\n  },\n\n  // Şablonu güncelle\n  updateTemplate: async (templateId: number, templateData: TemplateUpdate): Promise<Template> => {\n    const response = await api.put(`/api/templates/${templateId}`, templateData);\n    return response.data;\n  },\n\n  // Şablonu sil\n  deleteTemplate: async (templateId: number): Promise<{ message: string }> => {\n    const response = await api.delete(`/api/templates/${templateId}`);\n    return response.data;\n  },\n\n\n\n  // Template verisini görsel olarak render et\n  renderTemplate: async (templateData: any, width: number = 800, height: number = 1000, format: string = 'PNG') => {\n    const response = await api.post('/api/templates/render', templateData, {\n      params: { width, height, format },\n      responseType: 'blob'\n    });\n    \n    return response.data;\n  },\n\n  // Template'i PNG olarak dışa aktar\n  exportTemplatePNG: async (templateId: number, width: number = 800, height: number = 1000) => {\n    const response = await api.post(`/api/templates/${templateId}/export/png`, {}, {\n      params: { width, height },\n      responseType: 'blob'\n    });\n    \n    return response.data;\n  },\n\n  // JSON dosyasından template içe aktar\n  importTemplate: async (file: File, product_id?: number, name?: string, description?: string) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    if (product_id) formData.append('product_id', product_id.toString());\n    if (name) formData.append('name', name || file.name.replace('.json', ''));\n    if (description) formData.append('description', description);\n    \n    const response = await api.post('/api/templates/import/json', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    \n    return response.data;\n  },\n\n  // Get templates by product\n  getTemplatesByProduct: async (productId: number): Promise<{ templates: Template[] }> => {\n    const response = await api.get(`/api/templates/by-product/${productId}`);\n    return response.data;\n  },\n\n  // Get templates by brand\n  getTemplatesByBrand: async (brandId: number): Promise<{ templates: Template[] }> => {\n    const response = await api.get(`/api/templates/by-brand/${brandId}`);\n    return response.data;\n  },\n\n  // Get auto-generated templates\n  getAutoTemplates: async (): Promise<{ templates: Template[] }> => {\n    const response = await api.get('/api/templates/auto-generated');\n    return response.data;\n  },\n\n  // Create collage from template\n  createCollage: async (templateId: number, productId: number): Promise<{ success: boolean; collage_path?: string }> => {\n    const response = await api.post(`/api/templates/${templateId}/create-collage`, {\n      product_id: productId\n    });\n    return response.data;\n  },\n\n  // Download collage\n  downloadCollage: async (templateId: number): Promise<Blob> => {\n    const response = await api.get(`/api/templates/${templateId}/download-collage`, {\n      responseType: 'blob'\n    });\n    return response.data;\n  },\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}