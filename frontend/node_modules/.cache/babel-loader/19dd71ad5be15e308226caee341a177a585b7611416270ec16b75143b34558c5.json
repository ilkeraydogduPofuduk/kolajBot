{"ast":null,"code":"import api from '../utils/api';\nexport const employeeRequestsAPI = {\n  // √áalƒ±≈üan ekleme talebi olu≈ütur\n  createEmployeeRequest: async data => {\n    console.log('üîç SENDING EMPLOYEE REQUEST:', data);\n    const response = await api.post('/api/employee-requests/', data);\n    return response.data;\n  },\n  // √áalƒ±≈üan taleplerini listele\n  getEmployeeRequests: async (page = 1, per_page = 10, status) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      per_page: per_page.toString()\n    });\n    if (status) {\n      params.append('status', status);\n    }\n    const response = await api.get(`/api/employee-requests/?${params}`);\n    return response.data;\n  },\n  // Tek bir talebi getir\n  getEmployeeRequest: async id => {\n    const response = await api.get(`/api/employee-requests/${id}`);\n    return response.data;\n  },\n  // Talebi onayla (Super Admin)\n  approveEmployeeRequest: async (id, admin_notes) => {\n    const response = await api.put(`/api/employee-requests/${id}/approve`, {\n      admin_notes\n    });\n    return response.data;\n  },\n  // Talebi reddet (Super Admin)\n  rejectEmployeeRequest: async (id, admin_notes) => {\n    const response = await api.put(`/api/employee-requests/${id}/reject`, {\n      status: 'rejected',\n      admin_notes\n    });\n    return response.data;\n  },\n  // Talep bilgilerini g√ºncelle (Super Admin)\n  updateEmployeeRequest: async (id, requestData) => {\n    const response = await api.put(`/api/employee-requests/${id}`, requestData);\n    return response.data;\n  },\n  // Marka y√∂neticisi istatistikleri\n  getBrandManagerStats: async () => {\n    const response = await api.get('/api/employee-requests/stats/brand-manager');\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","employeeRequestsAPI","createEmployeeRequest","data","console","log","response","post","getEmployeeRequests","page","per_page","status","params","URLSearchParams","toString","append","get","getEmployeeRequest","id","approveEmployeeRequest","admin_notes","put","rejectEmployeeRequest","updateEmployeeRequest","requestData","getBrandManagerStats"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/employeeRequests.ts"],"sourcesContent":[" import api from '../utils/api';\n\nexport interface EmployeeRequest {\n  id: number;\n  requested_by_user_id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number?: string;\n  role_id: number;\n  brand_ids: number[];\n  status: 'pending' | 'approved' | 'rejected';\n  request_message?: string;\n  admin_notes?: string;\n  approved_by_user_id?: number;\n  approved_at?: string;\n  created_at: string;\n  updated_at: string;\n  requested_by_name?: string;\n  approved_by_name?: string;\n  role_name?: string;\n  brand_names: string[];\n  requested_by_brand_ids: number[];\n}\n\nexport interface EmployeeRequestCreate {\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number?: string;\n  role_id: number;\n  brand_ids: number[];\n  request_message?: string;\n}\n\nexport interface EmployeeRequestListResponse {\n  requests: EmployeeRequest[];\n  total: number;\n  page: number;\n  per_page: number;\n}\n\nexport interface BrandManagerStats {\n  total_employees: number;\n  active_employees: number;\n  pending_requests: number;\n  managed_brands_count: number;\n}\n\nexport const employeeRequestsAPI = {\n  // √áalƒ±≈üan ekleme talebi olu≈ütur\n  createEmployeeRequest: async (data: EmployeeRequestCreate): Promise<EmployeeRequest> => {\n    console.log('üîç SENDING EMPLOYEE REQUEST:', data);\n    const response = await api.post('/api/employee-requests/', data);\n    return response.data;\n  },\n\n  // √áalƒ±≈üan taleplerini listele\n  getEmployeeRequests: async (\n    page: number = 1,\n    per_page: number = 10,\n    status?: string\n  ): Promise<EmployeeRequestListResponse> => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      per_page: per_page.toString(),\n    });\n    \n    if (status) {\n      params.append('status', status);\n    }\n\n    const response = await api.get(`/api/employee-requests/?${params}`);\n    return response.data;\n  },\n\n  // Tek bir talebi getir\n  getEmployeeRequest: async (id: number): Promise<EmployeeRequest> => {\n    const response = await api.get(`/api/employee-requests/${id}`);\n    return response.data;\n  },\n\n  // Talebi onayla (Super Admin)\n  approveEmployeeRequest: async (id: number, admin_notes?: string): Promise<{ message: string }> => {\n    const response = await api.put(`/api/employee-requests/${id}/approve`, { admin_notes });\n    return response.data;\n  },\n\n  // Talebi reddet (Super Admin)\n  rejectEmployeeRequest: async (id: number, admin_notes: string): Promise<{ message: string }> => {\n    const response = await api.put(`/api/employee-requests/${id}/reject`, { \n      status: 'rejected',\n      admin_notes \n    });\n    return response.data;\n  },\n\n  // Talep bilgilerini g√ºncelle (Super Admin)\n  updateEmployeeRequest: async (id: number, requestData: EmployeeRequestCreate): Promise<EmployeeRequest> => {\n    const response = await api.put(`/api/employee-requests/${id}`, requestData);\n    return response.data;\n  },\n\n  // Marka y√∂neticisi istatistikleri\n  getBrandManagerStats: async (): Promise<BrandManagerStats> => {\n    const response = await api.get('/api/employee-requests/stats/brand-manager');\n    return response.data;\n  },\n\n};\n"],"mappings":"AAAC,OAAOA,GAAG,MAAM,cAAc;AAiD/B,OAAO,MAAMC,mBAAmB,GAAG;EACjC;EACAC,qBAAqB,EAAE,MAAOC,IAA2B,IAA+B;IACtFC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC;IACjD,MAAMG,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,yBAAyB,EAAEJ,IAAI,CAAC;IAChE,OAAOG,QAAQ,CAACH,IAAI;EACtB,CAAC;EAED;EACAK,mBAAmB,EAAE,MAAAA,CACnBC,IAAY,GAAG,CAAC,EAChBC,QAAgB,GAAG,EAAE,EACrBC,MAAe,KAC0B;IACzC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCJ,IAAI,EAAEA,IAAI,CAACK,QAAQ,CAAC,CAAC;MACrBJ,QAAQ,EAAEA,QAAQ,CAACI,QAAQ,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAIH,MAAM,EAAE;MACVC,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjC;IAEA,MAAML,QAAQ,GAAG,MAAMN,GAAG,CAACgB,GAAG,CAAC,2BAA2BJ,MAAM,EAAE,CAAC;IACnE,OAAON,QAAQ,CAACH,IAAI;EACtB,CAAC;EAED;EACAc,kBAAkB,EAAE,MAAOC,EAAU,IAA+B;IAClE,MAAMZ,QAAQ,GAAG,MAAMN,GAAG,CAACgB,GAAG,CAAC,0BAA0BE,EAAE,EAAE,CAAC;IAC9D,OAAOZ,QAAQ,CAACH,IAAI;EACtB,CAAC;EAED;EACAgB,sBAAsB,EAAE,MAAAA,CAAOD,EAAU,EAAEE,WAAoB,KAAmC;IAChG,MAAMd,QAAQ,GAAG,MAAMN,GAAG,CAACqB,GAAG,CAAC,0BAA0BH,EAAE,UAAU,EAAE;MAAEE;IAAY,CAAC,CAAC;IACvF,OAAOd,QAAQ,CAACH,IAAI;EACtB,CAAC;EAED;EACAmB,qBAAqB,EAAE,MAAAA,CAAOJ,EAAU,EAAEE,WAAmB,KAAmC;IAC9F,MAAMd,QAAQ,GAAG,MAAMN,GAAG,CAACqB,GAAG,CAAC,0BAA0BH,EAAE,SAAS,EAAE;MACpEP,MAAM,EAAE,UAAU;MAClBS;IACF,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACH,IAAI;EACtB,CAAC;EAED;EACAoB,qBAAqB,EAAE,MAAAA,CAAOL,EAAU,EAAEM,WAAkC,KAA+B;IACzG,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACqB,GAAG,CAAC,0BAA0BH,EAAE,EAAE,EAAEM,WAAW,CAAC;IAC3E,OAAOlB,QAAQ,CAACH,IAAI;EACtB,CAAC;EAED;EACAsB,oBAAoB,EAAE,MAAAA,CAAA,KAAwC;IAC5D,MAAMnB,QAAQ,GAAG,MAAMN,GAAG,CAACgB,GAAG,CAAC,4CAA4C,CAAC;IAC5E,OAAOV,QAAQ,CAACH,IAAI;EACtB;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}