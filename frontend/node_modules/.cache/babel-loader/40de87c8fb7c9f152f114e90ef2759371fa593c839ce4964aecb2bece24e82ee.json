{"ast":null,"code":"import _objectSpread from\"C:/Users/ilker/Desktop/aibrands/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\r\n * Merkezi Frontend Konfigürasyon Sistemi\r\n * Tüm frontend ayarları tek yerden yönetilir\r\n */class ConfigManager{constructor(){this.config=void 0;this.listeners=[];this.config=this.loadConfig();this.validateConfig();}loadConfig(){return{database:{url:process.env.REACT_APP_DATABASE_URL||'mysql+pymysql://root:@localhost:3306/aibrands',poolSize:parseInt(process.env.REACT_APP_DB_POOL_SIZE||'20'),maxOverflow:parseInt(process.env.REACT_APP_DB_MAX_OVERFLOW||'30'),poolTimeout:parseInt(process.env.REACT_APP_DB_POOL_TIMEOUT||'30'),poolRecycle:parseInt(process.env.REACT_APP_DB_POOL_RECYCLE||'3600'),echo:process.env.REACT_APP_DB_ECHO==='true'},security:{secretKey:process.env.REACT_APP_SECRET_KEY||'your-secret-key-change-in-production',algorithm:process.env.REACT_APP_JWT_ALGORITHM||'HS256',accessTokenExpireMinutes:parseInt(process.env.REACT_APP_ACCESS_TOKEN_EXPIRE_MINUTES||'15'),refreshTokenExpireDays:parseInt(process.env.REACT_APP_REFRESH_TOKEN_EXPIRE_DAYS||'7'),bcryptRounds:parseInt(process.env.REACT_APP_BCRYPT_ROUNDS||'12'),maxLoginAttempts:parseInt(process.env.REACT_APP_MAX_LOGIN_ATTEMPTS||'5'),lockoutDurationMinutes:parseInt(process.env.REACT_APP_LOCKOUT_DURATION_MINUTES||'15')},cors:{allowedOrigins:(process.env.REACT_APP_ALLOWED_ORIGINS||'http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003').split(','),allowedMethods:(process.env.REACT_APP_ALLOWED_METHODS||'GET,POST,PUT,DELETE,OPTIONS').split(','),allowedHeaders:(process.env.REACT_APP_ALLOWED_HEADERS||'*').split(',')},redis:{url:process.env.REACT_APP_REDIS_URL||'redis://localhost:6379',enabled:process.env.REACT_APP_REDIS_ENABLED!=='false',timeout:parseInt(process.env.REACT_APP_REDIS_TIMEOUT||'5')},email:{smtpServer:process.env.REACT_APP_SMTP_SERVER,smtpPort:parseInt(process.env.REACT_APP_SMTP_PORT||'587'),smtpUsername:process.env.REACT_APP_SMTP_USERNAME,smtpPassword:process.env.REACT_APP_SMTP_PASSWORD,fromEmail:process.env.REACT_APP_FROM_EMAIL||'noreply@aibrands.com',fromName:process.env.REACT_APP_FROM_NAME||'AI Brands',useSSL:process.env.REACT_APP_SMTP_USE_SSL==='true',useTLS:process.env.REACT_APP_SMTP_USE_TLS!=='false'},ocr:{googleAiApiKey:process.env.REACT_APP_GOOGLE_AI_API_KEY,parallelWorkers:parseInt(process.env.REACT_APP_OCR_PARALLEL_WORKERS||'10'),timeout:parseInt(process.env.REACT_APP_OCR_TIMEOUT||'30'),retryCount:parseInt(process.env.REACT_APP_OCR_RETRY_COUNT||'3')},upload:{maxFileCount:parseInt(process.env.REACT_APP_MAX_FILE_COUNT||'500'),maxFileSizeMB:parseInt(process.env.REACT_APP_MAX_FILE_SIZE_MB||'10'),allowedExtensions:(process.env.REACT_APP_ALLOWED_EXTENSIONS||'jpg,jpeg,png,webp').split(','),totalUploadSizeMB:parseInt(process.env.REACT_APP_TOTAL_UPLOAD_SIZE_MB||'500'),storagePath:process.env.REACT_APP_STORAGE_PATH||'uploads'},telegram:{botToken:process.env.REACT_APP_TELEGRAM_BOT_TOKEN,chatId:process.env.REACT_APP_TELEGRAM_CHAT_ID},app:{name:process.env.REACT_APP_NAME||'AI Brands',version:process.env.REACT_APP_VERSION||'2.0.0',description:process.env.REACT_APP_DESCRIPTION||'AI Destekli Marka Yönetim Platformu',author:process.env.REACT_APP_AUTHOR||'AI Brands Team',environment:process.env.REACT_APP_ENVIRONMENT||'development',debug:process.env.REACT_APP_DEBUG==='true',backendUrl:process.env.REACT_APP_API_URL||'http://localhost:8000',frontendUrl:process.env.REACT_APP_FRONTEND_URL||'http://localhost:3000'},ui:{theme:process.env.REACT_APP_THEME||'light',language:process.env.REACT_APP_LANGUAGE||'tr',dateFormat:process.env.REACT_APP_DATE_FORMAT||'DD/MM/YYYY',timeFormat:process.env.REACT_APP_TIME_FORMAT||'HH:mm',timezone:process.env.REACT_APP_TIMEZONE||'Europe/Istanbul'},features:{socialMedia:process.env.REACT_APP_FEATURE_SOCIAL_MEDIA!=='false',templates:process.env.REACT_APP_FEATURE_TEMPLATES!=='false',aiGeneration:process.env.REACT_APP_FEATURE_AI_GENERATION!=='false',multiLanguage:process.env.REACT_APP_FEATURE_MULTI_LANGUAGE==='true',analytics:process.env.REACT_APP_FEATURE_ANALYTICS!=='false',reporting:process.env.REACT_APP_FEATURE_REPORTING!=='false',monitoring:process.env.REACT_APP_FEATURE_MONITORING!=='false'},cache:{enabled:process.env.REACT_APP_CACHE_ENABLED!=='false',ttl:parseInt(process.env.REACT_APP_CACHE_TTL||'300'),maxSize:parseInt(process.env.REACT_APP_CACHE_MAX_SIZE||'50'),strategy:process.env.REACT_APP_CACHE_STRATEGY||'lru'},pagination:{defaultPageSize:parseInt(process.env.REACT_APP_DEFAULT_PAGE_SIZE||'20'),pageSizeOptions:(process.env.REACT_APP_PAGE_SIZE_OPTIONS||'10,20,50,100').split(',').map(Number),maxPageSize:parseInt(process.env.REACT_APP_MAX_PAGE_SIZE||'1000')},api:{baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000',timeout:parseInt(process.env.REACT_APP_API_TIMEOUT||'30000'),retryAttempts:parseInt(process.env.REACT_APP_API_RETRY_ATTEMPTS||'3'),retryDelay:parseInt(process.env.REACT_APP_API_RETRY_DELAY||'1000'),maxConcurrentRequests:parseInt(process.env.REACT_APP_API_MAX_CONCURRENT||'10')}};}validateConfig(){// Validate required fields\nif(!this.config.app.name){throw new Error('App name is required');}if(!this.config.api.baseURL){throw new Error('API base URL is required');}if(!this.config.app.version){throw new Error('App version is required');}// Validate numeric fields\nif(this.config.upload.maxFileSizeMB<=0){throw new Error('Max file size must be positive');}if(this.config.upload.maxFileCount<=0){throw new Error('Max file count must be positive');}if(this.config.pagination.defaultPageSize<=0){throw new Error('Default page size must be positive');}}getConfig(){return _objectSpread({},this.config);}get(key){return this.config[key];}updateConfig(updates){this.config=_objectSpread(_objectSpread({},this.config),updates);this.validateConfig();this.notifyListeners();}subscribe(listener){this.listeners.push(listener);return()=>{const index=this.listeners.indexOf(listener);if(index>-1){this.listeners.splice(index,1);}};}notifyListeners(){this.listeners.forEach(listener=>listener(this.config));}isProduction(){return this.config.app.environment==='production';}isDevelopment(){return this.config.app.environment==='development';}isStaging(){return this.config.app.environment==='staging';}getAppInfo(){return{name:this.config.app.name,version:this.config.app.version,description:this.config.app.description,author:this.config.app.author,environment:this.config.app.environment};}getUploadLimits(){return{maxFileCount:this.config.upload.maxFileCount,maxFileSizeMB:this.config.upload.maxFileSizeMB,allowedExtensions:this.config.upload.allowedExtensions,totalUploadSizeMB:this.config.upload.totalUploadSizeMB,storagePath:this.config.upload.storagePath};}getOCRConfig(){return{apiKey:this.config.ocr.googleAiApiKey,parallelWorkers:this.config.ocr.parallelWorkers,timeout:this.config.ocr.timeout,retryCount:this.config.ocr.retryCount};}}// Singleton instance\nexport const configManager=new ConfigManager();// Export commonly used configs\nexport const databaseConfig=configManager.get('database');export const securityConfig=configManager.get('security');export const corsConfig=configManager.get('cors');export const redisConfig=configManager.get('redis');export const emailConfig=configManager.get('email');export const ocrConfig=configManager.get('ocr');export const uploadConfig=configManager.get('upload');export const telegramConfig=configManager.get('telegram');export const appConfig=configManager.get('app');export const uiConfig=configManager.get('ui');export const featuresConfig=configManager.get('features');export const cacheConfig=configManager.get('cache');export const paginationConfig=configManager.get('pagination');export const apiConfig=configManager.get('api');// Export the main config\nexport const config=configManager.getConfig();export default configManager;","map":{"version":3,"names":["ConfigManager","constructor","config","listeners","loadConfig","validateConfig","database","url","process","env","REACT_APP_DATABASE_URL","poolSize","parseInt","REACT_APP_DB_POOL_SIZE","maxOverflow","REACT_APP_DB_MAX_OVERFLOW","poolTimeout","REACT_APP_DB_POOL_TIMEOUT","poolRecycle","REACT_APP_DB_POOL_RECYCLE","echo","REACT_APP_DB_ECHO","security","secretKey","REACT_APP_SECRET_KEY","algorithm","REACT_APP_JWT_ALGORITHM","accessTokenExpireMinutes","REACT_APP_ACCESS_TOKEN_EXPIRE_MINUTES","refreshTokenExpireDays","REACT_APP_REFRESH_TOKEN_EXPIRE_DAYS","bcryptRounds","REACT_APP_BCRYPT_ROUNDS","maxLoginAttempts","REACT_APP_MAX_LOGIN_ATTEMPTS","lockoutDurationMinutes","REACT_APP_LOCKOUT_DURATION_MINUTES","cors","allowedOrigins","REACT_APP_ALLOWED_ORIGINS","split","allowedMethods","REACT_APP_ALLOWED_METHODS","allowedHeaders","REACT_APP_ALLOWED_HEADERS","redis","REACT_APP_REDIS_URL","enabled","REACT_APP_REDIS_ENABLED","timeout","REACT_APP_REDIS_TIMEOUT","email","smtpServer","REACT_APP_SMTP_SERVER","smtpPort","REACT_APP_SMTP_PORT","smtpUsername","REACT_APP_SMTP_USERNAME","smtpPassword","REACT_APP_SMTP_PASSWORD","fromEmail","REACT_APP_FROM_EMAIL","fromName","REACT_APP_FROM_NAME","useSSL","REACT_APP_SMTP_USE_SSL","useTLS","REACT_APP_SMTP_USE_TLS","ocr","googleAiApiKey","REACT_APP_GOOGLE_AI_API_KEY","parallelWorkers","REACT_APP_OCR_PARALLEL_WORKERS","REACT_APP_OCR_TIMEOUT","retryCount","REACT_APP_OCR_RETRY_COUNT","upload","maxFileCount","REACT_APP_MAX_FILE_COUNT","maxFileSizeMB","REACT_APP_MAX_FILE_SIZE_MB","allowedExtensions","REACT_APP_ALLOWED_EXTENSIONS","totalUploadSizeMB","REACT_APP_TOTAL_UPLOAD_SIZE_MB","storagePath","REACT_APP_STORAGE_PATH","telegram","botToken","REACT_APP_TELEGRAM_BOT_TOKEN","chatId","REACT_APP_TELEGRAM_CHAT_ID","app","name","REACT_APP_NAME","version","REACT_APP_VERSION","description","REACT_APP_DESCRIPTION","author","REACT_APP_AUTHOR","environment","REACT_APP_ENVIRONMENT","debug","REACT_APP_DEBUG","backendUrl","REACT_APP_API_URL","frontendUrl","REACT_APP_FRONTEND_URL","ui","theme","REACT_APP_THEME","language","REACT_APP_LANGUAGE","dateFormat","REACT_APP_DATE_FORMAT","timeFormat","REACT_APP_TIME_FORMAT","timezone","REACT_APP_TIMEZONE","features","socialMedia","REACT_APP_FEATURE_SOCIAL_MEDIA","templates","REACT_APP_FEATURE_TEMPLATES","aiGeneration","REACT_APP_FEATURE_AI_GENERATION","multiLanguage","REACT_APP_FEATURE_MULTI_LANGUAGE","analytics","REACT_APP_FEATURE_ANALYTICS","reporting","REACT_APP_FEATURE_REPORTING","monitoring","REACT_APP_FEATURE_MONITORING","cache","REACT_APP_CACHE_ENABLED","ttl","REACT_APP_CACHE_TTL","maxSize","REACT_APP_CACHE_MAX_SIZE","strategy","REACT_APP_CACHE_STRATEGY","pagination","defaultPageSize","REACT_APP_DEFAULT_PAGE_SIZE","pageSizeOptions","REACT_APP_PAGE_SIZE_OPTIONS","map","Number","maxPageSize","REACT_APP_MAX_PAGE_SIZE","api","baseURL","REACT_APP_API_TIMEOUT","retryAttempts","REACT_APP_API_RETRY_ATTEMPTS","retryDelay","REACT_APP_API_RETRY_DELAY","maxConcurrentRequests","REACT_APP_API_MAX_CONCURRENT","Error","getConfig","_objectSpread","get","key","updateConfig","updates","notifyListeners","subscribe","listener","push","index","indexOf","splice","forEach","isProduction","isDevelopment","isStaging","getAppInfo","getUploadLimits","getOCRConfig","apiKey","configManager","databaseConfig","securityConfig","corsConfig","redisConfig","emailConfig","ocrConfig","uploadConfig","telegramConfig","appConfig","uiConfig","featuresConfig","cacheConfig","paginationConfig","apiConfig"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/core/config.ts"],"sourcesContent":["/**\r\n * Merkezi Frontend Konfigürasyon Sistemi\r\n * Tüm frontend ayarları tek yerden yönetilir\r\n */\r\n\r\nexport interface DatabaseConfig {\r\n  url: string;\r\n  poolSize: number;\r\n  maxOverflow: number;\r\n  poolTimeout: number;\r\n  poolRecycle: number;\r\n  echo: boolean;\r\n}\r\n\r\nexport interface SecurityConfig {\r\n  secretKey: string;\r\n  algorithm: string;\r\n  accessTokenExpireMinutes: number;\r\n  refreshTokenExpireDays: number;\r\n  bcryptRounds: number;\r\n  maxLoginAttempts: number;\r\n  lockoutDurationMinutes: number;\r\n}\r\n\r\nexport interface CORSConfig {\r\n  allowedOrigins: string[];\r\n  allowedMethods: string[];\r\n  allowedHeaders: string[];\r\n}\r\n\r\nexport interface RedisConfig {\r\n  url: string;\r\n  enabled: boolean;\r\n  timeout: number;\r\n}\r\n\r\nexport interface EmailConfig {\r\n  smtpServer?: string;\r\n  smtpPort: number;\r\n  smtpUsername?: string;\r\n  smtpPassword?: string;\r\n  fromEmail: string;\r\n  fromName: string;\r\n  useSSL: boolean;\r\n  useTLS: boolean;\r\n}\r\n\r\nexport interface OCRConfig {\r\n  googleAiApiKey?: string;\r\n  parallelWorkers: number;\r\n  timeout: number;\r\n  retryCount: number;\r\n}\r\n\r\nexport interface UploadConfig {\r\n  maxFileCount: number;\r\n  maxFileSizeMB: number;\r\n  allowedExtensions: string[];\r\n  totalUploadSizeMB: number;\r\n  storagePath: string;\r\n}\r\n\r\nexport interface TelegramConfig {\r\n  botToken?: string;\r\n  chatId?: string;\r\n}\r\n\r\nexport interface AppConfig {\r\n  name: string;\r\n  version: string;\r\n  description: string;\r\n  author: string;\r\n  environment: 'development' | 'staging' | 'production';\r\n  debug: boolean;\r\n  backendUrl: string;\r\n  frontendUrl: string;\r\n}\r\n\r\nexport interface UIConfig {\r\n  theme: 'light' | 'dark' | 'system';\r\n  language: string;\r\n  dateFormat: string;\r\n  timeFormat: string;\r\n  timezone: string;\r\n}\r\n\r\nexport interface FeatureConfig {\r\n  socialMedia: boolean;\r\n  templates: boolean;\r\n  aiGeneration: boolean;\r\n  multiLanguage: boolean;\r\n  analytics: boolean;\r\n  reporting: boolean;\r\n  monitoring: boolean;\r\n}\r\n\r\nexport interface CacheConfig {\r\n  enabled: boolean;\r\n  ttl: number; // seconds\r\n  maxSize: number; // MB\r\n  strategy: 'lru' | 'fifo' | 'lfu';\r\n}\r\n\r\nexport interface PaginationConfig {\r\n  defaultPageSize: number;\r\n  pageSizeOptions: number[];\r\n  maxPageSize: number;\r\n}\r\n\r\nexport interface APIConfig {\r\n  baseURL: string;\r\n  timeout: number;\r\n  retryAttempts: number;\r\n  retryDelay: number;\r\n  maxConcurrentRequests: number;\r\n}\r\n\r\nexport interface EnterpriseConfig {\r\n  database: DatabaseConfig;\r\n  security: SecurityConfig;\r\n  cors: CORSConfig;\r\n  redis: RedisConfig;\r\n  email: EmailConfig;\r\n  ocr: OCRConfig;\r\n  upload: UploadConfig;\r\n  telegram: TelegramConfig;\r\n  app: AppConfig;\r\n  ui: UIConfig;\r\n  features: FeatureConfig;\r\n  cache: CacheConfig;\r\n  pagination: PaginationConfig;\r\n  api: APIConfig;\r\n}\r\n\r\nclass ConfigManager {\r\n  private config: EnterpriseConfig;\r\n  private listeners: Array<(config: EnterpriseConfig) => void> = [];\r\n\r\n  constructor() {\r\n    this.config = this.loadConfig();\r\n    this.validateConfig();\r\n  }\r\n\r\n  private loadConfig(): EnterpriseConfig {\r\n    return {\r\n      database: {\r\n        url: process.env.REACT_APP_DATABASE_URL || 'mysql+pymysql://root:@localhost:3306/aibrands',\r\n        poolSize: parseInt(process.env.REACT_APP_DB_POOL_SIZE || '20'),\r\n        maxOverflow: parseInt(process.env.REACT_APP_DB_MAX_OVERFLOW || '30'),\r\n        poolTimeout: parseInt(process.env.REACT_APP_DB_POOL_TIMEOUT || '30'),\r\n        poolRecycle: parseInt(process.env.REACT_APP_DB_POOL_RECYCLE || '3600'),\r\n        echo: process.env.REACT_APP_DB_ECHO === 'true'\r\n      },\r\n      security: {\r\n        secretKey: process.env.REACT_APP_SECRET_KEY || 'your-secret-key-change-in-production',\r\n        algorithm: process.env.REACT_APP_JWT_ALGORITHM || 'HS256',\r\n        accessTokenExpireMinutes: parseInt(process.env.REACT_APP_ACCESS_TOKEN_EXPIRE_MINUTES || '15'),\r\n        refreshTokenExpireDays: parseInt(process.env.REACT_APP_REFRESH_TOKEN_EXPIRE_DAYS || '7'),\r\n        bcryptRounds: parseInt(process.env.REACT_APP_BCRYPT_ROUNDS || '12'),\r\n        maxLoginAttempts: parseInt(process.env.REACT_APP_MAX_LOGIN_ATTEMPTS || '5'),\r\n        lockoutDurationMinutes: parseInt(process.env.REACT_APP_LOCKOUT_DURATION_MINUTES || '15')\r\n      },\r\n      cors: {\r\n        allowedOrigins: (process.env.REACT_APP_ALLOWED_ORIGINS || 'http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003').split(','),\r\n        allowedMethods: (process.env.REACT_APP_ALLOWED_METHODS || 'GET,POST,PUT,DELETE,OPTIONS').split(','),\r\n        allowedHeaders: (process.env.REACT_APP_ALLOWED_HEADERS || '*').split(',')\r\n      },\r\n      redis: {\r\n        url: process.env.REACT_APP_REDIS_URL || 'redis://localhost:6379',\r\n        enabled: process.env.REACT_APP_REDIS_ENABLED !== 'false',\r\n        timeout: parseInt(process.env.REACT_APP_REDIS_TIMEOUT || '5')\r\n      },\r\n      email: {\r\n        smtpServer: process.env.REACT_APP_SMTP_SERVER,\r\n        smtpPort: parseInt(process.env.REACT_APP_SMTP_PORT || '587'),\r\n        smtpUsername: process.env.REACT_APP_SMTP_USERNAME,\r\n        smtpPassword: process.env.REACT_APP_SMTP_PASSWORD,\r\n        fromEmail: process.env.REACT_APP_FROM_EMAIL || 'noreply@aibrands.com',\r\n        fromName: process.env.REACT_APP_FROM_NAME || 'AI Brands',\r\n        useSSL: process.env.REACT_APP_SMTP_USE_SSL === 'true',\r\n        useTLS: process.env.REACT_APP_SMTP_USE_TLS !== 'false'\r\n      },\r\n      ocr: {\r\n        googleAiApiKey: process.env.REACT_APP_GOOGLE_AI_API_KEY,\r\n        parallelWorkers: parseInt(process.env.REACT_APP_OCR_PARALLEL_WORKERS || '10'),\r\n        timeout: parseInt(process.env.REACT_APP_OCR_TIMEOUT || '30'),\r\n        retryCount: parseInt(process.env.REACT_APP_OCR_RETRY_COUNT || '3')\r\n      },\r\n      upload: {\r\n        maxFileCount: parseInt(process.env.REACT_APP_MAX_FILE_COUNT || '500'),\r\n        maxFileSizeMB: parseInt(process.env.REACT_APP_MAX_FILE_SIZE_MB || '10'),\r\n        allowedExtensions: (process.env.REACT_APP_ALLOWED_EXTENSIONS || 'jpg,jpeg,png,webp').split(','),\r\n        totalUploadSizeMB: parseInt(process.env.REACT_APP_TOTAL_UPLOAD_SIZE_MB || '500'),\r\n        storagePath: process.env.REACT_APP_STORAGE_PATH || 'uploads'\r\n      },\r\n      telegram: {\r\n        botToken: process.env.REACT_APP_TELEGRAM_BOT_TOKEN,\r\n        chatId: process.env.REACT_APP_TELEGRAM_CHAT_ID\r\n      },\r\n      app: {\r\n        name: process.env.REACT_APP_NAME || 'AI Brands',\r\n        version: process.env.REACT_APP_VERSION || '2.0.0',\r\n        description: process.env.REACT_APP_DESCRIPTION || 'AI Destekli Marka Yönetim Platformu',\r\n        author: process.env.REACT_APP_AUTHOR || 'AI Brands Team',\r\n        environment: (process.env.REACT_APP_ENVIRONMENT || 'development') as 'development' | 'staging' | 'production',\r\n        debug: process.env.REACT_APP_DEBUG === 'true',\r\n        backendUrl: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n        frontendUrl: process.env.REACT_APP_FRONTEND_URL || 'http://localhost:3000'\r\n      },\r\n      ui: {\r\n        theme: (process.env.REACT_APP_THEME || 'light') as 'light' | 'dark' | 'system',\r\n        language: process.env.REACT_APP_LANGUAGE || 'tr',\r\n        dateFormat: process.env.REACT_APP_DATE_FORMAT || 'DD/MM/YYYY',\r\n        timeFormat: process.env.REACT_APP_TIME_FORMAT || 'HH:mm',\r\n        timezone: process.env.REACT_APP_TIMEZONE || 'Europe/Istanbul'\r\n      },\r\n      features: {\r\n        socialMedia: process.env.REACT_APP_FEATURE_SOCIAL_MEDIA !== 'false',\r\n        templates: process.env.REACT_APP_FEATURE_TEMPLATES !== 'false',\r\n        aiGeneration: process.env.REACT_APP_FEATURE_AI_GENERATION !== 'false',\r\n        multiLanguage: process.env.REACT_APP_FEATURE_MULTI_LANGUAGE === 'true',\r\n        analytics: process.env.REACT_APP_FEATURE_ANALYTICS !== 'false',\r\n        reporting: process.env.REACT_APP_FEATURE_REPORTING !== 'false',\r\n        monitoring: process.env.REACT_APP_FEATURE_MONITORING !== 'false'\r\n      },\r\n      cache: {\r\n        enabled: process.env.REACT_APP_CACHE_ENABLED !== 'false',\r\n        ttl: parseInt(process.env.REACT_APP_CACHE_TTL || '300'),\r\n        maxSize: parseInt(process.env.REACT_APP_CACHE_MAX_SIZE || '50'),\r\n        strategy: (process.env.REACT_APP_CACHE_STRATEGY || 'lru') as 'lru' | 'fifo' | 'lfu'\r\n      },\r\n      pagination: {\r\n        defaultPageSize: parseInt(process.env.REACT_APP_DEFAULT_PAGE_SIZE || '20'),\r\n        pageSizeOptions: (process.env.REACT_APP_PAGE_SIZE_OPTIONS || '10,20,50,100').split(',').map(Number),\r\n        maxPageSize: parseInt(process.env.REACT_APP_MAX_PAGE_SIZE || '1000')\r\n      },\r\n      api: {\r\n        baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n        timeout: parseInt(process.env.REACT_APP_API_TIMEOUT || '30000'),\r\n        retryAttempts: parseInt(process.env.REACT_APP_API_RETRY_ATTEMPTS || '3'),\r\n        retryDelay: parseInt(process.env.REACT_APP_API_RETRY_DELAY || '1000'),\r\n        maxConcurrentRequests: parseInt(process.env.REACT_APP_API_MAX_CONCURRENT || '10')\r\n      }\r\n    };\r\n  }\r\n\r\n  private validateConfig(): void {\r\n    // Validate required fields\r\n    if (!this.config.app.name) {\r\n      throw new Error('App name is required');\r\n    }\r\n    if (!this.config.api.baseURL) {\r\n      throw new Error('API base URL is required');\r\n    }\r\n    if (!this.config.app.version) {\r\n      throw new Error('App version is required');\r\n    }\r\n\r\n    // Validate numeric fields\r\n    if (this.config.upload.maxFileSizeMB <= 0) {\r\n      throw new Error('Max file size must be positive');\r\n    }\r\n    if (this.config.upload.maxFileCount <= 0) {\r\n      throw new Error('Max file count must be positive');\r\n    }\r\n    if (this.config.pagination.defaultPageSize <= 0) {\r\n      throw new Error('Default page size must be positive');\r\n    }\r\n  }\r\n\r\n  public getConfig(): EnterpriseConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  public get<K extends keyof EnterpriseConfig>(key: K): EnterpriseConfig[K] {\r\n    return this.config[key];\r\n  }\r\n\r\n  public updateConfig(updates: Partial<EnterpriseConfig>): void {\r\n    this.config = { ...this.config, ...updates };\r\n    this.validateConfig();\r\n    this.notifyListeners();\r\n  }\r\n\r\n  public subscribe(listener: (config: EnterpriseConfig) => void): () => void {\r\n    this.listeners.push(listener);\r\n    return () => {\r\n      const index = this.listeners.indexOf(listener);\r\n      if (index > -1) {\r\n        this.listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  private notifyListeners(): void {\r\n    this.listeners.forEach(listener => listener(this.config));\r\n  }\r\n\r\n  public isProduction(): boolean {\r\n    return this.config.app.environment === 'production';\r\n  }\r\n\r\n  public isDevelopment(): boolean {\r\n    return this.config.app.environment === 'development';\r\n  }\r\n\r\n  public isStaging(): boolean {\r\n    return this.config.app.environment === 'staging';\r\n  }\r\n\r\n  public getAppInfo() {\r\n    return {\r\n      name: this.config.app.name,\r\n      version: this.config.app.version,\r\n      description: this.config.app.description,\r\n      author: this.config.app.author,\r\n      environment: this.config.app.environment\r\n    };\r\n  }\r\n\r\n  public getUploadLimits() {\r\n    return {\r\n      maxFileCount: this.config.upload.maxFileCount,\r\n      maxFileSizeMB: this.config.upload.maxFileSizeMB,\r\n      allowedExtensions: this.config.upload.allowedExtensions,\r\n      totalUploadSizeMB: this.config.upload.totalUploadSizeMB,\r\n      storagePath: this.config.upload.storagePath\r\n    };\r\n  }\r\n\r\n  public getOCRConfig() {\r\n    return {\r\n      apiKey: this.config.ocr.googleAiApiKey,\r\n      parallelWorkers: this.config.ocr.parallelWorkers,\r\n      timeout: this.config.ocr.timeout,\r\n      retryCount: this.config.ocr.retryCount\r\n    };\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const configManager = new ConfigManager();\r\n\r\n// Export commonly used configs\r\nexport const databaseConfig = configManager.get('database');\r\nexport const securityConfig = configManager.get('security');\r\nexport const corsConfig = configManager.get('cors');\r\nexport const redisConfig = configManager.get('redis');\r\nexport const emailConfig = configManager.get('email');\r\nexport const ocrConfig = configManager.get('ocr');\r\nexport const uploadConfig = configManager.get('upload');\r\nexport const telegramConfig = configManager.get('telegram');\r\nexport const appConfig = configManager.get('app');\r\nexport const uiConfig = configManager.get('ui');\r\nexport const featuresConfig = configManager.get('features');\r\nexport const cacheConfig = configManager.get('cache');\r\nexport const paginationConfig = configManager.get('pagination');\r\nexport const apiConfig = configManager.get('api');\r\n\r\n// Export the main config\r\nexport const config = configManager.getConfig();\r\n\r\nexport default configManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}