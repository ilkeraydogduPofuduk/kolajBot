{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilker\\\\Desktop\\\\aibrands\\\\frontend\\\\src\\\\pages\\\\admin\\\\SocialMediaChannelsOptimized.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { socialMediaChannelsAPI } from '../../api/socialMediaChannels';\nimport { brandsAPI } from '../../api/brands';\nimport { telegramBotsAPI } from '../../api/telegramBots';\nimport { MessageCircle, Edit, Trash2, ToggleLeft, ToggleRight, CheckCircle, XCircle, RefreshCw, Bot // For discover button\n// For warning\n} from 'lucide-react';\nimport toast from 'react-hot-toast';\n\n// Remove DynamicChannelModal import and usage\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SocialMediaChannelsOptimized = () => {\n  _s();\n  const {\n    user,\n    loading: authLoading\n  } = useAuth();\n  const navigate = useNavigate();\n  const [channels, setChannels] = useState([]);\n  const [channelsLoading, setChannelsLoading] = useState(false);\n  const [bots, setBots] = useState([]); // User's bots\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(12);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [brandFilter, setBrandFilter] = useState(null);\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [discoverLoading, setDiscoverLoading] = useState(false);\n\n  // Auto brand filter for brand manager\n  const userBrandId = (user === null || user === void 0 ? void 0 : user.brand_id) || null;\n  const fetchChannels = useCallback(async ({\n    page,\n    perPage,\n    search,\n    filters\n  }) => {\n    const params = {\n      page,\n      per_page: perPage,\n      search,\n      ...(userBrandId && {\n        brand_id: userBrandId\n      }),\n      // Auto filter\n      ...((filters === null || filters === void 0 ? void 0 : filters.brand) && {\n        brand_id: filters.brand\n      }),\n      ...((filters === null || filters === void 0 ? void 0 : filters.status) && filters.status !== 'all' && {\n        is_active: filters.status === 'active'\n      })\n    };\n    const response = await socialMediaChannelsAPI.getChannels(params.page, params.per_page, 'telegram', params.brand_id, params.search);\n    return {\n      data: response.channels,\n      total: response.total,\n      totalPages: response.total_pages\n    };\n  }, [userBrandId]);\n  const loadChannels = useCallback(async (page = 1, search = '', filters = {}) => {\n    setChannelsLoading(true);\n    try {\n      const {\n        data,\n        total,\n        totalPages\n      } = await fetchChannels({\n        page,\n        perPage: pageSize,\n        search,\n        filters\n      });\n      setChannels(data);\n      setTotalPages(totalPages || Math.ceil(total / pageSize));\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Kanallar yüklenemedi');\n    } finally {\n      setChannelsLoading(false);\n    }\n  }, [fetchChannels, pageSize]);\n\n  // Load bots for discovery\n  const loadBots = useCallback(async () => {\n    try {\n      const response = await telegramBotsAPI.getBots();\n      const userBots = response.bots.filter(b => b.brand_id === userBrandId);\n      setBots(userBots);\n    } catch (error) {\n      console.error('Bots load error');\n    }\n  }, [userBrandId]);\n\n  // Discover function\n  const handleDiscoverChannels = async () => {\n    if (bots.length === 0) {\n      toast.error('Önce bot ekleyin');\n      return;\n    }\n    setDiscoverLoading(true);\n    let totalDiscovered = 0;\n    const promises = bots.map(async bot => {\n      try {\n        const response = await telegramBotsAPI.discoverChannelsForBot(bot.id);\n        if (response.success) {\n          totalDiscovered += response.discovered_count || 0;\n          toast.success(`Bot ${bot.bot_name}: ${response.discovered_count} kanal eklendi`);\n        }\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        toast.error(`Bot ${bot.bot_name} keşif hatası: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Hata'}`);\n      }\n    });\n    try {\n      await Promise.all(promises);\n      toast.success(`Toplam ${totalDiscovered} kanal keşfedildi!`);\n      loadChannels(); // Reload channels\n    } catch (error) {\n      toast.error('Keşif tamamlanamadı');\n    } finally {\n      setDiscoverLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      loadBots();\n      loadChannels(1, '', {\n        brand: userBrandId\n      });\n    }\n  }, [user, loadChannels, loadBots, userBrandId]);\n\n  // Reset to page 1 when filters change\n  useEffect(() => {\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n    } else {\n      loadChannels();\n    }\n  }, [searchTerm, brandFilter, statusFilter]);\n  const resetTable = useCallback(() => {\n    loadChannels();\n  }, [loadChannels]);\n\n  // Load brands\n  const loadBrands = useCallback(async () => {\n    try {\n      const response = await brandsAPI.getBrands(1, 100);\n      // setBrands(response.brands); // This state is no longer needed\n    } catch (error) {\n      // Silently handle error - brands are not critical\n    }\n  }, []);\n\n  // Initial load\n  useEffect(() => {\n    loadBrands();\n  }, [loadBrands]);\n\n  // Auth check - Prevent redirect loop\n  useEffect(() => {\n    if (authLoading) return; // Still loading\n\n    if (!user) {\n      navigate('/login', {\n        replace: true\n      }); // Replace history to prevent back button issues\n    }\n  }, [authLoading, user, navigate]);\n\n  // Handle delete\n  const handleDeleteChannel = async channelId => {\n    if (!window.confirm('Bu kanalı silmek istediğinizden emin misiniz?')) return;\n    try {\n      await socialMediaChannelsAPI.deleteChannel(channelId);\n      toast.success('Kanal silindi');\n      resetTable();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Kanal silinemedi');\n    }\n  };\n\n  // Handle toggle status\n  const handleToggleChannel = async channelId => {\n    try {\n      await socialMediaChannelsAPI.toggleChannelStatus(channelId);\n      toast.success('Kanal durumu güncellendi');\n      resetTable();\n    } catch (error) {\n      toast.error('Durum güncellenemedi');\n    }\n  };\n\n  // Handle refresh channel info\n  const handleRefreshChannelInfo = async channelId => {\n    try {\n      toast.loading('Kanal bilgileri güncelleniyor...', {\n        id: 'refresh'\n      });\n      await socialMediaChannelsAPI.refreshChannelInfo(channelId);\n      resetTable();\n      toast.success('Kanal bilgileri güncellendi', {\n        id: 'refresh'\n      });\n    } catch (error) {\n      toast.error('Bilgiler güncellenemedi', {\n        id: 'refresh'\n      });\n    }\n  };\n\n  // Handle modal success\n  const handleModalSuccess = async () => {\n    // setShowModal(false); // This state is no longer needed\n    // setEditingChannel(null); // This state is no longer needed\n    // setSelectedPlatform(null); // This state is no longer needed\n    resetTable();\n  };\n\n  // Brand filter options\n  // const brandFilterOptions = useMemo(() => { // This state is no longer needed\n  //   return [\n  //     { value: null, label: 'Tüm Markalar' },\n  //     ...brands.map(brand => ({ value: brand.id, label: brand.name }))\n  //   ];\n  // }, [brands]);\n\n  // Status filter options\n  const statusFilterOptions = [{\n    value: 'all',\n    label: 'Tümü'\n  }, {\n    value: 'active',\n    label: 'Aktif'\n  }, {\n    value: 'inactive',\n    label: 'Pasif'\n  }];\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'Super Admin';\n\n  // Show loading only while auth is loading\n  if (authLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Don't render anything if not authenticated (redirect will happen)\n  if (!user) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Telegram Kanallar\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-1\",\n          children: \"Bot'lar\\u0131n\\u0131za ba\\u011Fl\\u0131 kanallar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), bots.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDiscoverChannels,\n        disabled: discoverLoading,\n        className: \"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\",\n        children: [discoverLoading ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"animate-spin h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), \"Kanallar\\u0131 Ke\\u015Ffet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), channels.length === 0 && bots.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mb-4\",\n          children: \"Hen\\xFCz bot eklenmemi\\u015F. Bot ekleyin ki kanallar otomatik ke\\u015Ffedilsin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/admin/telegram/bots'),\n          className: \"px-4 py-2 bg-blue-600 text-white rounded-lg\",\n          children: \"Bot Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {\n            value: searchTerm,\n            onChange: setSearchTerm,\n            placeholder: \"Kanal ara...\",\n            debounceMs: 300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n          label: \"Durum\",\n          value: statusFilter || 'all',\n          onChange: value => setStatusFilter(value),\n          options: statusFilterOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n          label: \"Marka\",\n          value: (brandFilter === null || brandFilter === void 0 ? void 0 : brandFilter.toString()) || null,\n          onChange: value => setBrandFilter(value ? Number(value) : null),\n          options: brandFilterOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), (searchTerm || statusFilter !== 'all' || brandFilter) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSearchTerm('');\n            setStatusFilter('all');\n            setBrandFilter(null);\n          },\n          className: \"px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors\",\n          children: \"Filtreleri Temizle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), channelsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500 mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Kanallar y\\xFCkleniyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this) : channels.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n        size: 48,\n        className: \"mx-auto text-gray-300 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-2\",\n        children: \"Kanal Bulunamad\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: searchTerm || statusFilter !== 'all' || brandFilter ? 'Arama kriterlerinize uygun kanal bulunamadı' : 'Henüz hiç kanal eklenmemiş'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: channels.map(channel => {\n          var _user$permissions;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card hover:shadow-lg transition-all ${!channel.is_active ? 'opacity-60' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-12 h-12 rounded-lg flex items-center justify-center ${channel.is_active ? 'bg-blue-100' : 'bg-gray-200'}`,\n                  children: /*#__PURE__*/_jsxDEV(MessageCircle, {\n                    size: 24,\n                    className: channel.is_active ? 'text-blue-600' : 'text-gray-400'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold text-gray-900\",\n                    children: channel.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: channel.brand_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), channel.is_active ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 20,\n                className: \"text-green-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n                size: 20,\n                className: \"text-red-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-4 mb-4 py-3 border-y border-gray-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: channel.member_count || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-600\",\n                  children: \"\\xDCye\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: channel.last_activity ? new Date(channel.last_activity).toLocaleDateString('tr-TR', {\n                    day: '2-digit',\n                    month: '2-digit'\n                  }) : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-600\",\n                  children: \"Son Aktivite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), !channel.is_active && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 px-3 py-1.5 bg-yellow-100 text-yellow-800 rounded-lg text-center text-sm font-medium\",\n              children: \"Mesaj G\\xF6nderimi Kapal\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigate(`/admin/social-media/channels/${channel.id}`),\n                className: \"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(Eye, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this), \"Detay\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleChannel(channel.id),\n                className: `p-2 rounded-lg transition-colors ${channel.is_active ? 'bg-yellow-100 text-yellow-600 hover:bg-yellow-200' : 'bg-green-100 text-green-600 hover:bg-green-200'}`,\n                title: channel.is_active ? 'Pasife Al' : 'Aktifleştir',\n                children: channel.is_active ? /*#__PURE__*/_jsxDEV(ToggleRight, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(ToggleLeft, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 70\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRefreshChannelInfo(channel.id),\n                className: \"p-2 bg-gray-100 text-gray-600 hover:bg-gray-200 rounded-lg transition-colors\",\n                title: \"Bilgileri Yenile\",\n                children: /*#__PURE__*/_jsxDEV(RefreshCw, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  // setEditingChannel(channel); // This state is no longer needed\n                  // setSelectedPlatform('telegram'); // This state is no longer needed\n                  // setShowModal(true); // This state is no longer needed\n                },\n                className: \"p-2 bg-gray-100 text-gray-600 hover:bg-gray-200 rounded-lg transition-colors\",\n                title: \"D\\xFCzenle\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), (user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : _user$permissions.includes('social.manage')) && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteChannel(channel.id),\n                className: \"p-2 bg-red-100 text-red-600 hover:bg-red-200 rounded-lg transition-colors\",\n                title: \"Sil\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, channel.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        totalPages: totalPages,\n        onPageChange: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(SocialMediaChannelsOptimized, \"5eyXp+mz9Yh/KWcKe4d+gvGv9pQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SocialMediaChannelsOptimized;\nexport default SocialMediaChannelsOptimized;\nvar _c;\n$RefreshReg$(_c, \"SocialMediaChannelsOptimized\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useAuth","socialMediaChannelsAPI","brandsAPI","telegramBotsAPI","MessageCircle","Edit","Trash2","ToggleLeft","ToggleRight","CheckCircle","XCircle","RefreshCw","Bot","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","SocialMediaChannelsOptimized","_s","user","loading","authLoading","navigate","channels","setChannels","channelsLoading","setChannelsLoading","bots","setBots","currentPage","setCurrentPage","pageSize","totalPages","setTotalPages","searchTerm","setSearchTerm","brandFilter","setBrandFilter","statusFilter","setStatusFilter","discoverLoading","setDiscoverLoading","userBrandId","brand_id","fetchChannels","page","perPage","search","filters","params","per_page","brand","status","is_active","response","getChannels","data","total","total_pages","loadChannels","Math","ceil","error","_error$response","_error$response$data","detail","loadBots","getBots","userBots","filter","b","console","handleDiscoverChannels","length","totalDiscovered","promises","map","bot","discoverChannelsForBot","id","success","discovered_count","bot_name","_error$response2","_error$response2$data","Promise","all","resetTable","loadBrands","getBrands","replace","handleDeleteChannel","channelId","window","confirm","deleteChannel","_error$response3","_error$response3$data","handleToggleChannel","toggleChannelStatus","handleRefreshChannelInfo","refreshChannelInfo","handleModalSuccess","statusFilterOptions","value","label","isAdmin","role","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","SearchBar","onChange","placeholder","debounceMs","FilterDropdown","options","toString","Number","brandFilterOptions","channel","_user$permissions","name","brand_name","member_count","last_activity","Date","toLocaleDateString","day","month","Eye","title","permissions","includes","Pagination","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/pages/admin/SocialMediaChannelsOptimized.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { socialMediaChannelsAPI, SocialMediaChannel } from '../../api/socialMediaChannels';\r\nimport { brandsAPI } from '../../api/brands';\r\nimport { telegramBotsAPI } from '../../api/telegramBots';\r\nimport { \r\n  MessageCircle, \r\n  Edit, \r\n  Trash2, \r\n  ToggleLeft, \r\n  ToggleRight,\r\n  Phone,\r\n  Send,\r\n  Users,\r\n  Activity,\r\n  MoreVertical,\r\n  CheckCircle,\r\n  XCircle,\r\n  Search,\r\n  Filter,\r\n  RefreshCw,\r\n  Bot,  // For discover button\r\n  AlertTriangle  // For warning\r\n} from 'lucide-react';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Remove DynamicChannelModal import and usage\r\n\r\nconst SocialMediaChannelsOptimized: React.FC = () => {\r\n  const { user, loading: authLoading } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  const [channels, setChannels] = useState<SocialMediaChannel[]>([]);\r\n  const [channelsLoading, setChannelsLoading] = useState(false);\r\n  const [bots, setBots] = useState<any[]>([]);  // User's bots\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize] = useState(12);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [brandFilter, setBrandFilter] = useState<number | null>(null);\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [discoverLoading, setDiscoverLoading] = useState(false);\r\n  \r\n  // Auto brand filter for brand manager\r\n  const userBrandId = user?.brand_id || null;\r\n\r\n  const fetchChannels = useCallback(async ({ page, perPage, search, filters }: any) => {\r\n    const params = {\r\n      page,\r\n      per_page: perPage,\r\n      search,\r\n      ...(userBrandId && { brand_id: userBrandId }),  // Auto filter\r\n      ...(filters?.brand && { brand_id: filters.brand }),\r\n      ...(filters?.status && filters.status !== 'all' && { is_active: filters.status === 'active' })\r\n    };\r\n    const response = await socialMediaChannelsAPI.getChannels(params.page, params.per_page, 'telegram', params.brand_id, params.search);\r\n    return {\r\n      data: response.channels,\r\n      total: response.total,\r\n      totalPages: response.total_pages\r\n    };\r\n  }, [userBrandId]);\r\n\r\n  const loadChannels = useCallback(async (page = 1, search = '', filters = {}) => {\r\n    setChannelsLoading(true);\r\n    try {\r\n      const { data, total, totalPages } = await fetchChannels({ page, perPage: pageSize, search, filters });\r\n      setChannels(data);\r\n      setTotalPages(totalPages || Math.ceil(total / pageSize));\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.detail || 'Kanallar yüklenemedi');\r\n    } finally {\r\n      setChannelsLoading(false);\r\n    }\r\n  }, [fetchChannels, pageSize]);\r\n\r\n  // Load bots for discovery\r\n  const loadBots = useCallback(async () => {\r\n    try {\r\n      const response = await telegramBotsAPI.getBots();\r\n      const userBots = response.bots.filter((b: any) => b.brand_id === userBrandId);\r\n      setBots(userBots);\r\n    } catch (error) {\r\n      console.error('Bots load error');\r\n    }\r\n  }, [userBrandId]);\r\n\r\n  // Discover function\r\n  const handleDiscoverChannels = async () => {\r\n    if (bots.length === 0) {\r\n      toast.error('Önce bot ekleyin');\r\n      return;\r\n    }\r\n\r\n    setDiscoverLoading(true);\r\n    let totalDiscovered = 0;\r\n    const promises = bots.map(async (bot: any) => {\r\n      try {\r\n        const response = await telegramBotsAPI.discoverChannelsForBot(bot.id);\r\n        if (response.success) {\r\n          totalDiscovered += response.discovered_count || 0;\r\n          toast.success(`Bot ${bot.bot_name}: ${response.discovered_count} kanal eklendi`);\r\n        }\r\n      } catch (error: any) {\r\n        toast.error(`Bot ${bot.bot_name} keşif hatası: ${error.response?.data?.detail || 'Hata'}`);\r\n      }\r\n    });\r\n\r\n    try {\r\n      await Promise.all(promises);\r\n      toast.success(`Toplam ${totalDiscovered} kanal keşfedildi!`);\r\n      loadChannels();  // Reload channels\r\n    } catch (error) {\r\n      toast.error('Keşif tamamlanamadı');\r\n    } finally {\r\n      setDiscoverLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadBots();\r\n      loadChannels(1, '', { brand: userBrandId });\r\n    }\r\n  }, [user, loadChannels, loadBots, userBrandId]);\r\n\r\n  // Reset to page 1 when filters change\r\n  useEffect(() => {\r\n    if (currentPage !== 1) {\r\n      setCurrentPage(1);\r\n    } else {\r\n      loadChannels();\r\n    }\r\n  }, [searchTerm, brandFilter, statusFilter]);\r\n  \r\n  const resetTable = useCallback(() => {\r\n    loadChannels();\r\n  }, [loadChannels]);\r\n\r\n  // Load brands\r\n  const loadBrands = useCallback(async () => {\r\n    try {\r\n      const response = await brandsAPI.getBrands(1, 100);\r\n      // setBrands(response.brands); // This state is no longer needed\r\n    } catch (error) {\r\n      // Silently handle error - brands are not critical\r\n    }\r\n  }, []);\r\n\r\n  // Initial load\r\n  useEffect(() => {\r\n    loadBrands();\r\n  }, [loadBrands]);\r\n\r\n  // Auth check - Prevent redirect loop\r\n  useEffect(() => {\r\n    if (authLoading) return; // Still loading\r\n    \r\n    if (!user) {\r\n      navigate('/login', { replace: true }); // Replace history to prevent back button issues\r\n    }\r\n  }, [authLoading, user, navigate]);\r\n\r\n\r\n  // Handle delete\r\n  const handleDeleteChannel = async (channelId: number) => {\r\n    if (!window.confirm('Bu kanalı silmek istediğinizden emin misiniz?')) return;\r\n\r\n    try {\r\n      await socialMediaChannelsAPI.deleteChannel(channelId);\r\n      toast.success('Kanal silindi');\r\n      resetTable();\r\n    } catch (error: any) {\r\n      toast.error(error?.response?.data?.detail || 'Kanal silinemedi');\r\n    }\r\n  };\r\n\r\n  // Handle toggle status\r\n  const handleToggleChannel = async (channelId: number) => {\r\n    try {\r\n      await socialMediaChannelsAPI.toggleChannelStatus(channelId);\r\n      toast.success('Kanal durumu güncellendi');\r\n      resetTable();\r\n    } catch (error: any) {\r\n      toast.error('Durum güncellenemedi');\r\n    }\r\n  };\r\n\r\n  // Handle refresh channel info\r\n  const handleRefreshChannelInfo = async (channelId: number) => {\r\n    try {\r\n      toast.loading('Kanal bilgileri güncelleniyor...', { id: 'refresh' });\r\n      await socialMediaChannelsAPI.refreshChannelInfo(channelId);\r\n      resetTable();\r\n      toast.success('Kanal bilgileri güncellendi', { id: 'refresh' });\r\n    } catch (error: any) {\r\n      toast.error('Bilgiler güncellenemedi', { id: 'refresh' });\r\n    }\r\n  };\r\n\r\n  // Handle modal success\r\n  const handleModalSuccess = async () => {\r\n    // setShowModal(false); // This state is no longer needed\r\n    // setEditingChannel(null); // This state is no longer needed\r\n    // setSelectedPlatform(null); // This state is no longer needed\r\n    resetTable();\r\n  };\r\n\r\n  // Brand filter options\r\n  // const brandFilterOptions = useMemo(() => { // This state is no longer needed\r\n  //   return [\r\n  //     { value: null, label: 'Tüm Markalar' },\r\n  //     ...brands.map(brand => ({ value: brand.id, label: brand.name }))\r\n  //   ];\r\n  // }, [brands]);\r\n\r\n  // Status filter options\r\n  const statusFilterOptions = [\r\n    { value: 'all', label: 'Tümü' },\r\n    { value: 'active', label: 'Aktif' },\r\n    { value: 'inactive', label: 'Pasif' }\r\n  ];\r\n\r\n  const isAdmin = user?.role === 'Super Admin';\r\n\r\n  // Show loading only while auth is loading\r\n  if (authLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Don't render anything if not authenticated (redirect will happen)\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold\">Telegram Kanalları</h1>\r\n          <p className=\"text-gray-600 mt-1\">Bot'larınıza bağlı kanallar</p>\r\n        </div>\r\n        {/* Discover Button */}\r\n        {bots.length > 0 && (\r\n          <button\r\n            onClick={handleDiscoverChannels}\r\n            disabled={discoverLoading}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n          >\r\n            {discoverLoading ? (\r\n              <RefreshCw className=\"animate-spin h-4 w-4\" />\r\n            ) : (\r\n              <Bot size={20} />\r\n            )}\r\n            Kanalları Keşfet\r\n          </button>\r\n        )}\r\n        {channels.length === 0 && bots.length === 0 && (\r\n          <div className=\"text-center py-8\">\r\n            <p className=\"text-gray-500 mb-4\">Henüz bot eklenmemiş. Bot ekleyin ki kanallar otomatik keşfedilsin.</p>\r\n            <button\r\n              onClick={() => navigate('/admin/telegram/bots')}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\"\r\n            >\r\n              Bot Ekle\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"card\">\r\n        <div className=\"flex flex-col md:flex-row gap-4\">\r\n          {/* Search */}\r\n          <div className=\"flex-1\">\r\n            <SearchBar\r\n              value={searchTerm}\r\n              onChange={setSearchTerm}\r\n              placeholder=\"Kanal ara...\"\r\n              debounceMs={300}\r\n            />\r\n          </div>\r\n\r\n          {/* Status Filter */}\r\n          <FilterDropdown\r\n            label=\"Durum\"\r\n            value={statusFilter || 'all'}\r\n            onChange={(value) => setStatusFilter(value as string)}\r\n            options={statusFilterOptions}\r\n          />\r\n\r\n          {/* Brand Filter */}\r\n          <FilterDropdown\r\n            label=\"Marka\"\r\n            value={brandFilter?.toString() || null}\r\n            onChange={(value) => setBrandFilter(value ? Number(value) : null)}\r\n            options={brandFilterOptions}\r\n          />\r\n\r\n          {/* Clear Filters */}\r\n          {(searchTerm || statusFilter !== 'all' || brandFilter) && (\r\n            <button\r\n              onClick={() => {\r\n                setSearchTerm('');\r\n                setStatusFilter('all');\r\n                setBrandFilter(null);\r\n              }}\r\n              className=\"px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors\"\r\n            >\r\n              Filtreleri Temizle\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Channels Grid */}\r\n      {channelsLoading ? (\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500 mb-2\"></div>\r\n            <p className=\"text-gray-600\">Kanallar yükleniyor...</p>\r\n          </div>\r\n        </div>\r\n      ) : channels.length === 0 ? (\r\n        <div className=\"card text-center py-12\">\r\n          <MessageCircle size={48} className=\"mx-auto text-gray-300 mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Kanal Bulunamadı</h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            {searchTerm || statusFilter !== 'all' || brandFilter\r\n              ? 'Arama kriterlerinize uygun kanal bulunamadı'\r\n              : 'Henüz hiç kanal eklenmemiş'}\r\n          </p>\r\n          {/* isAdmin && ( // This block is no longer needed\r\n            <button\r\n              onClick={() => {\r\n                setSelectedPlatform('telegram');\r\n                setShowModal(true);\r\n              }}\r\n              className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n            >\r\n              <Plus size={20} />\r\n              İlk Kanalı Ekle\r\n            </button>\r\n          ) */}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {channels.map((channel) => (\r\n              <div\r\n                key={channel.id}\r\n                className={`card hover:shadow-lg transition-all ${\r\n                  !channel.is_active ? 'opacity-60' : ''\r\n                }`}\r\n              >\r\n                {/* Channel Header */}\r\n                <div className=\"flex items-start justify-between mb-4\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${\r\n                      channel.is_active ? 'bg-blue-100' : 'bg-gray-200'\r\n                    }`}>\r\n                      <MessageCircle\r\n                        size={24}\r\n                        className={channel.is_active ? 'text-blue-600' : 'text-gray-400'}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <h3 className=\"font-semibold text-gray-900\">{channel.name}</h3>\r\n                      <p className=\"text-sm text-gray-600\">{channel.brand_name}</p>\r\n                    </div>\r\n                  </div>\r\n                  {channel.is_active ? (\r\n                    <CheckCircle size={20} className=\"text-green-500\" />\r\n                  ) : (\r\n                    <XCircle size={20} className=\"text-red-500\" />\r\n                  )}\r\n                </div>\r\n\r\n                {/* Channel Stats */}\r\n                <div className=\"grid grid-cols-2 gap-4 mb-4 py-3 border-y border-gray-100\">\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-2xl font-bold text-gray-900\">{channel.member_count || 0}</p>\r\n                    <p className=\"text-xs text-gray-600\">Üye</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      {channel.last_activity\r\n                        ? new Date(channel.last_activity).toLocaleDateString('tr-TR', {\r\n                            day: '2-digit',\r\n                            month: '2-digit'\r\n                          })\r\n                        : '-'}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-600\">Son Aktivite</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Inactive Badge */}\r\n                {!channel.is_active && (\r\n                  <div className=\"mb-3 px-3 py-1.5 bg-yellow-100 text-yellow-800 rounded-lg text-center text-sm font-medium\">\r\n                    Mesaj Gönderimi Kapalı\r\n                  </div>\r\n                )}\r\n\r\n                {/* Actions */}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <button\r\n                    onClick={() => navigate(`/admin/social-media/channels/${channel.id}`)}\r\n                    className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                  >\r\n                    <Eye size={16} />\r\n                    Detay\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => handleToggleChannel(channel.id)}\r\n                    className={`p-2 rounded-lg transition-colors ${\r\n                      channel.is_active\r\n                        ? 'bg-yellow-100 text-yellow-600 hover:bg-yellow-200'\r\n                        : 'bg-green-100 text-green-600 hover:bg-green-200'\r\n                    }`}\r\n                    title={channel.is_active ? 'Pasife Al' : 'Aktifleştir'}\r\n                  >\r\n                    {channel.is_active ? <ToggleRight size={16} /> : <ToggleLeft size={16} />}\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => handleRefreshChannelInfo(channel.id)}\r\n                    className=\"p-2 bg-gray-100 text-gray-600 hover:bg-gray-200 rounded-lg transition-colors\"\r\n                    title=\"Bilgileri Yenile\"\r\n                  >\r\n                    <RefreshCw size={16} />\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => {\r\n                      // setEditingChannel(channel); // This state is no longer needed\r\n                      // setSelectedPlatform('telegram'); // This state is no longer needed\r\n                      // setShowModal(true); // This state is no longer needed\r\n                    }}\r\n                    className=\"p-2 bg-gray-100 text-gray-600 hover:bg-gray-200 rounded-lg transition-colors\"\r\n                    title=\"Düzenle\"\r\n                  >\r\n                    <Edit size={16} />\r\n                  </button>\r\n\r\n                  {user?.permissions?.includes('social.manage') && (\r\n                    <button\r\n                      onClick={() => handleDeleteChannel(channel.id)}\r\n                      className=\"p-2 bg-red-100 text-red-600 hover:bg-red-200 rounded-lg transition-colors\"\r\n                      title=\"Sil\"\r\n                    >\r\n                      <Trash2 size={16} />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            onPageChange={setCurrentPage}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {/* Remove all DynamicChannelModal and add triggers */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialMediaChannelsOptimized;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}