{"ast":null,"code":"/**\r\n * Telegram Bots API\r\n * Admin: Bot token yönetimi\r\n */\n\nimport api from '../utils/api';\nexport const telegramBotsAPI = {\n  /**\r\n   * Bot listesini getir\r\n   */\n  async getBots() {\n    const response = await api.get('/api/telegram-bots');\n    return response.data;\n  },\n  /**\r\n   * Belirli bir botu getir\r\n   */\n  async getBot(botId) {\n    const response = await api.get(`/api/telegram-bots/${botId}`);\n    return response.data;\n  },\n  /**\r\n   * Yeni bot ekle (Sadece Admin)\r\n   */\n  async createBot(data) {\n    const response = await api.post('/api/telegram-bots', data);\n    return response.data;\n  },\n  /**\r\n   * Bot bilgilerini güncelle (Sadece Admin)\r\n   */\n  async updateBot(botId, data) {\n    const response = await api.put(`/api/telegram-bots/${botId}`, data);\n    return response.data;\n  },\n  /**\r\n   * Botu sil (Sadece Admin)\r\n   */\n  async deleteBot(botId) {\n    await api.delete(`/api/telegram-bots/${botId}`);\n  },\n  /**\r\n   * Bot token'ını doğrula\r\n   */\n  async verifyBot(botId) {\n    const response = await api.post(`/api/telegram-bots/${botId}/verify`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","telegramBotsAPI","getBots","response","get","data","getBot","botId","createBot","post","updateBot","put","deleteBot","delete","verifyBot"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/telegramBots.ts"],"sourcesContent":["/**\r\n * Telegram Bots API\r\n * Admin: Bot token yönetimi\r\n */\r\n\r\nimport api from '../utils/api';\r\n\r\nexport interface TelegramBot {\r\n  id: number;\r\n  bot_name: string;\r\n  bot_username: string;\r\n  bot_user_id?: string;\r\n  is_active: boolean;\r\n  is_verified: boolean;\r\n  last_verified_at?: string;\r\n  created_by: number;\r\n  creator_name?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  channel_count?: number;\r\n}\r\n\r\nexport interface TelegramBotCreate {\r\n  bot_name: string;\r\n  bot_username: string;\r\n  bot_token: string;\r\n}\r\n\r\nexport interface TelegramBotUpdate {\r\n  bot_name?: string;\r\n  bot_username?: string;\r\n  bot_token?: string;\r\n  is_active?: boolean;\r\n}\r\n\r\nexport interface TelegramBotListResponse {\r\n  bots: TelegramBot[];\r\n  total: number;\r\n}\r\n\r\nexport interface TelegramBotVerifyResponse {\r\n  success: boolean;\r\n  message: string;\r\n  bot_info?: {\r\n    id: number;\r\n    first_name: string;\r\n    username: string;\r\n    can_join_groups: boolean;\r\n    can_read_all_group_messages: boolean;\r\n  };\r\n}\r\n\r\nexport const telegramBotsAPI = {\r\n  /**\r\n   * Bot listesini getir\r\n   */\r\n  async getBots(): Promise<TelegramBotListResponse> {\r\n    const response = await api.get('/api/telegram-bots');\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Belirli bir botu getir\r\n   */\r\n  async getBot(botId: number): Promise<TelegramBot> {\r\n    const response = await api.get(`/api/telegram-bots/${botId}`);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Yeni bot ekle (Sadece Admin)\r\n   */\r\n  async createBot(data: TelegramBotCreate): Promise<TelegramBot> {\r\n    const response = await api.post('/api/telegram-bots', data);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Bot bilgilerini güncelle (Sadece Admin)\r\n   */\r\n  async updateBot(botId: number, data: TelegramBotUpdate): Promise<TelegramBot> {\r\n    const response = await api.put(`/api/telegram-bots/${botId}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  /**\r\n   * Botu sil (Sadece Admin)\r\n   */\r\n  async deleteBot(botId: number): Promise<void> {\r\n    await api.delete(`/api/telegram-bots/${botId}`);\r\n  },\r\n\r\n  /**\r\n   * Bot token'ını doğrula\r\n   */\r\n  async verifyBot(botId: number): Promise<TelegramBotVerifyResponse> {\r\n    const response = await api.post(`/api/telegram-bots/${botId}/verify`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,cAAc;AA+C9B,OAAO,MAAMC,eAAe,GAAG;EAC7B;AACF;AACA;EACE,MAAMC,OAAOA,CAAA,EAAqC;IAChD,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMC,MAAMA,CAACC,KAAa,EAAwB;IAChD,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,sBAAsBG,KAAK,EAAE,CAAC;IAC7D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMG,SAASA,CAACH,IAAuB,EAAwB;IAC7D,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACS,IAAI,CAAC,oBAAoB,EAAEJ,IAAI,CAAC;IAC3D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMK,SAASA,CAACH,KAAa,EAAEF,IAAuB,EAAwB;IAC5E,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACW,GAAG,CAAC,sBAAsBJ,KAAK,EAAE,EAAEF,IAAI,CAAC;IACnE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;AACF;AACA;EACE,MAAMO,SAASA,CAACL,KAAa,EAAiB;IAC5C,MAAMP,GAAG,CAACa,MAAM,CAAC,sBAAsBN,KAAK,EAAE,CAAC;EACjD,CAAC;EAED;AACF;AACA;EACE,MAAMO,SAASA,CAACP,KAAa,EAAsC;IACjE,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACS,IAAI,CAAC,sBAAsBF,KAAK,SAAS,CAAC;IACrE,OAAOJ,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}