{"ast":null,"code":"import api from '../utils/api';\nexport const rolesAPI = {\n  getRoles: async () => {\n    const response = await api.get('/api/roles');\n    return response.data;\n  },\n  getPermissions: async () => {\n    const response = await api.get('/api/roles/permissions');\n    return {\n      permissions: response.data\n    };\n  },\n  getRole: async id => {\n    const response = await api.get(`/api/roles/${id}`);\n    return response.data;\n  },\n  getRolePermissions: async id => {\n    const response = await api.get(`/api/roles/${id}/permissions`);\n    return response.data;\n  },\n  createRole: async roleData => {\n    const response = await api.post('/api/roles', roleData);\n    return response.data;\n  },\n  updateRole: async (id, roleData) => {\n    const response = await api.put(`/api/roles/${id}`, roleData);\n    return response.data;\n  },\n  assignPermissionsToRole: async (roleId, permissionIds) => {\n    await api.post(`/api/roles/${roleId}/permissions`, permissionIds);\n  },\n  removePermissionFromRole: async (roleId, permissionId) => {\n    await api.delete(`/api/roles/${roleId}/permissions/${permissionId}`);\n  },\n  toggleRoleStatus: async id => {\n    const response = await api.patch(`/api/roles/${id}/toggle-status`);\n    return response.data;\n  },\n  deleteRole: async id => {\n    await api.delete(`/api/roles/${id}`);\n  }\n};","map":{"version":3,"names":["api","rolesAPI","getRoles","response","get","data","getPermissions","permissions","getRole","id","getRolePermissions","createRole","roleData","post","updateRole","put","assignPermissionsToRole","roleId","permissionIds","removePermissionFromRole","permissionId","delete","toggleRoleStatus","patch","deleteRole"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/roles.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport interface Permission {\r\n  id: number;\r\n  name: string;\r\n  display_name: string;\r\n  description: string;\r\n  module: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\nexport interface Role {\r\n  id: number;\r\n  name: string;\r\n  display_name: string;\r\n  description: string;\r\n  is_active: boolean;\r\n  is_system_role: boolean;\r\n  user_count?: number;\r\n  permissions: Permission[];\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface RoleCreate {\r\n  name: string;\r\n  display_name: string;\r\n  description: string;\r\n  permission_ids: number[];\r\n}\r\n\r\nexport interface RoleUpdate {\r\n  name?: string;\r\n  display_name?: string;\r\n  description?: string;\r\n  permission_ids?: number[];\r\n}\r\n\r\nexport interface RolesResponse {\r\n  roles: Role[];\r\n  total: number;\r\n}\r\n\r\nexport interface RolePermissionsResponse {\r\n  role_id: number;\r\n  role_name: string;\r\n  role_display_name: string;\r\n  permissions: Permission[];\r\n}\r\n\r\nexport const rolesAPI = {\r\n  getRoles: async (): Promise<RolesResponse> => {\r\n    const response = await api.get('/api/roles');\r\n    return response.data;\r\n  },\r\n\r\n  getPermissions: async (): Promise<{ permissions: Permission[] }> => {\r\n    const response = await api.get('/api/roles/permissions');\r\n    return { permissions: response.data };\r\n  },\r\n\r\n  getRole: async (id: number): Promise<Role> => {\r\n    const response = await api.get(`/api/roles/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getRolePermissions: async (id: number): Promise<RolePermissionsResponse> => {\r\n    const response = await api.get(`/api/roles/${id}/permissions`);\r\n    return response.data;\r\n  },\r\n\r\n  createRole: async (roleData: RoleCreate): Promise<Role> => {\r\n    const response = await api.post('/api/roles', roleData);\r\n    return response.data;\r\n  },\r\n\r\n  updateRole: async (id: number, roleData: RoleUpdate): Promise<Role> => {\r\n    const response = await api.put(`/api/roles/${id}`, roleData);\r\n    return response.data;\r\n  },\r\n\r\n  assignPermissionsToRole: async (roleId: number, permissionIds: number[]): Promise<void> => {\r\n    await api.post(`/api/roles/${roleId}/permissions`, permissionIds);\r\n  },\r\n\r\n  removePermissionFromRole: async (roleId: number, permissionId: number): Promise<void> => {\r\n    await api.delete(`/api/roles/${roleId}/permissions/${permissionId}`);\r\n  },\r\n\r\n  toggleRoleStatus: async (id: number): Promise<Role> => {\r\n    const response = await api.patch(`/api/roles/${id}/toggle-status`);\r\n    return response.data;\r\n  },\r\n\r\n  deleteRole: async (id: number): Promise<void> => {\r\n    await api.delete(`/api/roles/${id}`);\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAmD9B,OAAO,MAAMC,QAAQ,GAAG;EACtBC,QAAQ,EAAE,MAAAA,CAAA,KAAoC;IAC5C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAoD;IAClE,MAAMH,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,wBAAwB,CAAC;IACxD,OAAO;MAAEG,WAAW,EAAEJ,QAAQ,CAACE;IAAK,CAAC;EACvC,CAAC;EAEDG,OAAO,EAAE,MAAOC,EAAU,IAAoB;IAC5C,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAcK,EAAE,EAAE,CAAC;IAClD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDK,kBAAkB,EAAE,MAAOD,EAAU,IAAuC;IAC1E,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAcK,EAAE,cAAc,CAAC;IAC9D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,UAAU,EAAE,MAAOC,QAAoB,IAAoB;IACzD,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACa,IAAI,CAAC,YAAY,EAAED,QAAQ,CAAC;IACvD,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDS,UAAU,EAAE,MAAAA,CAAOL,EAAU,EAAEG,QAAoB,KAAoB;IACrE,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACe,GAAG,CAAC,cAAcN,EAAE,EAAE,EAAEG,QAAQ,CAAC;IAC5D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDW,uBAAuB,EAAE,MAAAA,CAAOC,MAAc,EAAEC,aAAuB,KAAoB;IACzF,MAAMlB,GAAG,CAACa,IAAI,CAAC,cAAcI,MAAM,cAAc,EAAEC,aAAa,CAAC;EACnE,CAAC;EAEDC,wBAAwB,EAAE,MAAAA,CAAOF,MAAc,EAAEG,YAAoB,KAAoB;IACvF,MAAMpB,GAAG,CAACqB,MAAM,CAAC,cAAcJ,MAAM,gBAAgBG,YAAY,EAAE,CAAC;EACtE,CAAC;EAEDE,gBAAgB,EAAE,MAAOb,EAAU,IAAoB;IACrD,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACuB,KAAK,CAAC,cAAcd,EAAE,gBAAgB,CAAC;IAClE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDmB,UAAU,EAAE,MAAOf,EAAU,IAAoB;IAC/C,MAAMT,GAAG,CAACqB,MAAM,CAAC,cAAcZ,EAAE,EAAE,CAAC;EACtC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}