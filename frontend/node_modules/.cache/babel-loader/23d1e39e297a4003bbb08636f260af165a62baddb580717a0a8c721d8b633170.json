{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilker\\\\Desktop\\\\aibrands\\\\frontend\\\\src\\\\components\\\\modals\\\\DynamicChannelModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, Send, AlertCircle, Bot, Hash, RefreshCw, Download, CheckCircle, XCircle } from 'lucide-react';\nimport { socialMediaChannelsAPI } from '../../api/socialMediaChannels';\nimport { brandsAPI } from '../../api/brands';\nimport { telegramBotsAPI } from '../../api/telegramBots';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicChannelModal = ({\n  isOpen,\n  onClose,\n  platform,\n  onSuccess,\n  editingChannel\n}) => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [selectedBotId, setSelectedBotId] = useState(null);\n  const [channelInput, setChannelInput] = useState(''); // Textarea\n  const [selectedBrandId, setSelectedBrandId] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [loadingBots, setLoadingBots] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [bulkResult, setBulkResult] = useState(null); // Bulk response\n  const [showInstructions, setShowInstructions] = useState(false);\n  useEffect(() => {\n    if (isOpen && platform) {\n      loadBots();\n      loadBrands();\n      setChannelInput('');\n      setBulkResult(null);\n      setShowInstructions(false);\n    }\n  }, [isOpen, platform]);\n  const loadBots = async () => {\n    try {\n      setLoadingBots(true);\n      const response = await telegramBotsAPI.getBots();\n      setBots(response.bots.filter(bot => bot.is_active));\n    } catch (error) {\n      toast.error('Botlar yüklenemedi');\n    } finally {\n      setLoadingBots(false);\n    }\n  };\n  const loadBrands = async () => {\n    try {\n      const response = await brandsAPI.getBrands(1, 1000);\n      setBrands(response.brands);\n    } catch (error) {\n      console.error('Brands load error:', error);\n    }\n  };\n  const handleBotChange = botId => {\n    setSelectedBotId(botId);\n    const bot = bots.find(b => b.id === botId);\n    setSelectedBot(bot || null);\n  };\n\n  // Parse textarea to array\n  const parseChannels = () => {\n    return channelInput.split('\\n').map(line => line.trim()).filter(line => line && line.startsWith('@') || line.includes('t.me/'));\n  };\n  const handleAddChannels = async () => {\n    if (!selectedBotId || !channelInput.trim() || !selectedBrandId) {\n      toast.error('Bot, kanallar ve marka gerekli');\n      return;\n    }\n    const channels = parseChannels();\n    if (channels.length === 0) {\n      toast.error('En az bir kanal girin (her satıra @kanaladim)');\n      return;\n    }\n    setLoading(true);\n    const loadingToast = toast.loading(`Doğrulanıyor... (${channels.length} kanal)`);\n    try {\n      const response = await socialMediaChannelsAPI.addChannelByBot({\n        telegram_bot_id: selectedBotId,\n        channel_identifiers: channels,\n        brand_id: selectedBrandId\n      });\n      if (response.success) {\n        setBulkResult(response);\n        toast.success(`${response.success_count} kanal eklendi!`);\n        onSuccess();\n      } else {\n        toast.error('Hata oluştu');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Hata oluştu');\n    } finally {\n      setLoading(false);\n      toast.dismiss(loadingToast);\n    }\n  };\n  const handleInstructionsConfirm = async () => {\n    setShowInstructions(false);\n    setBulkResult(null);\n    setChannelInput(''); // Reset\n  };\n\n  // CSV export for failed\n  const exportFailedCSV = () => {\n    var _bulkResult$failed_ch;\n    if (!(bulkResult !== null && bulkResult !== void 0 && (_bulkResult$failed_ch = bulkResult.failed_channels) !== null && _bulkResult$failed_ch !== void 0 && _bulkResult$failed_ch.length)) return;\n    const csv = bulkResult.failed_channels.map(f => `${f.username},${f.reason}`).join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'failed_channels.csv';\n    a.click();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[80vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-blue-100 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              className: \"h-5 w-5 text-blue-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"Telegram Kanallar\\u0131n\\u0131 Ekle (Bulk)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"p-1 hover:bg-gray-100 rounded\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20,\n            className: \"text-gray-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), !bulkResult ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleAddChannels();\n        },\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              className: \"inline mr-1\",\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), \"Bot Se\\xE7in *\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), loadingBots ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Y\\xFCkleniyor...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this) : bots.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-yellow-50 border rounded p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-yellow-800\",\n              children: \"Bot eklenmemi\\u015F. Admin bot eklesin.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedBotId || '',\n            onChange: e => handleBotChange(Number(e.target.value)),\n            className: \"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Se\\xE7in...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), bots.map(bot => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: bot.id,\n              children: [bot.bot_name, \" (@\", bot.bot_username, \")\"]\n            }, bot.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Hash, {\n              className: \"inline mr-1\",\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), \"Kanallar (Her sat\\u0131ra bir tane) *\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: channelInput,\n            onChange: e => setChannelInput(e.target.value),\n            placeholder: \"Sat\\u0131r 1: @kanal1\\nSat\\u0131r 2: @kanal2\\nSat\\u0131r 3: https://t.me/kanal3\",\n            rows: 8,\n            className: \"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 resize-none\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"\\xD6rn: Her sat\\u0131ra bir kanal username'i (@kanaladim) veya link. Toplu ekleme i\\xE7in ideal.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: [parseChannels().length, \" kanal alg\\u0131land\\u0131.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Marka Se\\xE7in *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedBrandId,\n            onChange: e => setSelectedBrandId(Number(e.target.value)),\n            className: \"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0,\n              children: \"Se\\xE7in...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), brands.map(brand => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: brand.id,\n              children: brand.name\n            }, brand.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !selectedBotId || !channelInput.trim() || !selectedBrandId,\n          className: \"w-full px-4 py-2 bg-blue-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 disabled:opacity-50\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"animate-spin h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), \"Do\\u011Frulan\\u0131yor...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this) : 'Kanalları Ekle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Bulk Sonuç\n      _jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-50 border border-green-200 rounded-lg p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-green-800\",\n            children: [\"Sonu\\xE7: \", bulkResult.success_count, \" / \", bulkResult.success_count + bulkResult.failed_count, \" Kanal Eklendi\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-green-700\",\n            children: bulkResult.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), bulkResult.added_channels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border rounded-lg p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium mb-2\",\n            children: \"Eklenen Kanallar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm space-y-1\",\n            children: bulkResult.added_channels.map((ch, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center gap-2 text-green-600\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), ch.name || ch.username, \" (\", ch.member_count, \" \\xFCye)\"]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this), bulkResult.failed_channels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 border border-yellow-200 rounded-lg p-4 space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-yellow-800 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), bulkResult.failed_count, \" Ba\\u015Far\\u0131s\\u0131z Kanal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm space-y-1\",\n            children: bulkResult.failed_channels.map((f, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center gap-2 text-yellow-600\",\n              children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), \"@\", f.username, \": \", f.reason]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), bulkResult.instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-yellow-100 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"font-medium mb-2\",\n              children: \"Talimatlar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"text-xs space-y-1\",\n              children: bulkResult.instructions.map((instr, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"\\u2022 \", instr]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this), bulkResult.failed_count > 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportFailedCSV,\n            className: \"flex items-center gap-2 text-xs text-blue-600 hover:underline\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this), \"Ba\\u015Far\\u0131s\\u0131zlar\\u0131 CSV Olarak \\u0130ndir\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3 pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleInstructionsConfirm,\n            className: \"flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\",\n            children: \"Yeni Bulk Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400\",\n            children: \"Kapat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicChannelModal, \"7t45J40BT871wwVrVcRtb+5qUN0=\");\n_c = DynamicChannelModal;\nexport default DynamicChannelModal;\nvar _c;\n$RefreshReg$(_c, \"DynamicChannelModal\");","map":{"version":3,"names":["React","useState","useEffect","X","Send","AlertCircle","Bot","Hash","RefreshCw","Download","CheckCircle","XCircle","socialMediaChannelsAPI","brandsAPI","telegramBotsAPI","toast","jsxDEV","_jsxDEV","DynamicChannelModal","isOpen","onClose","platform","onSuccess","editingChannel","_s","bots","setBots","brands","setBrands","selectedBotId","setSelectedBotId","channelInput","setChannelInput","selectedBrandId","setSelectedBrandId","loading","setLoading","loadingBots","setLoadingBots","selectedBot","setSelectedBot","bulkResult","setBulkResult","showInstructions","setShowInstructions","loadBots","loadBrands","response","getBots","filter","bot","is_active","error","getBrands","console","handleBotChange","botId","find","b","id","parseChannels","split","map","line","trim","startsWith","includes","handleAddChannels","channels","length","loadingToast","addChannelByBot","telegram_bot_id","channel_identifiers","brand_id","success","success_count","_error$response","_error$response$data","data","detail","dismiss","handleInstructionsConfirm","exportFailedCSV","_bulkResult$failed_ch","failed_channels","csv","f","username","reason","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","onSubmit","e","preventDefault","value","onChange","Number","target","required","bot_name","bot_username","placeholder","rows","brand","name","disabled","failed_count","message","added_channels","ch","idx","member_count","instructions","instr","_c","$RefreshReg$"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/components/modals/DynamicChannelModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, Send, AlertCircle, Bot, Hash, RefreshCw, Download, CheckCircle, XCircle } from 'lucide-react';\nimport { socialMediaChannelsAPI } from '../../api/socialMediaChannels';\nimport { brandsAPI } from '../../api/brands';\nimport { telegramBotsAPI, TelegramBot } from '../../api/telegramBots';\nimport toast from 'react-hot-toast';\n\ninterface ChannelModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  platform: 'telegram' | null;\n  onSuccess: () => void;\n  editingChannel?: any;\n}\n\nconst DynamicChannelModal: React.FC<ChannelModalProps> = ({\n  isOpen,\n  onClose,\n  platform,\n  onSuccess,\n  editingChannel\n}) => {\n  const [bots, setBots] = useState<TelegramBot[]>([]);\n  const [brands, setBrands] = useState<any[]>([]);\n  const [selectedBotId, setSelectedBotId] = useState<number | null>(null);\n  const [channelInput, setChannelInput] = useState('');  // Textarea\n  const [selectedBrandId, setSelectedBrandId] = useState<number>(0);\n  const [loading, setLoading] = useState(false);\n  const [loadingBots, setLoadingBots] = useState(false);\n  const [selectedBot, setSelectedBot] = useState<TelegramBot | null>(null);\n  const [bulkResult, setBulkResult] = useState<any>(null);  // Bulk response\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && platform) {\n      loadBots();\n      loadBrands();\n      setChannelInput('');\n      setBulkResult(null);\n      setShowInstructions(false);\n    }\n  }, [isOpen, platform]);\n\n  const loadBots = async () => {\n    try {\n      setLoadingBots(true);\n      const response = await telegramBotsAPI.getBots();\n      setBots(response.bots.filter(bot => bot.is_active));\n    } catch (error) {\n      toast.error('Botlar yüklenemedi');\n    } finally {\n      setLoadingBots(false);\n    }\n  };\n\n  const loadBrands = async () => {\n    try {\n      const response = await brandsAPI.getBrands(1, 1000);\n      setBrands(response.brands);\n    } catch (error) {\n      console.error('Brands load error:', error);\n    }\n  };\n\n  const handleBotChange = (botId: number) => {\n    setSelectedBotId(botId);\n    const bot = bots.find(b => b.id === botId);\n    setSelectedBot(bot || null);\n  };\n\n  // Parse textarea to array\n  const parseChannels = () => {\n    return channelInput\n      .split('\\n')\n      .map(line => line.trim())\n      .filter(line => line && line.startsWith('@') || line.includes('t.me/'));\n  };\n\n  const handleAddChannels = async () => {\n    if (!selectedBotId || !channelInput.trim() || !selectedBrandId) {\n      toast.error('Bot, kanallar ve marka gerekli');\n      return;\n    }\n\n    const channels = parseChannels();\n    if (channels.length === 0) {\n      toast.error('En az bir kanal girin (her satıra @kanaladim)');\n      return;\n    }\n\n    setLoading(true);\n    const loadingToast = toast.loading(`Doğrulanıyor... (${channels.length} kanal)`);\n\n    try {\n      const response = await socialMediaChannelsAPI.addChannelByBot({\n        telegram_bot_id: selectedBotId,\n        channel_identifiers: channels,\n        brand_id: selectedBrandId\n      });\n\n      if (response.success) {\n        setBulkResult(response);\n        toast.success(`${response.success_count} kanal eklendi!`);\n        onSuccess();\n      } else {\n        toast.error('Hata oluştu');\n      }\n    } catch (error: any) {\n      toast.error(error.response?.data?.detail || 'Hata oluştu');\n    } finally {\n      setLoading(false);\n      toast.dismiss(loadingToast);\n    }\n  };\n\n  const handleInstructionsConfirm = async () => {\n    setShowInstructions(false);\n    setBulkResult(null);\n    setChannelInput('');  // Reset\n  };\n\n  // CSV export for failed\n  const exportFailedCSV = () => {\n    if (!bulkResult?.failed_channels?.length) return;\n    const csv = bulkResult.failed_channels.map((f: any) => `${f.username},${f.reason}`).join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'failed_channels.csv';\n    a.click();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[80vh] overflow-y-auto\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Send className=\"h-5 w-5 text-blue-600\" />\n            </div>\n            <h2 className=\"text-lg font-semibold\">Telegram Kanallarını Ekle (Bulk)</h2>\n          </div>\n          <button onClick={onClose} className=\"p-1 hover:bg-gray-100 rounded\">\n            <X size={20} className=\"text-gray-500\" />\n          </button>\n        </div>\n\n        {!bulkResult ? (\n          <form onSubmit={(e) => { e.preventDefault(); handleAddChannels(); }} className=\"space-y-6\">\n            {/* Bot Seçimi */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                <Bot className=\"inline mr-1\" size={16} />\n                Bot Seçin *\n              </label>\n              {loadingBots ? (\n                <div className=\"text-sm text-gray-500\">Yükleniyor...</div>\n              ) : bots.length === 0 ? (\n                <div className=\"bg-yellow-50 border rounded p-3\">\n                  <p className=\"text-sm text-yellow-800\">Bot eklenmemiş. Admin bot eklesin.</p>\n                </div>\n              ) : (\n                <select\n                  value={selectedBotId || ''}\n                  onChange={(e) => handleBotChange(Number(e.target.value))}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  required\n                >\n                  <option value=\"\">Seçin...</option>\n                  {bots.map((bot) => (\n                    <option key={bot.id} value={bot.id}>\n                      {bot.bot_name} (@{bot.bot_username})\n                    </option>\n                  ))}\n                </select>\n              )}\n            </div>\n\n            {/* Bulk Kanal Input */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                <Hash className=\"inline mr-1\" size={16} />\n                Kanallar (Her satıra bir tane) *\n              </label>\n              <textarea\n                value={channelInput}\n                onChange={(e) => setChannelInput(e.target.value)}\n                placeholder=\"Satır 1: @kanal1\nSatır 2: @kanal2\nSatır 3: https://t.me/kanal3\"\n                rows={8}\n                className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 resize-none\"\n                required\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Örn: Her satıra bir kanal username'i (@kanaladim) veya link. Toplu ekleme için ideal.\n              </p>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {parseChannels().length} kanal algılandı.\n              </p>\n            </div>\n\n            {/* Marka Seçimi */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Marka Seçin *</label>\n              <select\n                value={selectedBrandId}\n                onChange={(e) => setSelectedBrandId(Number(e.target.value))}\n                className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\"\n                required\n              >\n                <option value={0}>Seçin...</option>\n                {brands.map((brand) => (\n                  <option key={brand.id} value={brand.id}>\n                    {brand.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={loading || !selectedBotId || !channelInput.trim() || !selectedBrandId}\n              className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 disabled:opacity-50\"\n            >\n              {loading ? (\n                <span className=\"flex items-center justify-center gap-2\">\n                  <RefreshCw className=\"animate-spin h-4 w-4\" />\n                  Doğrulanıyor...\n                </span>\n              ) : (\n                'Kanalları Ekle'\n              )}\n            </button>\n          </form>\n        ) : (\n          // Bulk Sonuç\n          <div className=\"space-y-6\">\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n              <h3 className=\"font-semibold text-green-800\">Sonuç: {bulkResult.success_count} / {bulkResult.success_count + bulkResult.failed_count} Kanal Eklendi</h3>\n              <p className=\"text-sm text-green-700\">{bulkResult.message}</p>\n            </div>\n\n            {bulkResult.added_channels.length > 0 && (\n              <div className=\"bg-blue-50 border rounded-lg p-3\">\n                <h4 className=\"font-medium mb-2\">Eklenen Kanallar:</h4>\n                <ul className=\"text-sm space-y-1\">\n                  {bulkResult.added_channels.map((ch: any, idx: number) => (\n                    <li key={idx} className=\"flex items-center gap-2 text-green-600\">\n                      <CheckCircle size={16} />\n                      {ch.name || ch.username} ({ch.member_count} üye)\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {bulkResult.failed_channels.length > 0 && (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 space-y-3\">\n                <h4 className=\"font-medium text-yellow-800 flex items-center gap-2\">\n                  <AlertCircle size={18} />\n                  {bulkResult.failed_count} Başarısız Kanal\n                </h4>\n                <ul className=\"text-sm space-y-1\">\n                  {bulkResult.failed_channels.map((f: any, idx: number) => (\n                    <li key={idx} className=\"flex items-center gap-2 text-yellow-600\">\n                      <XCircle size={16} />\n                      @{f.username}: {f.reason}\n                    </li>\n                  ))}\n                </ul>\n                {bulkResult.instructions && (\n                  <div className=\"mt-3 p-3 bg-yellow-100 rounded\">\n                    <h5 className=\"font-medium mb-2\">Talimatlar:</h5>\n                    <ul className=\"text-xs space-y-1\">\n                      {bulkResult.instructions.map((instr: string, idx: number) => (\n                        <li key={idx}>• {instr}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                {bulkResult.failed_count > 5 && (\n                  <button\n                    onClick={exportFailedCSV}\n                    className=\"flex items-center gap-2 text-xs text-blue-600 hover:underline\"\n                  >\n                    <Download size={14} />\n                    Başarısızları CSV Olarak İndir\n                  </button>\n                )}\n              </div>\n            )}\n\n            <div className=\"flex gap-3 pt-4\">\n              <button\n                onClick={handleInstructionsConfirm}\n                className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n              >\n                Yeni Bulk Ekle\n              </button>\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400\"\n              >\n                Kapat\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicChannelModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}