{"ast":null,"code":"import _objectSpread from\"C:/Users/ilker/Desktop/aibrands/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext}from'react';import toast,{Toaster}from'react-hot-toast';import{CheckCircle,XCircle,Info,AlertTriangle,Loader}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext(undefined);export const useNotification=()=>{const context=useContext(NotificationContext);if(!context){throw new Error('useNotification must be used within NotificationProvider');}return context;};export const NotificationProvider=_ref=>{let{children}=_ref;const success=(message,options)=>{toast.success(message,_objectSpread({duration:4000,icon:/*#__PURE__*/_jsx(CheckCircle,{className:\"text-green-500\",size:20}),style:{borderRadius:'10px',background:'#333',color:'#fff'}},options));};const error=(message,options)=>{toast.error(message,_objectSpread({duration:5000,icon:/*#__PURE__*/_jsx(XCircle,{className:\"text-red-500\",size:20}),style:{borderRadius:'10px',background:'#333',color:'#fff'}},options));};const info=(message,options)=>{toast(message,_objectSpread({duration:4000,icon:/*#__PURE__*/_jsx(Info,{className:\"text-blue-500\",size:20}),style:{borderRadius:'10px',background:'#333',color:'#fff'}},options));};const warning=(message,options)=>{toast(message,_objectSpread({duration:4000,icon:/*#__PURE__*/_jsx(AlertTriangle,{className:\"text-yellow-500\",size:20}),style:{borderRadius:'10px',background:'#333',color:'#fff'}},options));};const loading=(message,options)=>{return toast.loading(message,_objectSpread({icon:/*#__PURE__*/_jsx(Loader,{className:\"text-blue-500 animate-spin\",size:20}),style:{borderRadius:'10px',background:'#333',color:'#fff'}},options));};const dismiss=toastId=>{if(toastId){toast.dismiss(toastId);}else{toast.dismiss();}};const promiseNotification=async(promise,messages)=>{return toast.promise(promise,{loading:messages.loading,success:messages.success,error:messages.error},{style:{borderRadius:'10px',background:'#333',color:'#fff'},success:{icon:/*#__PURE__*/_jsx(CheckCircle,{className:\"text-green-500\",size:20})},error:{icon:/*#__PURE__*/_jsx(XCircle,{className:\"text-red-500\",size:20})},loading:{icon:/*#__PURE__*/_jsx(Loader,{className:\"text-blue-500 animate-spin\",size:20})}});};return/*#__PURE__*/_jsxs(NotificationContext.Provider,{value:{success,error,info,warning,loading,dismiss,promise:promiseNotification},children:[children,/*#__PURE__*/_jsx(Toaster,{position:\"top-right\",reverseOrder:false,gutter:8,containerClassName:\"\",containerStyle:{},toastOptions:{className:'',duration:4000,style:{background:'#363636',color:'#fff'}}})]});};","map":{"version":3,"names":["React","createContext","useContext","toast","Toaster","CheckCircle","XCircle","Info","AlertTriangle","Loader","jsx","_jsx","jsxs","_jsxs","NotificationContext","undefined","useNotification","context","Error","NotificationProvider","_ref","children","success","message","options","_objectSpread","duration","icon","className","size","style","borderRadius","background","color","error","info","warning","loading","dismiss","toastId","promiseNotification","promise","messages","Provider","value","position","reverseOrder","gutter","containerClassName","containerStyle","toastOptions"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/context/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\r\nimport toast, { Toaster, Toast } from 'react-hot-toast';\r\nimport { CheckCircle, XCircle, Info, AlertTriangle, Loader } from 'lucide-react';\r\n\r\ninterface NotificationContextType {\r\n  success: (message: string, options?: Partial<Toast>) => void;\r\n  error: (message: string, options?: Partial<Toast>) => void;\r\n  info: (message: string, options?: Partial<Toast>) => void;\r\n  warning: (message: string, options?: Partial<Toast>) => void;\r\n  loading: (message: string, options?: Partial<Toast>) => string;\r\n  dismiss: (toastId?: string) => void;\r\n  promise: <T>(\r\n    promise: Promise<T>,\r\n    messages: {\r\n      loading: string;\r\n      success: string;\r\n      error: string;\r\n    }\r\n  ) => Promise<T>;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n  const success = (message: string, options?: Partial<Toast>) => {\r\n    toast.success(message, {\r\n      duration: 4000,\r\n      icon: <CheckCircle className=\"text-green-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const error = (message: string, options?: Partial<Toast>) => {\r\n    toast.error(message, {\r\n      duration: 5000,\r\n      icon: <XCircle className=\"text-red-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const info = (message: string, options?: Partial<Toast>) => {\r\n    toast(message, {\r\n      duration: 4000,\r\n      icon: <Info className=\"text-blue-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const warning = (message: string, options?: Partial<Toast>) => {\r\n    toast(message, {\r\n      duration: 4000,\r\n      icon: <AlertTriangle className=\"text-yellow-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const loading = (message: string, options?: Partial<Toast>): string => {\r\n    return toast.loading(message, {\r\n      icon: <Loader className=\"text-blue-500 animate-spin\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const dismiss = (toastId?: string) => {\r\n    if (toastId) {\r\n      toast.dismiss(toastId);\r\n    } else {\r\n      toast.dismiss();\r\n    }\r\n  };\r\n\r\n  const promiseNotification = async <T,>(\r\n    promise: Promise<T>,\r\n    messages: {\r\n      loading: string;\r\n      success: string;\r\n      error: string;\r\n    }\r\n  ): Promise<T> => {\r\n    return toast.promise(\r\n      promise,\r\n      {\r\n        loading: messages.loading,\r\n        success: messages.success,\r\n        error: messages.error,\r\n      },\r\n      {\r\n        style: {\r\n          borderRadius: '10px',\r\n          background: '#333',\r\n          color: '#fff',\r\n        },\r\n        success: {\r\n          icon: <CheckCircle className=\"text-green-500\" size={20} />,\r\n        },\r\n        error: {\r\n          icon: <XCircle className=\"text-red-500\" size={20} />,\r\n        },\r\n        loading: {\r\n          icon: <Loader className=\"text-blue-500 animate-spin\" size={20} />,\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        success,\r\n        error,\r\n        info,\r\n        warning,\r\n        loading,\r\n        dismiss,\r\n        promise: promiseNotification,\r\n      }}\r\n    >\r\n      {children}\r\n      <Toaster\r\n        position=\"top-right\"\r\n        reverseOrder={false}\r\n        gutter={8}\r\n        containerClassName=\"\"\r\n        containerStyle={{}}\r\n        toastOptions={{\r\n          className: '',\r\n          duration: 4000,\r\n          style: {\r\n            background: '#363636',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      />\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}