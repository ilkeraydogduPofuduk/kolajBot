{"ast":null,"code":"import api from'../utils/api';export const employeeRequestsAPI={// √áalƒ±≈üan ekleme talebi olu≈ütur\ncreateEmployeeRequest:async data=>{console.log('üîç SENDING EMPLOYEE REQUEST:',data);const response=await api.post('/api/employee-requests/',data);return response.data;},// √áalƒ±≈üan taleplerini listele\ngetEmployeeRequests:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let per_page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let status=arguments.length>2?arguments[2]:undefined;const params=new URLSearchParams({page:page.toString(),per_page:per_page.toString()});if(status){params.append('status',status);}const response=await api.get(\"/api/employee-requests/?\".concat(params));return response.data;},// Tek bir talebi getir\ngetEmployeeRequest:async id=>{const response=await api.get(\"/api/employee-requests/\".concat(id));return response.data;},// Talebi onayla (Super Admin)\napproveEmployeeRequest:async(id,admin_notes)=>{const response=await api.put(\"/api/employee-requests/\".concat(id,\"/approve\"),{admin_notes});return response.data;},// Talebi reddet (Super Admin)\nrejectEmployeeRequest:async(id,admin_notes)=>{const response=await api.put(\"/api/employee-requests/\".concat(id,\"/reject\"),{status:'rejected',admin_notes});return response.data;},// Talep bilgilerini g√ºncelle (Super Admin)\nupdateEmployeeRequest:async(id,requestData)=>{const response=await api.put(\"/api/employee-requests/\".concat(id),requestData);return response.data;},// Marka y√∂neticisi istatistikleri\ngetBrandManagerStats:async()=>{const response=await api.get('/api/employee-requests/stats/brand-manager');return response.data;}};","map":{"version":3,"names":["api","employeeRequestsAPI","createEmployeeRequest","data","console","log","response","post","getEmployeeRequests","page","arguments","length","undefined","per_page","status","params","URLSearchParams","toString","append","get","concat","getEmployeeRequest","id","approveEmployeeRequest","admin_notes","put","rejectEmployeeRequest","updateEmployeeRequest","requestData","getBrandManagerStats"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/employeeRequests.ts"],"sourcesContent":[" import api from '../utils/api';\n\nexport interface EmployeeRequest {\n  id: number;\n  requested_by_user_id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number?: string;\n  role_id: number;\n  brand_ids: number[];\n  status: 'pending' | 'approved' | 'rejected';\n  request_message?: string;\n  admin_notes?: string;\n  approved_by_user_id?: number;\n  approved_at?: string;\n  created_at: string;\n  updated_at: string;\n  requested_by_name?: string;\n  approved_by_name?: string;\n  role_name?: string;\n  brand_names: string[];\n  requested_by_brand_ids: number[];\n}\n\nexport interface EmployeeRequestCreate {\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number?: string;\n  role_id: number;\n  brand_ids: number[];\n  request_message?: string;\n}\n\nexport interface EmployeeRequestListResponse {\n  requests: EmployeeRequest[];\n  total: number;\n  page: number;\n  per_page: number;\n}\n\nexport interface BrandManagerStats {\n  total_employees: number;\n  active_employees: number;\n  pending_requests: number;\n  managed_brands_count: number;\n}\n\nexport const employeeRequestsAPI = {\n  // √áalƒ±≈üan ekleme talebi olu≈ütur\n  createEmployeeRequest: async (data: EmployeeRequestCreate): Promise<EmployeeRequest> => {\n    console.log('üîç SENDING EMPLOYEE REQUEST:', data);\n    const response = await api.post('/api/employee-requests/', data);\n    return response.data;\n  },\n\n  // √áalƒ±≈üan taleplerini listele\n  getEmployeeRequests: async (\n    page: number = 1,\n    per_page: number = 10,\n    status?: string\n  ): Promise<EmployeeRequestListResponse> => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      per_page: per_page.toString(),\n    });\n    \n    if (status) {\n      params.append('status', status);\n    }\n\n    const response = await api.get(`/api/employee-requests/?${params}`);\n    return response.data;\n  },\n\n  // Tek bir talebi getir\n  getEmployeeRequest: async (id: number): Promise<EmployeeRequest> => {\n    const response = await api.get(`/api/employee-requests/${id}`);\n    return response.data;\n  },\n\n  // Talebi onayla (Super Admin)\n  approveEmployeeRequest: async (id: number, admin_notes?: string): Promise<{ message: string }> => {\n    const response = await api.put(`/api/employee-requests/${id}/approve`, { admin_notes });\n    return response.data;\n  },\n\n  // Talebi reddet (Super Admin)\n  rejectEmployeeRequest: async (id: number, admin_notes: string): Promise<{ message: string }> => {\n    const response = await api.put(`/api/employee-requests/${id}/reject`, { \n      status: 'rejected',\n      admin_notes \n    });\n    return response.data;\n  },\n\n  // Talep bilgilerini g√ºncelle (Super Admin)\n  updateEmployeeRequest: async (id: number, requestData: EmployeeRequestCreate): Promise<EmployeeRequest> => {\n    const response = await api.put(`/api/employee-requests/${id}`, requestData);\n    return response.data;\n  },\n\n  // Marka y√∂neticisi istatistikleri\n  getBrandManagerStats: async (): Promise<BrandManagerStats> => {\n    const response = await api.get('/api/employee-requests/stats/brand-manager');\n    return response.data;\n  },\n\n};\n"],"mappings":"AAAC,MAAO,CAAAA,GAAG,KAAM,cAAc,CAiD/B,MAAO,MAAM,CAAAC,mBAAmB,CAAG,CACjC;AACAC,qBAAqB,CAAE,KAAO,CAAAC,IAA2B,EAA+B,CACtFC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEF,IAAI,CAAC,CACjD,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,yBAAyB,CAAEJ,IAAI,CAAC,CAChE,MAAO,CAAAG,QAAQ,CAACH,IAAI,CACtB,CAAC,CAED;AACAK,mBAAmB,CAAE,cAAAA,CAAA,CAIsB,IAHzC,CAAAC,IAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAChB,CAAAG,QAAgB,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IACrB,CAAAI,MAAe,CAAAJ,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAEf,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CACjCP,IAAI,CAAEA,IAAI,CAACQ,QAAQ,CAAC,CAAC,CACrBJ,QAAQ,CAAEA,QAAQ,CAACI,QAAQ,CAAC,CAC9B,CAAC,CAAC,CAEF,GAAIH,MAAM,CAAE,CACVC,MAAM,CAACG,MAAM,CAAC,QAAQ,CAAEJ,MAAM,CAAC,CACjC,CAEA,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACmB,GAAG,4BAAAC,MAAA,CAA4BL,MAAM,CAAE,CAAC,CACnE,MAAO,CAAAT,QAAQ,CAACH,IAAI,CACtB,CAAC,CAED;AACAkB,kBAAkB,CAAE,KAAO,CAAAC,EAAU,EAA+B,CAClE,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACmB,GAAG,2BAAAC,MAAA,CAA2BE,EAAE,CAAE,CAAC,CAC9D,MAAO,CAAAhB,QAAQ,CAACH,IAAI,CACtB,CAAC,CAED;AACAoB,sBAAsB,CAAE,KAAAA,CAAOD,EAAU,CAAEE,WAAoB,GAAmC,CAChG,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACyB,GAAG,2BAAAL,MAAA,CAA2BE,EAAE,aAAY,CAAEE,WAAY,CAAC,CAAC,CACvF,MAAO,CAAAlB,QAAQ,CAACH,IAAI,CACtB,CAAC,CAED;AACAuB,qBAAqB,CAAE,KAAAA,CAAOJ,EAAU,CAAEE,WAAmB,GAAmC,CAC9F,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACyB,GAAG,2BAAAL,MAAA,CAA2BE,EAAE,YAAW,CACpER,MAAM,CAAE,UAAU,CAClBU,WACF,CAAC,CAAC,CACF,MAAO,CAAAlB,QAAQ,CAACH,IAAI,CACtB,CAAC,CAED;AACAwB,qBAAqB,CAAE,KAAAA,CAAOL,EAAU,CAAEM,WAAkC,GAA+B,CACzG,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACyB,GAAG,2BAAAL,MAAA,CAA2BE,EAAE,EAAIM,WAAW,CAAC,CAC3E,MAAO,CAAAtB,QAAQ,CAACH,IAAI,CACtB,CAAC,CAED;AACA0B,oBAAoB,CAAE,KAAAA,CAAA,GAAwC,CAC5D,KAAM,CAAAvB,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACmB,GAAG,CAAC,4CAA4C,CAAC,CAC5E,MAAO,CAAAb,QAAQ,CAACH,IAAI,CACtB,CAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}