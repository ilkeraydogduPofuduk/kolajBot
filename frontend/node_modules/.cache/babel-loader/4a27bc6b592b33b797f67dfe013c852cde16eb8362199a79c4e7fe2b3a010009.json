{"ast":null,"code":"/**\r\n * API Utility Functions\r\n * Centralized API client for frontend\r\n */import axios from'axios';import{configManager}from'../core/config';import{showApiErrorOverlay,hideApiErrorOverlay}from'./apiErrorOverlay';class APIClient{constructor(){this.instance=void 0;const config=configManager.getConfig();this.instance=axios.create({baseURL:config.app.backendUrl,timeout:30000,headers:{'Content-Type':'application/json','Accept':'application/json'}});this.setupInterceptors();}setupInterceptors(){// Request interceptor\nthis.instance.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor with token refresh\nthis.instance.interceptors.response.use(response=>{hideApiErrorOverlay();return response;},async error=>{var _error$response,_error$response2,_error$response3;const originalRequest=error.config;// Token refresh logic\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refresh_token');if(refreshToken){// Refresh token\nconst response=await axios.post(\"\".concat(this.instance.defaults.baseURL,\"/api/auth/refresh\"),{refresh_token:refreshToken});const newAccessToken=response.data.access_token;localStorage.setItem('access_token',newAccessToken);// Retry original request with new token\noriginalRequest.headers.Authorization=\"Bearer \".concat(newAccessToken);return this.instance(originalRequest);}}catch(refreshError){// Refresh failed, logout\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');window.location.href='/login';return Promise.reject(refreshError);}}// Original 401 handling (if no refresh token)\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');window.location.href='/login';}if((_error$response3=error.response)!==null&&_error$response3!==void 0&&_error$response3.status&&error.response.status>=500){var _error$response$data;const detail=(_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail;const message=typeof detail==='string'&&detail.trim().length>0?detail:'Sunucu beklenmedik bir hata döndürdü. Lütfen sistem yöneticinize haber verin.';showApiErrorOverlay(message,()=>window.location.reload());}return Promise.reject(error);});}async get(url,config){return this.instance.get(url,config);}async post(url,data,config){return this.instance.post(url,data,config);}async put(url,data,config){return this.instance.put(url,data,config);}async delete(url,config){return this.instance.delete(url,config);}async patch(url,data,config){return this.instance.patch(url,data,config);}}export default new APIClient();","map":{"version":3,"names":["axios","configManager","showApiErrorOverlay","hideApiErrorOverlay","APIClient","constructor","instance","config","getConfig","create","baseURL","app","backendUrl","timeout","headers","setupInterceptors","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","_error$response2","_error$response3","originalRequest","status","_retry","refreshToken","post","defaults","refresh_token","newAccessToken","data","access_token","setItem","refreshError","removeItem","window","location","href","_error$response$data","detail","message","trim","length","reload","get","url","put","delete","patch"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/utils/api.ts"],"sourcesContent":["/**\r\n * API Utility Functions\r\n * Centralized API client for frontend\r\n */\r\n\r\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { configManager } from '../core/config';\nimport { showApiErrorOverlay, hideApiErrorOverlay } from './apiErrorOverlay';\n\r\nclass APIClient {\r\n  private instance: AxiosInstance;\r\n\r\n  constructor() {\r\n    const config = configManager.getConfig();\r\n    \r\n    this.instance = axios.create({\r\n      baseURL: config.app.backendUrl,\r\n      timeout: 30000,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n    });\r\n\r\n    this.setupInterceptors();\r\n  }\r\n\r\n  private setupInterceptors(): void {\r\n    // Request interceptor\r\n    this.instance.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('access_token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Response interceptor with token refresh\n    this.instance.interceptors.response.use(\n      (response) => {\n        hideApiErrorOverlay();\n        return response;\n      },\n      async (error) => {\n        const originalRequest = error.config;\n        \n        // Token refresh logic\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n          \n          try {\n            const refreshToken = localStorage.getItem('refresh_token');\n            if (refreshToken) {\n              // Refresh token\n              const response = await axios.post(`${this.instance.defaults.baseURL}/api/auth/refresh`, {\n                refresh_token: refreshToken\n              });\n              \n              const newAccessToken = response.data.access_token;\n              localStorage.setItem('access_token', newAccessToken);\n              \n              // Retry original request with new token\n              originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n              return this.instance(originalRequest);\n            }\n          } catch (refreshError) {\n            // Refresh failed, logout\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('refresh_token');\n            window.location.href = '/login';\n            return Promise.reject(refreshError);\n          }\n        }\n        \n        // Original 401 handling (if no refresh token)\n        if (error.response?.status === 401) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          window.location.href = '/login';\n        }\n\n        if (error.response?.status && error.response.status >= 500) {\n          const detail = error.response.data?.detail;\n          const message =\n            typeof detail === 'string' && detail.trim().length > 0\n              ? detail\n              : 'Sunucu beklenmedik bir hata döndürdü. Lütfen sistem yöneticinize haber verin.';\n\n          showApiErrorOverlay(message, () => window.location.reload());\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  }\n\r\n  async get<T = any>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\r\n    return this.instance.get(url, config);\r\n  }\r\n\r\n  async post<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\r\n    return this.instance.post(url, data, config);\r\n  }\r\n\r\n  async put<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\r\n    return this.instance.put(url, data, config);\r\n  }\r\n\r\n  async delete<T = any>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\r\n    return this.instance.delete(url, config);\r\n  }\r\n\r\n  async patch<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\r\n    return this.instance.patch(url, data, config);\r\n  }\r\n}\r\n\r\nexport default new APIClient();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}