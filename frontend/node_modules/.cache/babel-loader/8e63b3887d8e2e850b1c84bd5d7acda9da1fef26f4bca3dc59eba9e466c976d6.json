{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilker\\\\Desktop\\\\aibrands\\\\frontend\\\\src\\\\context\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { CheckCircle, XCircle, Info, AlertTriangle, Loader } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext(undefined);\nexport const useNotification = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within NotificationProvider');\n  }\n  return context;\n};\n_s(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  const success = (message, options) => {\n    toast.success(message, {\n      duration: 4000,\n      icon: /*#__PURE__*/_jsxDEV(CheckCircle, {\n        className: \"text-green-500\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this),\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff'\n      },\n      ...options\n    });\n  };\n  const error = (message, options) => {\n    toast.error(message, {\n      duration: 5000,\n      icon: /*#__PURE__*/_jsxDEV(XCircle, {\n        className: \"text-red-500\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this),\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff'\n      },\n      ...options\n    });\n  };\n  const info = (message, options) => {\n    toast(message, {\n      duration: 4000,\n      icon: /*#__PURE__*/_jsxDEV(Info, {\n        className: \"text-blue-500\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this),\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff'\n      },\n      ...options\n    });\n  };\n  const warning = (message, options) => {\n    toast(message, {\n      duration: 4000,\n      icon: /*#__PURE__*/_jsxDEV(AlertTriangle, {\n        className: \"text-yellow-500\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this),\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff'\n      },\n      ...options\n    });\n  };\n  const loading = (message, options) => {\n    return toast.loading(message, {\n      icon: /*#__PURE__*/_jsxDEV(Loader, {\n        className: \"text-blue-500 animate-spin\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this),\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff'\n      },\n      ...options\n    });\n  };\n  const dismiss = toastId => {\n    if (toastId) {\n      toast.dismiss(toastId);\n    } else {\n      toast.dismiss();\n    }\n  };\n  const promiseNotification = async (promise, messages) => {\n    return toast.promise(promise, {\n      loading: messages.loading,\n      success: messages.success,\n      error: messages.error\n    }, {\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff'\n      },\n      success: {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"text-green-500\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      },\n      error: {\n        icon: /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"text-red-500\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      },\n      loading: {\n        icon: /*#__PURE__*/_jsxDEV(Loader, {\n          className: \"text-blue-500 animate-spin\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      success,\n      error,\n      info,\n      warning,\n      loading,\n      dismiss,\n      promise: promiseNotification\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\",\n      reverseOrder: false,\n      gutter: 8,\n      containerClassName: \"\",\n      containerStyle: {},\n      toastOptions: {\n        className: '',\n        duration: 4000,\n        style: {\n          background: '#363636',\n          color: '#fff'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","toast","Toaster","CheckCircle","XCircle","Info","AlertTriangle","Loader","jsxDEV","_jsxDEV","NotificationContext","undefined","useNotification","_s","context","Error","NotificationProvider","children","success","message","options","duration","icon","className","size","fileName","_jsxFileName","lineNumber","columnNumber","style","borderRadius","background","color","error","info","warning","loading","dismiss","toastId","promiseNotification","promise","messages","Provider","value","position","reverseOrder","gutter","containerClassName","containerStyle","toastOptions","_c","$RefreshReg$"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/context/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\r\nimport toast, { Toaster, Toast } from 'react-hot-toast';\r\nimport { CheckCircle, XCircle, Info, AlertTriangle, Loader } from 'lucide-react';\r\n\r\ninterface NotificationContextType {\r\n  success: (message: string, options?: Partial<Toast>) => void;\r\n  error: (message: string, options?: Partial<Toast>) => void;\r\n  info: (message: string, options?: Partial<Toast>) => void;\r\n  warning: (message: string, options?: Partial<Toast>) => void;\r\n  loading: (message: string, options?: Partial<Toast>) => string;\r\n  dismiss: (toastId?: string) => void;\r\n  promise: <T>(\r\n    promise: Promise<T>,\r\n    messages: {\r\n      loading: string;\r\n      success: string;\r\n      error: string;\r\n    }\r\n  ) => Promise<T>;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n  const success = (message: string, options?: Partial<Toast>) => {\r\n    toast.success(message, {\r\n      duration: 4000,\r\n      icon: <CheckCircle className=\"text-green-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const error = (message: string, options?: Partial<Toast>) => {\r\n    toast.error(message, {\r\n      duration: 5000,\r\n      icon: <XCircle className=\"text-red-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const info = (message: string, options?: Partial<Toast>) => {\r\n    toast(message, {\r\n      duration: 4000,\r\n      icon: <Info className=\"text-blue-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const warning = (message: string, options?: Partial<Toast>) => {\r\n    toast(message, {\r\n      duration: 4000,\r\n      icon: <AlertTriangle className=\"text-yellow-500\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const loading = (message: string, options?: Partial<Toast>): string => {\r\n    return toast.loading(message, {\r\n      icon: <Loader className=\"text-blue-500 animate-spin\" size={20} />,\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#333',\r\n        color: '#fff',\r\n      },\r\n      ...options\r\n    });\r\n  };\r\n\r\n  const dismiss = (toastId?: string) => {\r\n    if (toastId) {\r\n      toast.dismiss(toastId);\r\n    } else {\r\n      toast.dismiss();\r\n    }\r\n  };\r\n\r\n  const promiseNotification = async <T,>(\r\n    promise: Promise<T>,\r\n    messages: {\r\n      loading: string;\r\n      success: string;\r\n      error: string;\r\n    }\r\n  ): Promise<T> => {\r\n    return toast.promise(\r\n      promise,\r\n      {\r\n        loading: messages.loading,\r\n        success: messages.success,\r\n        error: messages.error,\r\n      },\r\n      {\r\n        style: {\r\n          borderRadius: '10px',\r\n          background: '#333',\r\n          color: '#fff',\r\n        },\r\n        success: {\r\n          icon: <CheckCircle className=\"text-green-500\" size={20} />,\r\n        },\r\n        error: {\r\n          icon: <XCircle className=\"text-red-500\" size={20} />,\r\n        },\r\n        loading: {\r\n          icon: <Loader className=\"text-blue-500 animate-spin\" size={20} />,\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        success,\r\n        error,\r\n        info,\r\n        warning,\r\n        loading,\r\n        dismiss,\r\n        promise: promiseNotification,\r\n      }}\r\n    >\r\n      {children}\r\n      <Toaster\r\n        position=\"top-right\"\r\n        reverseOrder={false}\r\n        gutter={8}\r\n        containerClassName=\"\"\r\n        containerStyle={{}}\r\n        toastOptions={{\r\n          className: '',\r\n          duration: 4000,\r\n          style: {\r\n            background: '#363636',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      />\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}