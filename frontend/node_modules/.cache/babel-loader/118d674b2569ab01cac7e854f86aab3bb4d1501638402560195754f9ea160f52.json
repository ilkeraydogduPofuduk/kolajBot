{"ast":null,"code":"import api from '../utils/api';\nexport const categoriesAPI = {\n  // Kategorileri listele (sayfalama ile)\n  getCategories: async (params = {}) => {\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.append('page', params.page.toString());\n    if (params.per_page) searchParams.append('per_page', params.per_page.toString());\n    if (params.search) searchParams.append('search', params.search);\n    if (params.is_active !== undefined) searchParams.append('is_active', params.is_active.toString());\n    const response = await api.get(`/api/categories/?${searchParams.toString()}`);\n    return response.data;\n  },\n  // Tüm aktif kategorileri getir (dropdown için)\n  getAllActiveCategories: async () => {\n    const response = await api.get('/api/categories-public/active');\n    return response.data;\n  },\n  // Kategori detayını getir\n  getCategory: async id => {\n    const response = await api.get(`/api/categories/${id}`);\n    return response.data;\n  },\n  // Yeni kategori oluştur\n  createCategory: async data => {\n    const response = await api.post('/api/categories/', data);\n    return response.data;\n  },\n  // Kategori güncelle\n  updateCategory: async (id, data) => {\n    const response = await api.put(`/api/categories/${id}`, data);\n    return response.data;\n  },\n  // Kategori sil\n  deleteCategory: async id => {\n    await api.delete(`/api/categories/${id}`);\n  },\n  // Kategori aktiflik durumunu değiştir\n  toggleCategoryStatus: async id => {\n    const response = await api.patch(`/api/categories/${id}/toggle-status`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","categoriesAPI","getCategories","params","searchParams","URLSearchParams","page","append","toString","per_page","search","is_active","undefined","response","get","data","getAllActiveCategories","getCategory","id","createCategory","post","updateCategory","put","deleteCategory","delete","toggleCategoryStatus","patch"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/categories.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport interface Category {\r\n  id: number;\r\n  name: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface CategoryCreate {\r\n  name: string;\r\n}\r\n\r\nexport interface CategoryUpdate {\r\n  name?: string;\r\n  is_active?: boolean;\r\n}\r\n\r\nexport interface CategoriesResponse {\r\n  categories: Category[];\r\n  pagination: {\r\n    page: number;\r\n    per_page: number;\r\n    total: number;\r\n    pages: number;\r\n  };\r\n}\r\n\r\nexport const categoriesAPI = {\r\n  // Kategorileri listele (sayfalama ile)\r\n  getCategories: async (params: {\r\n    page?: number;\r\n    per_page?: number;\r\n    search?: string;\r\n    is_active?: boolean;\r\n  } = {}): Promise<CategoriesResponse> => {\r\n    const searchParams = new URLSearchParams();\r\n    \r\n    if (params.page) searchParams.append('page', params.page.toString());\r\n    if (params.per_page) searchParams.append('per_page', params.per_page.toString());\r\n    if (params.search) searchParams.append('search', params.search);\r\n    if (params.is_active !== undefined) searchParams.append('is_active', params.is_active.toString());\r\n\r\n    const response = await api.get(`/api/categories/?${searchParams.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Tüm aktif kategorileri getir (dropdown için)\r\n  getAllActiveCategories: async (): Promise<Category[]> => {\r\n    const response = await api.get('/api/categories-public/active');\r\n    return response.data;\r\n  },\r\n\r\n  // Kategori detayını getir\r\n  getCategory: async (id: number): Promise<Category> => {\r\n    const response = await api.get(`/api/categories/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Yeni kategori oluştur\r\n  createCategory: async (data: CategoryCreate): Promise<Category> => {\r\n    const response = await api.post('/api/categories/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Kategori güncelle\r\n  updateCategory: async (id: number, data: CategoryUpdate): Promise<Category> => {\r\n    const response = await api.put(`/api/categories/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Kategori sil\r\n  deleteCategory: async (id: number): Promise<void> => {\r\n    await api.delete(`/api/categories/${id}`);\r\n  },\r\n\r\n  // Kategori aktiflik durumunu değiştir\r\n  toggleCategoryStatus: async (id: number): Promise<Category> => {\r\n    const response = await api.patch(`/api/categories/${id}/toggle-status`);\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AA6B9B,OAAO,MAAMC,aAAa,GAAG;EAC3B;EACAC,aAAa,EAAE,MAAAA,CAAOC,MAKrB,GAAG,CAAC,CAAC,KAAkC;IACtC,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAAC,CAAC;IAE1C,IAAIF,MAAM,CAACG,IAAI,EAAEF,YAAY,CAACG,MAAM,CAAC,MAAM,EAAEJ,MAAM,CAACG,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;IACpE,IAAIL,MAAM,CAACM,QAAQ,EAAEL,YAAY,CAACG,MAAM,CAAC,UAAU,EAAEJ,MAAM,CAACM,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;IAChF,IAAIL,MAAM,CAACO,MAAM,EAAEN,YAAY,CAACG,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAACO,MAAM,CAAC;IAC/D,IAAIP,MAAM,CAACQ,SAAS,KAAKC,SAAS,EAAER,YAAY,CAACG,MAAM,CAAC,WAAW,EAAEJ,MAAM,CAACQ,SAAS,CAACH,QAAQ,CAAC,CAAC,CAAC;IAEjG,MAAMK,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,oBAAoBV,YAAY,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC7E,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,sBAAsB,EAAE,MAAAA,CAAA,KAAiC;IACvD,MAAMH,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,+BAA+B,CAAC;IAC/D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAE,WAAW,EAAE,MAAOC,EAAU,IAAwB;IACpD,MAAML,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,mBAAmBI,EAAE,EAAE,CAAC;IACvD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAI,cAAc,EAAE,MAAOJ,IAAoB,IAAwB;IACjE,MAAMF,QAAQ,GAAG,MAAMb,GAAG,CAACoB,IAAI,CAAC,kBAAkB,EAAEL,IAAI,CAAC;IACzD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,cAAc,EAAE,MAAAA,CAAOH,EAAU,EAAEH,IAAoB,KAAwB;IAC7E,MAAMF,QAAQ,GAAG,MAAMb,GAAG,CAACsB,GAAG,CAAC,mBAAmBJ,EAAE,EAAE,EAAEH,IAAI,CAAC;IAC7D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAQ,cAAc,EAAE,MAAOL,EAAU,IAAoB;IACnD,MAAMlB,GAAG,CAACwB,MAAM,CAAC,mBAAmBN,EAAE,EAAE,CAAC;EAC3C,CAAC;EAED;EACAO,oBAAoB,EAAE,MAAOP,EAAU,IAAwB;IAC7D,MAAML,QAAQ,GAAG,MAAMb,GAAG,CAAC0B,KAAK,CAAC,mBAAmBR,EAAE,gBAAgB,CAAC;IACvE,OAAOL,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}