{"ast":null,"code":"import api from'../utils/api';export const systemAPI={getStats:async()=>{const response=await api.get('/api/system/stats');return response.data;},getHealth:async()=>{const response=await api.get('/api/system/health');return response.data;},getDashboardStats:async()=>{const response=await api.get('/api/system/dashboard-stats');return response.data;},getMyStats:async()=>{const response=await api.get('/api/system/my-stats');return response.data;}};","map":{"version":3,"names":["api","systemAPI","getStats","response","get","data","getHealth","getDashboardStats","getMyStats"],"sources":["C:/Users/ilker/Desktop/aibrands/frontend/src/api/system.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport interface SystemStats {\r\n  cpu: {\r\n    usage_percent: number;\r\n    core_count: number;\r\n  };\r\n  memory: {\r\n    total_gb: number;\r\n    used_gb: number;\r\n    usage_percent: number;\r\n  };\r\n  disk: {\r\n    total_gb: number;\r\n    used_gb: number;\r\n    usage_percent: number;\r\n  };\r\n  gpu?: {\r\n    name: string;\r\n    memory_used: number;\r\n    memory_total: number;\r\n    memory_percent: number;\r\n    temperature: number;\r\n    load: number;\r\n  } | null;\r\n  system: {\r\n    platform: string;\r\n    platform_version: string;\r\n    python_version: string;\r\n    uptime: string;\r\n  };\r\n  timestamp: string;\r\n}\r\n\r\nexport interface SystemHealth {\r\n  status: string;\r\n  timestamp: string;\r\n  uptime: string;\r\n}\r\n\r\nexport interface DashboardStats {\r\n  users: {\r\n    total: number;\r\n    active: number;\r\n    super_admins: number;\r\n    brand_managers: number;\r\n    employees: number;\r\n  };\r\n  brands: {\r\n    total: number;\r\n    active: number;\r\n  };\r\n  channels: {\r\n    total: number;\r\n    active: number;\r\n    by_platform: Record<string, number>;\r\n    total_messages: number;\r\n  };\r\n  employee_requests: {\r\n    total: number;\r\n    pending: number;\r\n    approved: number;\r\n    rejected: number;\r\n  };\r\n  roles: {\r\n    total: number;\r\n    active: number;\r\n  };\r\n  products: {\r\n    total: number;\r\n    total_files: number;\r\n    total_storage_gb: number;\r\n  };\r\n  timestamp: string;\r\n}\r\n\r\nexport interface MyStats {\r\n  my_products: number;\r\n  my_files: number;\r\n  my_storage_gb: number;\r\n  brand_products?: number;\r\n  brand_files?: number;\r\n  brand_storage_gb?: number;\r\n  my_employees?: number;\r\n  my_brands?: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport const systemAPI = {\r\n  getStats: async (): Promise<SystemStats> => {\r\n    const response = await api.get('/api/system/stats');\r\n    return response.data;\r\n  },\r\n\r\n  getHealth: async (): Promise<SystemHealth> => {\r\n    const response = await api.get('/api/system/health');\r\n    return response.data;\r\n  },\r\n\r\n  getDashboardStats: async (): Promise<DashboardStats> => {\r\n    const response = await api.get('/api/system/dashboard-stats');\r\n    return response.data;\r\n  },\r\n\r\n  getMyStats: async (): Promise<MyStats> => {\r\n    const response = await api.get('/api/system/my-stats');\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,cAAc,CAwF9B,MAAO,MAAM,CAAAC,SAAS,CAAG,CACvBC,QAAQ,CAAE,KAAAA,CAAA,GAAkC,CAC1C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,mBAAmB,CAAC,CACnD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDC,SAAS,CAAE,KAAAA,CAAA,GAAmC,CAC5C,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,oBAAoB,CAAC,CACpD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDE,iBAAiB,CAAE,KAAAA,CAAA,GAAqC,CACtD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,6BAA6B,CAAC,CAC7D,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDG,UAAU,CAAE,KAAAA,CAAA,GAA8B,CACxC,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,sBAAsB,CAAC,CACtD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}